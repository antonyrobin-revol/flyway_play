SET NUMERIC_ROUNDABORT OFF
GO
SET ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
PRINT N'Creating [dbo].[ReportConfiguration]'
GO
CREATE TABLE [dbo].[ReportConfiguration]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[Name] [NVARCHAR] (1000) NOT NULL,
[Title] [NVARCHAR] (1000) NOT NULL,
[ModuleID] [INT] NULL,
[FormID] [INT] NULL,
[DBConnection] [INT] NOT NULL CONSTRAINT [DF_ReportConfiguration_DBConnection] DEFAULT ((0)),
[Source] [INT] NULL,
[SpName] [VARCHAR] (255) NULL,
[ViewName] [VARCHAR] (255) NULL,
[TableName] [VARCHAR] (255) NULL,
[Query] [NVARCHAR] (max) NULL,
[DefaultReportType] [INT] NULL,
[PivotReport] [BIT] NULL CONSTRAINT [DF_ReportConfiguration_PivotReport] DEFAULT ((0)),
[Header] [BIGINT] NULL,
[Footer] [BIGINT] NULL,
[Status] [INT] NOT NULL,
[IsMainMenu] [BIT] NULL CONSTRAINT [DF__ReportCon__IsMai__3AE718ED] DEFAULT ((0)),
[MainMenuOrder] [INT] NULL,
[GridTypeID] [INT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportConfiguration_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportConfiguration_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ReportConfiguration_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ReportConfiguration_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ReportConfiguration_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ReportConfiguration_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_ReportConfiguration] on [dbo].[ReportConfiguration]'
GO
ALTER TABLE [dbo].[ReportConfiguration] ADD CONSTRAINT [PK_ReportConfiguration] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_ReportConfiguration] on [dbo].[ReportConfiguration]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportConfiguration] ON [dbo].[ReportConfiguration] ([Name], [ModuleID])
GO
PRINT N'Creating [dbo].[RepDependentColumnConfig]'
GO
CREATE TABLE [dbo].[RepDependentColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[ReportID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[Name] [VARCHAR] (255) NOT NULL,
[TableColumn] [NVARCHAR] (500) NULL,
[ControlType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[Search] [BIT] NULL,
[DataType] [INT] NOT NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_RepDependentColumnConfig_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__RepDepend__Depen__446D937F] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_FkVersion] DEFAULT ((0)),
[SearchOrder] [INT] NULL,
[DependentType] [SMALLINT] NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [SMALLINT] NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_IsDmlControl] DEFAULT ((0)),
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [VARCHAR] (max) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_RepDependentColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_RepDependentColumnConfig] on [dbo].[RepDependentColumnConfig]'
GO
ALTER TABLE [dbo].[RepDependentColumnConfig] ADD CONSTRAINT [PK_RepDependentColumnConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_RepDependentColumnConfig] on [dbo].[RepDependentColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_RepDependentColumnConfig] ON [dbo].[RepDependentColumnConfig] ([ReportID], [TableColumn])
GO
PRINT N'Creating [dbo].[RepDependentColumnProcess]'
GO
CREATE TABLE [dbo].[RepDependentColumnProcess]
(
[UserID] [INT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[ReportID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [sys].[sysname] NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_RepDependentColumnProcess_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__RepDepend__Depen__CB4DD52] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_RepDependentColumnProcess_FkVersion] DEFAULT ((0)),
[SearchOrder] [SMALLINT] NOT NULL,
[DependentType] [SMALLINT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [VARCHAR] (max) NULL
)
GO
PRINT N'Creating index [IDX_RepDependentColumnProcess] on [dbo].[RepDependentColumnProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_RepDependentColumnProcess] ON [dbo].[RepDependentColumnProcess] ([ReportID], [UserID], [ControlID], [TableColumn])
GO
PRINT N'Creating [dbo].[ReportPivotResultColumnConfig]'
GO
CREATE TABLE [dbo].[ReportPivotResultColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[UserID] [BIGINT] NOT NULL,
[ReportID] [BIGINT] NOT NULL,
[DashboardID] [BIGINT] NOT NULL CONSTRAINT [DF__ReportPiv__Dashb__6C704015] DEFAULT ((0)),
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Grid] [BIT] NULL,
[Excel] [BIT] NULL,
[Pdf] [BIT] NULL,
[ColumnOrder] [INT] NULL,
[ResultOrder] [INT] NULL,
[OrderType] [INT] NULL,
[DataType] [INT] NULL,
[IsSummary] [BIT] NULL,
[SummaryType] [INT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportPivotResultColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportPivotResultColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ReportPivotResultColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ReportPivotResultColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ReportPivotResultColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ReportPivotResultColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_ReportPivotResultColumnConfig] on [dbo].[ReportPivotResultColumnConfig]'
GO
ALTER TABLE [dbo].[ReportPivotResultColumnConfig] ADD CONSTRAINT [PK_ReportPivotResultColumnConfig] PRIMARY KEY CLUSTERED ([ReportID], [ReferenceID])
GO
PRINT N'Creating index [IDX_ReportPivotResultColumnConfig] on [dbo].[ReportPivotResultColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportPivotResultColumnConfig] ON [dbo].[ReportPivotResultColumnConfig] ([ReportID], [UserID], [ColumnName])
GO
PRINT N'Creating [dbo].[ReportPivotSearchColumnConfig]'
GO
CREATE TABLE [dbo].[ReportPivotSearchColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[UserID] [BIGINT] NOT NULL,
[ReportID] [BIGINT] NOT NULL,
[DashboardID] [BIGINT] NOT NULL CONSTRAINT [DF__ReportPiv__Dashb__4389CBDE] DEFAULT ((0)),
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Search] [BIT] NULL,
[SearchOrder] [INT] NULL,
[ControlType] [INT] NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[DataType] [INT] NULL,
[DefaultValue] [NVARCHAR] (1000) NULL,
[MaxRange] [NVARCHAR] (1000) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportPivotSearchColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportPivotSearchColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ReportPivotSearchColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ReportPivotSearchColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ReportPivotSearchColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ReportPivotSearchColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_ReportPivotSearchColumnConfig] on [dbo].[ReportPivotSearchColumnConfig]'
GO
ALTER TABLE [dbo].[ReportPivotSearchColumnConfig] ADD CONSTRAINT [PK_ReportPivotSearchColumnConfig] PRIMARY KEY CLUSTERED ([ReportID], [ReferenceID])
GO
PRINT N'Creating index [IDX_ReportPivotSearchColumnConfig] on [dbo].[ReportPivotSearchColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportPivotSearchColumnConfig] ON [dbo].[ReportPivotSearchColumnConfig] ([ReportID], [UserID], [ColumnName])
GO
PRINT N'Creating [dbo].[ReportResultColumnConfig]'
GO
CREATE TABLE [dbo].[ReportResultColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[ReportID] [BIGINT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Grid] [BIT] NULL,
[Excel] [BIT] NULL,
[Pdf] [BIT] NULL,
[ColumnOrder] [INT] NULL,
[ResultOrder] [INT] NULL,
[OrderType] [INT] NULL,
[DataType] [INT] NULL,
[IsSummary] [BIT] NULL,
[SummaryType] [INT] NULL,
[ReportType] [INT] NOT NULL CONSTRAINT [DF__ReportRes__Repor__6C58CBAF] DEFAULT ((1)),
[DashboardID] [BIGINT] NOT NULL CONSTRAINT [DF__ReportRes__Dashb__1098BF56] DEFAULT ((0)),
[ReportDataSourceID] [BIGINT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportResultColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportResultColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ReportResultColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ReportResultColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ReportResultColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ReportResultColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[DecimalLength] [SMALLINT] NULL,
[IsMobile] [BIT] NULL,
[ColumnWidth] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_ReportResultColumnConfig] on [dbo].[ReportResultColumnConfig]'
GO
ALTER TABLE [dbo].[ReportResultColumnConfig] ADD CONSTRAINT [PK_ReportResultColumnConfig] PRIMARY KEY CLUSTERED ([ReportID], [ReferenceID])
GO
PRINT N'Creating index [IDX_ReportResultColumnConfig] on [dbo].[ReportResultColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportResultColumnConfig] ON [dbo].[ReportResultColumnConfig] ([ReportID], [ColumnName])
GO
PRINT N'Creating [dbo].[ReportResultColumnProcess]'
GO
CREATE TABLE [dbo].[ReportResultColumnProcess]
(
[ReportID] [BIGINT] NOT NULL,
[UserID] [INT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Grid] [BIT] NULL,
[Excel] [BIT] NULL,
[Pdf] [BIT] NULL,
[ColumnOrder] [INT] NULL,
[ResultOrder] [INT] NULL,
[OrderType] [INT] NULL,
[DataType] [INT] NULL,
[IsSummary] [BIT] NULL,
[SummaryType] [INT] NULL,
[ReportType] [INT] NOT NULL CONSTRAINT [DF__ReportRes__Repor__6E85CF4E] DEFAULT ((1)),
[DashboardID] [BIGINT] NOT NULL CONSTRAINT [DF__ReportRes__Dashb__7EFD2C63] DEFAULT ((0)),
[DecimalLength] [SMALLINT] NULL,
[IsMobile] [BIT] NULL,
[ColumnWidth] [INT] NULL
)
GO
PRINT N'Creating index [IDX_ReportResultColumnProcess] on [dbo].[ReportResultColumnProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportResultColumnProcess] ON [dbo].[ReportResultColumnProcess] ([ReportID], [UserID], [ColumnName])
GO
PRINT N'Creating [dbo].[ReportSearchColumnConfig]'
GO
CREATE TABLE [dbo].[ReportSearchColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[ReportID] [BIGINT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Search] [BIT] NULL,
[SearchOrder] [INT] NULL,
[ControlType] [INT] NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF__ReportSea__FkDel__50A47BA3] DEFAULT ((1)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF__ReportSea__FkNot__31D7460A] DEFAULT ((1)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF__ReportSea__FkVer__ADD467] DEFAULT ((1)),
[DataType] [INT] NULL,
[DefaultValue] [NVARCHAR] (1000) NULL,
[MaxRange] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL,
[Event] [VARCHAR] (1000) NULL,
[ValidationEvent] [VARCHAR] (1000) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportSearchColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ReportSearchColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ReportSearchColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ReportSearchColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ReportSearchColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ReportSearchColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_ReportSearchColumnConfig] on [dbo].[ReportSearchColumnConfig]'
GO
ALTER TABLE [dbo].[ReportSearchColumnConfig] ADD CONSTRAINT [PK_ReportSearchColumnConfig] PRIMARY KEY CLUSTERED ([ReportID], [ReferenceID])
GO
PRINT N'Creating index [IDX_ReportSearchColumnConfig] on [dbo].[ReportSearchColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportSearchColumnConfig] ON [dbo].[ReportSearchColumnConfig] ([ReportID], [ColumnName])
GO
PRINT N'Creating [dbo].[ReportSearchColumnProcess]'
GO
CREATE TABLE [dbo].[ReportSearchColumnProcess]
(
[ReportID] [BIGINT] NOT NULL,
[UserID] [INT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Search] [BIT] NULL,
[SearchOrder] [INT] NULL,
[ControlType] [INT] NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF__ReportSea__FkDel__537022BE] DEFAULT ((1)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF__ReportSea__FkNot__70B16BC1] DEFAULT ((1)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF__ReportSea__FkVer__3BD33655] DEFAULT ((1)),
[DataType] [INT] NULL,
[DefaultValue] [NVARCHAR] (1000) NULL,
[MaxRange] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL,
[Event] [VARCHAR] (1000) NULL,
[ValidationEvent] [VARCHAR] (1000) NULL
)
GO
PRINT N'Creating index [IDX_ReportSearchColumnProcess] on [dbo].[ReportSearchColumnProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_ReportSearchColumnProcess] ON [dbo].[ReportSearchColumnProcess] ([ReportID], [UserID], [ColumnName])
GO
PRINT N'Creating [dbo].[DashboardConfiguration]'
GO
CREATE TABLE [dbo].[DashboardConfiguration]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[Name] [NVARCHAR] (1000) NOT NULL,
[Title] [NVARCHAR] (1000) NOT NULL,
[ModuleID] [INT] NULL,
[FormID] [INT] NULL,
[DBConnection] [INT] NOT NULL CONSTRAINT [DF_DashboardConfiguration_DBConnection] DEFAULT ((0)),
[Source] [INT] NULL,
[SpName] [VARCHAR] (255) NULL,
[ViewName] [VARCHAR] (255) NULL,
[TableName] [VARCHAR] (255) NULL,
[Query] [NVARCHAR] (max) NOT NULL,
[ReportSource] [INT] NULL,
[ReportSpName] [VARCHAR] (255) NULL,
[ReportViewName] [VARCHAR] (255) NULL,
[ReportTableName] [VARCHAR] (255) NULL,
[LayoutType] [INT] NULL,
[ChartView] [INT] NULL,
[PivotReport] [BIT] NULL,
[Header] [BIGINT] NULL,
[Footer] [BIGINT] NULL,
[Status] [INT] NOT NULL,
[IsMultiSource] [BIT] NULL,
[DashboardSources] [VARCHAR] (max) NULL,
[ReportDataSources] [VARCHAR] (max) NULL,
[IsMainMenu] [BIT] NULL CONSTRAINT [DF__Dashboard__IsMai__3A353BFF] DEFAULT ((0)),
[MainMenuOrder] [INT] NULL,
[GridTypeID] [INT] NULL,
[IsMainPage] [BIT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_DashboardConfiguration_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_DashboardConfiguration_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_DashboardConfiguration_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_DashboardConfiguration_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_DashboardConfiguration_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_DashboardConfiguration_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_DashboardConfiguration] on [dbo].[DashboardConfiguration]'
GO
ALTER TABLE [dbo].[DashboardConfiguration] ADD CONSTRAINT [PK_DashboardConfiguration] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_DashboardConfiguration] on [dbo].[DashboardConfiguration]'
GO
CREATE NONCLUSTERED INDEX [IDX_DashboardConfiguration] ON [dbo].[DashboardConfiguration] ([Name], [ModuleID])
GO
PRINT N'Creating [dbo].[ChartColumnConfig]'
GO
CREATE TABLE [dbo].[ChartColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[DashboardID] [BIGINT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[ResultColumn] [VARCHAR] (255) NULL,
[RangeEndColumn] [VARCHAR] (255) NULL,
[OrderColumn] [VARCHAR] (255) NULL,
[Grid] [BIT] NULL,
[Excel] [BIT] NULL,
[Pdf] [BIT] NULL,
[ColumnOrder] [INT] NULL,
[ResultOrder] [INT] NULL,
[OrderType] [INT] NULL,
[ChartType] [INT] NULL,
[XAxis] [VARCHAR] (255) NOT NULL,
[YAxis] [VARCHAR] (50) NOT NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[JoinFkType] [INT] NULL,
[JoinFkTable] [VARCHAR] (255) NULL,
[JoinFkColumn] [VARCHAR] (255) NULL,
[JoinFkData] [VARCHAR] (255) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NULL,
[FkNotActive] [BIT] NULL,
[FkVersion] [BIT] NULL,
[IsStackedBar] [BIT] NULL,
[AllBarReq] [BIT] NULL,
[IsWidget] [BIT] NULL,
[ChartControlType] [VARCHAR] (10) NULL,
[ParentControl] [VARCHAR] (255) NULL,
[ParentControlID] [BIGINT] NULL,
[AdditionalConditions] [VARCHAR] (255) NULL,
[IsMainTable] [BIT] NULL,
[IndividualChart] [BIT] NULL,
[ChartSourceID] [INT] NULL,
[ChartObjectName] [VARCHAR] (255) NULL,
[CategoryDisplay] [BIT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ChartColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ChartColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ChartColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ChartColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ChartColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ChartColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[BarLimitCount] [INT] NULL,
[ResultRoundOf] [INT] NULL,
[BarColour] [NVARCHAR] (max) NULL,
[StartPoint] [INT] NULL,
[CustomPointValue] [VARCHAR] (max) NULL,
[IsMyDashboard] [BIT] NULL
)
GO
PRINT N'Creating primary key [PK_ChartColumnConfig] on [dbo].[ChartColumnConfig]'
GO
ALTER TABLE [dbo].[ChartColumnConfig] ADD CONSTRAINT [PK_ChartColumnConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_ChartColumnConfig] on [dbo].[ChartColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ChartColumnConfig] ON [dbo].[ChartColumnConfig] ([DashboardID], [ColumnName])
GO
PRINT N'Creating [dbo].[ChartColumnProcess]'
GO
CREATE TABLE [dbo].[ChartColumnProcess]
(
[ReferenceID] [BIGINT] NOT NULL CONSTRAINT [DF__ChartColu__Refer__70B1742B] DEFAULT ((0)),
[DashboardID] [BIGINT] NOT NULL,
[UserID] [INT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[ResultColumn] [VARCHAR] (255) NULL,
[RangeEndColumn] [VARCHAR] (255) NULL,
[OrderColumn] [VARCHAR] (255) NULL,
[Grid] [BIT] NULL,
[Excel] [BIT] NULL,
[Pdf] [BIT] NULL,
[ColumnOrder] [INT] NULL,
[ResultOrder] [INT] NULL,
[OrderType] [INT] NULL,
[ChartType] [INT] NULL,
[XAxis] [VARCHAR] (255) NOT NULL,
[YAxis] [VARCHAR] (50) NOT NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[JoinFkType] [INT] NULL,
[JoinFkTable] [VARCHAR] (255) NULL,
[JoinFkColumn] [VARCHAR] (255) NULL,
[JoinFkData] [VARCHAR] (255) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NULL,
[FkNotActive] [BIT] NULL,
[FkVersion] [BIT] NULL,
[IsStackedBar] [BIT] NULL,
[AllBarReq] [BIT] NULL,
[IsWidget] [BIT] NULL,
[ChartControlType] [VARCHAR] (10) NULL,
[ParentControl] [VARCHAR] (255) NULL,
[ParentControlID] [BIGINT] NULL,
[AdditionalConditions] [VARCHAR] (255) NULL,
[IsMainTable] [BIT] NULL,
[IndividualChart] [BIT] NULL,
[ChartSourceID] [INT] NULL,
[ChartObjectName] [VARCHAR] (255) NULL,
[BarLimitCount] [INT] NULL,
[ResultRoundOf] [INT] NULL,
[BarColour] [NVARCHAR] (max) NULL,
[StartPoint] [INT] NULL,
[CustomPointValue] [VARCHAR] (max) NULL,
[IsMyDashboard] [BIT] NULL,
[CategoryDisplay] [BIT] NULL
)
GO
PRINT N'Creating index [IDX_ChartColumnProcess] on [dbo].[ChartColumnProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_ChartColumnProcess] ON [dbo].[ChartColumnProcess] ([DashboardID], [UserID], [ColumnName])
GO
PRINT N'Creating [dbo].[ChartDependentColumnConfig]'
GO
CREATE TABLE [dbo].[ChartDependentColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[DashboardID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[Name] [VARCHAR] (255) NOT NULL,
[TableColumn] [NVARCHAR] (500) NULL,
[ControlType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[Search] [BIT] NULL,
[DataType] [INT] NOT NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_ChartDependentColumnConfig_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__ChartDepe__Depen__6C23B3D1] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_FkVersion] DEFAULT ((0)),
[SearchOrder] [INT] NULL,
[DependentType] [SMALLINT] NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [SMALLINT] NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_IsDmlControl] DEFAULT ((0)),
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [VARCHAR] (max) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ChartDependentColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_ChartDependentColumnConfig] on [dbo].[ChartDependentColumnConfig]'
GO
ALTER TABLE [dbo].[ChartDependentColumnConfig] ADD CONSTRAINT [PK_ChartDependentColumnConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_ChartDependentColumnConfig] on [dbo].[ChartDependentColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ChartDependentColumnConfig] ON [dbo].[ChartDependentColumnConfig] ([DashboardID], [TableColumn])
GO
PRINT N'Creating [dbo].[ChartDependentColumnProcess]'
GO
CREATE TABLE [dbo].[ChartDependentColumnProcess]
(
[UserID] [INT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[DashboardID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [sys].[sysname] NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_ChartDependentColumnProcess_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__ChartDepe__Depen__7C13E4D6] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_ChartDependentColumnProcess_FkVersion] DEFAULT ((0)),
[SearchOrder] [SMALLINT] NOT NULL,
[DependentType] [SMALLINT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [VARCHAR] (max) NULL
)
GO
PRINT N'Creating index [IDX_ChartDependentColumnProcess] on [dbo].[ChartDependentColumnProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_ChartDependentColumnProcess] ON [dbo].[ChartDependentColumnProcess] ([DashboardID], [UserID], [ControlID], [TableColumn])
GO
PRINT N'Creating [dbo].[ChartSearchColumnConfig]'
GO
CREATE TABLE [dbo].[ChartSearchColumnConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[DashboardID] [BIGINT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Search] [BIT] NULL,
[SearchOrder] [INT] NULL,
[ControlType] [INT] NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF__ChartSear__FkDel__2C96E50A] DEFAULT ((1)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF__ChartSear__FkNot__711C39F8] DEFAULT ((1)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF__ChartSear__FkVer__1DC5F2B0] DEFAULT ((1)),
[DataType] [INT] NULL,
[DefaultValue] [NVARCHAR] (1000) NULL,
[MaxRange] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL,
[Event] [VARCHAR] (1000) NULL,
[ValidationEvent] [VARCHAR] (1000) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ChartSearchColumnConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_ChartSearchColumnConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_ChartSearchColumnConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_ChartSearchColumnConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_ChartSearchColumnConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_ChartSearchColumnConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[IsMobile] [BIT] NULL
)
GO
PRINT N'Creating primary key [PK_ChartSearchColumnConfig] on [dbo].[ChartSearchColumnConfig]'
GO
ALTER TABLE [dbo].[ChartSearchColumnConfig] ADD CONSTRAINT [PK_ChartSearchColumnConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_ChartSearchColumnConfig] on [dbo].[ChartSearchColumnConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_ChartSearchColumnConfig] ON [dbo].[ChartSearchColumnConfig] ([DashboardID], [ColumnName])
GO
PRINT N'Creating [dbo].[ChartSearchColumnProcess]'
GO
CREATE TABLE [dbo].[ChartSearchColumnProcess]
(
[DashboardID] [BIGINT] NOT NULL,
[UserID] [INT] NOT NULL,
[ColumnName] [VARCHAR] (255) NOT NULL,
[AliasName] [NVARCHAR] (500) NULL,
[Search] [BIT] NULL,
[SearchOrder] [INT] NULL,
[ControlType] [INT] NULL,
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF__ChartSear__FkDel__167886C3] DEFAULT ((1)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF__ChartSear__FkNot__2E14FF44] DEFAULT ((1)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF__ChartSear__FkVer__5A9C9B] DEFAULT ((1)),
[DataType] [INT] NULL,
[DefaultValue] [NVARCHAR] (1000) NULL,
[MaxRange] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL,
[Event] [VARCHAR] (1000) NULL,
[IsMobile] [BIT] NULL,
[ValidationEvent] [VARCHAR] (1000) NULL
)
GO
PRINT N'Creating index [IDX_ChartSearchColumnProcess] on [dbo].[ChartSearchColumnProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_ChartSearchColumnProcess] ON [dbo].[ChartSearchColumnProcess] ([DashboardID], [ColumnName])
GO
PRINT N'Creating [dbo].[DashboardReportDataSource]'
GO
CREATE TABLE [dbo].[DashboardReportDataSource]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[DashboardID] [BIGINT] NULL,
[ReportDataSource] [VARCHAR] (255) NULL,
[IndividualChartIDs] [VARCHAR] (max) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_DashboardReportDataSource_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_DashboardReportDataSource_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_DashboardReportDataSource_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_DashboardReportDataSource_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_DashboardReportDataSource_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_DashboardReportDataSource_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_DashboardReportDataSource] on [dbo].[DashboardReportDataSource]'
GO
ALTER TABLE [dbo].[DashboardReportDataSource] ADD CONSTRAINT [PK_DashboardReportDataSource] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_DashboardReportDataSource] on [dbo].[DashboardReportDataSource]'
GO
CREATE NONCLUSTERED INDEX [IDX_DashboardReportDataSource] ON [dbo].[DashboardReportDataSource] ([DashboardID], [ReportDataSource])
GO
PRINT N'Creating [dbo].[FormBuildInProcessConfig]'
GO
CREATE TABLE [dbo].[FormBuildInProcessConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[Name] [VARCHAR] (500) NOT NULL,
[Icon] [VARCHAR] (500) NULL,
[Description] [NVARCHAR] (2000) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormBuildInProcessConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormBuildInProcessConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormBuildInProcessConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormBuildInProcessConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormBuildInProcessConfig_IsCurrentVersion] DEFAULT ((1)),
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormBuildInProcessConfig_Version] DEFAULT ((1)),
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormBuildInProcessConfig] on [dbo].[FormBuildInProcessConfig]'
GO
ALTER TABLE [dbo].[FormBuildInProcessConfig] ADD CONSTRAINT [PK_FormBuildInProcessConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating [dbo].[FormConfiguration]'
GO
CREATE TABLE [dbo].[FormConfiguration]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[Name] [NVARCHAR] (1000) NULL,
[Title] [NVARCHAR] (1000) NULL,
[ParentMenu] [VARCHAR] (255) NULL,
[ModuleID] [INT] NULL,
[FormID] [INT] NULL,
[Source] [INT] NULL,
[ViewName] [VARCHAR] (255) NULL,
[TableName] [VARCHAR] (255) NULL,
[KeyColumn] [VARCHAR] (255) NULL,
[FormType] [INT] NULL,
[FormIcon] [NVARCHAR] (255) NULL,
[AuditTrail] [BIT] NULL,
[PageOrientation] [INT] NULL,
[ParentMenuOrder] [INT] NULL,
[MenuOrder] [INT] NULL,
[Footer] [BIT] NULL CONSTRAINT [DF__FormConfi__Foote__51D3C56D] DEFAULT ((0)),
[IsWorkflow] [BIT] NULL CONSTRAINT [DF_FormConfiguration_IsWorkflow] DEFAULT ((0)),
[WorkflowID] [INT] NULL,
[BaseFormID] [INT] NULL,
[FormEvents] [NVARCHAR] (max) NULL,
[Status] [INT] NOT NULL,
[IsMobileMenu] [BIT] NOT NULL CONSTRAINT [DF_FormConfiguration_IsMobileMenu] DEFAULT ((1)),
[IsOfflineSave] [BIT] NULL,
[CompanyID] [INT] NOT NULL,
[RoleIDs] [VARCHAR] (max) NULL,
[CompanyIDs] [VARCHAR] (max) NULL,
[IndustryIDs] [VARCHAR] (max) NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormConfiguration_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormConfiguration_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormConfiguration_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormConfiguration_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormConfiguration_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormConfiguration_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormConfiguration_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormConfiguration_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormConfiguration] on [dbo].[FormConfiguration]'
GO
ALTER TABLE [dbo].[FormConfiguration] ADD CONSTRAINT [PK_FormConfiguration] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating [dbo].[FormControlColumnsConfig]'
GO
CREATE TABLE [dbo].[FormControlColumnsConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[GroupID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[FkData1] [sys].[sysname] NULL,
[FkData2] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormContr__Depen__23BC79AD] DEFAULT ((0)),
[SelectAll] [BIT] NULL CONSTRAINT [DF__FormContr__Selec__54FDF98B] DEFAULT ((0)),
[ColumnWidth] [VARCHAR] (4) NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[DecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__FormContr__IsCur__42101B88] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__FormContr__IsInd__7C335DED] DEFAULT ((0)),
[GridParentControl] [VARCHAR] (100) NULL,
[FillEvent] [NVARCHAR] (500) NULL,
[DependentType] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__FormContr__IsNoU__6EE49B0C] DEFAULT ((0)),
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormControlColumnsConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_FormControlColumnsConfig] on [dbo].[FormControlColumnsConfig]'
GO
ALTER TABLE [dbo].[FormControlColumnsConfig] ADD CONSTRAINT [PK_FormControlColumnsConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormControlColumnsConfig] on [dbo].[FormControlColumnsConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlColumnsConfig] ON [dbo].[FormControlColumnsConfig] ([FormID], [TabID], [GroupID], [ControlID], [ColumnName])
GO
PRINT N'Creating [dbo].[FormControlColumnsProcess]'
GO
CREATE TABLE [dbo].[FormControlColumnsProcess]
(
[UserID] [INT] NOT NULL,
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[GroupID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[FkData1] [sys].[sysname] NULL,
[FkData2] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[IsUTC] [BIT] NULL CONSTRAINT [DF__FormContr__IsUTC__56140A3C] DEFAULT ((0)),
[DataBaseDecimalLength] [SMALLINT] NULL,
[DecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__FormContr__IsCur__703560FA] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__FormContr__IsInd__5337CD1E] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_FormControlColumnsProcess_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormContr__Depen__496BC3E2] DEFAULT ((0)),
[SelectAll] [BIT] NULL CONSTRAINT [DF__FormContr__Selec__7147BE2] DEFAULT ((0)),
[ColumnWidth] [VARCHAR] (4) NULL,
[IsUpload] [BIT] NULL CONSTRAINT [DF__FormContr__IsUpl__8CCDC0C] DEFAULT ((0)),
[IsDownload] [BIT] NULL CONSTRAINT [DF__FormContr__IsDow__53A125F9] DEFAULT ((0)),
[IsView] [BIT] NULL CONSTRAINT [DF__FormContr__IsVie__16CE4E0A] DEFAULT ((0)),
[IsDelete] [BIT] NULL CONSTRAINT [DF__FormContr__IsDel__6ED5AED3] DEFAULT ((0)),
[IsPrimary] [BIT] NULL CONSTRAINT [DF__FormContr__IsPri__2887E7FF] DEFAULT ((0)),
[GridHeader] [VARCHAR] (100) NULL,
[GridType] [BIT] NULL CONSTRAINT [DF__FormContr__GridT__7B8AD077] DEFAULT ((0)),
[OrderBy] [VARCHAR] (10) NULL,
[OrderByColumn] [VARCHAR] (100) NULL,
[PageSize] [INT] NULL,
[GridParentControl] [VARCHAR] (100) NULL,
[ApplicableProcess] [VARCHAR] (1000) NULL,
[FillEvent] [NVARCHAR] (500) NULL,
[DependentType] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL,
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__FormContr__IsNoU__3AD62F23] DEFAULT ((0))
)
GO
PRINT N'Creating index [IDX_FormControlColumnsProcess] on [dbo].[FormControlColumnsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlColumnsProcess] ON [dbo].[FormControlColumnsProcess] ([FormID], [UserID], [TabID], [GroupID], [ControlID], [ColumnName])
GO
PRINT N'Creating [dbo].[FormControlConfig]'
GO
CREATE TABLE [dbo].[FormControlConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[GroupID] [BIGINT] NOT NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [VARCHAR] (255) NOT NULL,
[ControlType] [INT] NULL,
[DataType] [INT] NULL,
[Visibility] [BIT] NULL,
[Readonly] [BIT] NULL,
[IsMandatory] [BIT] NULL,
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NULL,
[Events] [NVARCHAR] (max) NULL,
[ValidationEvent] [NVARCHAR] (max) NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF__FormContr__Searc__7CC02117] DEFAULT ((0)),
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NULL,
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NULL,
[IsEncrypt] [BIT] NULL CONSTRAINT [DF__FormContr__IsEnc__37DA5EB0] DEFAULT ((0)),
[IsReturnFill] [BIT] NULL CONSTRAINT [DF__FormContr__IsRet__1A21DB49] DEFAULT ((1)),
[IsNoAdd] [BIT] NULL CONSTRAINT [DF__FormContr__IsNoA__567FD316] DEFAULT ((0)),
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__FormContr__IsNoU__4CE26111] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[FkData1] [VARCHAR] (255) NULL,
[FkData2] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FilterConditions] [NVARCHAR] (1000) NULL,
[DateDifference] [VARCHAR] (100) NULL,
[FillEvent] [NVARCHAR] (max) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[FillEventType] [INT] NULL,
[FillType] [BIT] NULL CONSTRAINT [DF__FormContr__FillT__47B80980] DEFAULT ((0)),
[ButtonID] [INT] NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormContr__Depen__5DC37469] DEFAULT ((0)),
[DefaultControl] [BIT] NULL CONSTRAINT [DF__FormContr__Defau__347E3671] DEFAULT ((0)),
[DataTreeCondition] [VARCHAR] (1000) NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[DecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__FormContr__IsCur__2B459567] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__FormContr__IsInd__5F5DF9A9] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NULL CONSTRAINT [DF__FormContr__FkDel__6C78E09E] DEFAULT ((0)),
[FkNotActive] [BIT] NULL CONSTRAINT [DF__FormContr__FkNot__275C907F] DEFAULT ((0)),
[FkVersion] [BIT] NULL CONSTRAINT [DF__FormContr__FkVer__17BD8A98] DEFAULT ((0)),
[FkShowActive] [BIT] NULL CONSTRAINT [DF__FormContr__FkSho__11305909] DEFAULT ((0)),
[VersionCheck] [BIT] NULL CONSTRAINT [DF__FormContr__Versi__CA2798D] DEFAULT ((0)),
[ControlOrder] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[IsOldRefColumn] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[IsSelectAll] [BIT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormControlConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormControlConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_FormControlConfig] on [dbo].[FormControlConfig]'
GO
ALTER TABLE [dbo].[FormControlConfig] ADD CONSTRAINT [PK_FormControlConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormControlConfig] on [dbo].[FormControlConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlConfig] ON [dbo].[FormControlConfig] ([FormID], [TabID], [GroupID], [TableColumn])
GO
PRINT N'Creating [dbo].[FormControlsProcess]'
GO
CREATE TABLE [dbo].[FormControlsProcess]
(
[UserID] [INT] NOT NULL,
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[GroupID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [VARCHAR] (255) NOT NULL,
[ControlType] [INT] NULL,
[DataType] [INT] NULL,
[Visibility] [BIT] NULL,
[Readonly] [BIT] NULL,
[IsMandatory] [BIT] NULL,
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NULL,
[Events] [NVARCHAR] (max) NULL,
[ValidationEvent] [NVARCHAR] (max) NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF__FormContr__Searc__5A50F93] DEFAULT ((0)),
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NULL,
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NULL,
[IsEncrypt] [BIT] NULL CONSTRAINT [DF__FormContr__IsEnc__1EA63DAF] DEFAULT ((0)),
[IsReturnFill] [BIT] NULL CONSTRAINT [DF__FormContr__IsRet__43CE9C6C] DEFAULT ((1)),
[IsNoAdd] [BIT] NULL CONSTRAINT [DF__FormContr__IsNoA__4BA7F9A4] DEFAULT ((0)),
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__FormContr__IsNoU__3F8F2420] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[FkData1] [VARCHAR] (255) NULL,
[FkData2] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FilterConditions] [NVARCHAR] (1000) NULL,
[FillEvent] [NVARCHAR] (max) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[FillEventType] [INT] NULL,
[FillType] [BIT] NULL CONSTRAINT [DF__FormContr__FillT__624BF669] DEFAULT ((0)),
[ButtonID] [INT] NULL,
[DefaultControl] [BIT] NULL CONSTRAINT [DF__FormContr__Defau__791DE96C] DEFAULT ((0)),
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormContr__Depen__5FFB4AA5] DEFAULT ((0)),
[DataTreeCondition] [VARCHAR] (1000) NULL,
[IsUTC] [BIT] NULL CONSTRAINT [DF__FormContr__IsUTC__5FED13C8] DEFAULT ((0)),
[DataBaseDecimalLength] [SMALLINT] NULL,
[DecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__FormContr__IsCur__303FD950] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__FormContr__IsInd__1BD86626] DEFAULT ((0)),
[IsUpload] [BIT] NULL CONSTRAINT [DF__FormContr__IsUpl__44B6B82E] DEFAULT ((0)),
[IsDownload] [BIT] NULL CONSTRAINT [DF__FormContr__IsDow__46EB2426] DEFAULT ((0)),
[IsView] [BIT] NULL CONSTRAINT [DF__FormContr__IsVie__DD5974A] DEFAULT ((0)),
[IsDelete] [BIT] NULL CONSTRAINT [DF__FormContr__IsDel__3E6EA444] DEFAULT ((0)),
[IsFixed] [BIT] NULL CONSTRAINT [DF__FormContr__IsFix__47DDF224] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NULL CONSTRAINT [DF__FormContr__FkDel__70E1B5B9] DEFAULT ((0)),
[FkNotActive] [BIT] NULL CONSTRAINT [DF__FormContr__FkNot__7DE0EBB8] DEFAULT ((0)),
[FkVersion] [BIT] NULL CONSTRAINT [DF__FormContr__FkVer__3E27322E] DEFAULT ((0)),
[FkShowActive] [BIT] NULL CONSTRAINT [DF__FormContr__FkSho__6D747E02] DEFAULT ((0)),
[VersionCheck] [BIT] NULL CONSTRAINT [DF__FormContr__Versi__27532B2E] DEFAULT ((0)),
[ControlOrder] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[IsSelectAll] [BIT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating index [IDX_FormControlsProcess] on [dbo].[FormControlsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlsProcess] ON [dbo].[FormControlsProcess] ([FormID], [UserID], [TabID], [GroupID], [TableColumn])
GO
PRINT N'Creating [dbo].[FormEventConfigurationDetails]'
GO
CREATE TABLE [dbo].[FormEventConfigurationDetails]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[EventTypeID] [INT] NOT NULL,
[EventName] [VARCHAR] (200) NOT NULL,
[Description] [NVARCHAR] (1000) NULL,
[EventDetails] [NVARCHAR] (4000) NULL,
[ApplicableControls] [VARCHAR] (500) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormEventConfigurationDetails_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormEventConfigurationDetails] on [dbo].[FormEventConfigurationDetails]'
GO
ALTER TABLE [dbo].[FormEventConfigurationDetails] ADD CONSTRAINT [PK_FormEventConfigurationDetails] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormEventConfigurationDetails] on [dbo].[FormEventConfigurationDetails]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormEventConfigurationDetails] ON [dbo].[FormEventConfigurationDetails] ([EventTypeID], [EventName])
GO
PRINT N'Creating [dbo].[FormGridControlColumnsConfig]'
GO
CREATE TABLE [dbo].[FormGridControlColumnsConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[GroupID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NOT NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[SelectAll] [BIT] NULL CONSTRAINT [DF__FormGridC__Selec__4E9B3D2D] DEFAULT ((0)),
[IsDataSource] [BIT] NULL CONSTRAINT [DF__FormGridC__IsDat__28EDB359] DEFAULT ((0)),
[DataBaseDecimalLength] [SMALLINT] NULL,
[DecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__FormGridC__IsCur__5F594AD2] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormGridC__Depen__4389CE23] DEFAULT ((0)),
[DependentType] [SMALLINT] NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[ColumnWidth] [VARCHAR] (4) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_FormGridControlColumnsConfig] on [dbo].[FormGridControlColumnsConfig]'
GO
ALTER TABLE [dbo].[FormGridControlColumnsConfig] ADD CONSTRAINT [PK_FormGridControlColumnsConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormGridControlColumnsConfig] on [dbo].[FormGridControlColumnsConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormGridControlColumnsConfig] ON [dbo].[FormGridControlColumnsConfig] ([FormID], [TabID], [GroupID], [ColumnID], [ColumnName])
GO
PRINT N'Creating [dbo].[FormGridControlColumnsProcess]'
GO
CREATE TABLE [dbo].[FormGridControlColumnsProcess]
(
[UserID] [INT] NOT NULL,
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[GroupID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NOT NULL,
[GridColumnID] [BIGINT] NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_FormGridControlColumnsProcess_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormGridC__Depen__6B06524F] DEFAULT ((0)),
[SelectAll] [BIT] NULL CONSTRAINT [DF__FormGridC__Selec__76AEDF57] DEFAULT ((0)),
[IsDataSource] [BIT] NULL CONSTRAINT [DF__FormGridC__IsDat__3BA7EDB9] DEFAULT ((0)),
[DataBaseDecimalLength] [SMALLINT] NULL,
[DecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__FormGridC__IsCur__1F3226EF] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[DependentType] [SMALLINT] NULL,
[ColumnWidth] [VARCHAR] (4) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating index [IDX_FormGridControlColumnsProcess] on [dbo].[FormGridControlColumnsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormGridControlColumnsProcess] ON [dbo].[FormGridControlColumnsProcess] ([FormID], [UserID], [TabID], [GroupID], [ColumnID], [ColumnName])
GO
PRINT N'Creating [dbo].[FormSearchColumnsConfig]'
GO
CREATE TABLE [dbo].[FormSearchColumnsConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[SearchID] [INT] NOT NULL,
[FormID] [INT] NOT NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [sys].[sysname] NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_FormSearchColumnsConfig_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormSearc__Depen__103086E1] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_FkVersion] DEFAULT ((0)),
[SearchOrder] [SMALLINT] NOT NULL,
[DependentType] [SMALLINT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormSearchColumnsConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL
)
GO
PRINT N'Creating primary key [PK_FormSearchColumnsConfig] on [dbo].[FormSearchColumnsConfig]'
GO
ALTER TABLE [dbo].[FormSearchColumnsConfig] ADD CONSTRAINT [PK_FormSearchColumnsConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormSearchColumnsConfig] on [dbo].[FormSearchColumnsConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormSearchColumnsConfig] ON [dbo].[FormSearchColumnsConfig] ([FormID], [SearchID], [TableColumn])
GO
PRINT N'Creating [dbo].[FormSearchColumnsProcess]'
GO
CREATE TABLE [dbo].[FormSearchColumnsProcess]
(
[UserID] [INT] NOT NULL,
[SearchID] [INT] NOT NULL,
[FormID] [INT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [sys].[sysname] NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_FormSearchColumnsProcess_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormSearc__Depen__1F2DBC95] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormSearchColumnsProcess_FkVersion] DEFAULT ((0)),
[SearchOrder] [SMALLINT] NOT NULL,
[DependentType] [SMALLINT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL
)
GO
PRINT N'Creating index [IDX_FormSearchColumnsProcess] on [dbo].[FormSearchColumnsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormSearchColumnsProcess] ON [dbo].[FormSearchColumnsProcess] ([FormID], [UserID], [SearchID], [TableColumn])
GO
PRINT N'Creating [dbo].[FormSearchControlsConfig]'
GO
CREATE TABLE [dbo].[FormSearchControlsConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[ControlID] [INT] NOT NULL,
[FormID] [INT] NOT NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [sys].[sysname] NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_FormSearchControlsConfig_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormSearc__Depen__4207832E] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_FkVersion] DEFAULT ((0)),
[SearchOrder] [SMALLINT] NOT NULL,
[ButtonID] [INT] NULL,
[Type] [VARCHAR] (15) NULL,
[DateFilterType] [INT] NULL,
[FillEvent] [NVARCHAR] (500) NULL,
[FillEventType] [INT] NULL,
[DataVariable] [BIT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormSearchControlsConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL
)
GO
PRINT N'Creating primary key [PK_FormSearchControlsConfig] on [dbo].[FormSearchControlsConfig]'
GO
ALTER TABLE [dbo].[FormSearchControlsConfig] ADD CONSTRAINT [PK_FormSearchControlsConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormSearchControlsConfig] on [dbo].[FormSearchControlsConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormSearchControlsConfig] ON [dbo].[FormSearchControlsConfig] ([FormID], [ControlID], [TableColumn])
GO
PRINT N'Creating [dbo].[FormSearchControlsProcess]'
GO
CREATE TABLE [dbo].[FormSearchControlsProcess]
(
[UserID] [INT] NOT NULL,
[ControlID] [INT] NOT NULL,
[FormID] [INT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [sys].[sysname] NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[IsMobile] [BIT] NULL,
[MaxLength] [INT] NULL CONSTRAINT [DF_FormSearchControlsProcess_MaxLength] DEFAULT ((-1)),
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__FormSearc__Depen__1B876282] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_FormSearchControlsProcess_FkVersion] DEFAULT ((0)),
[SearchOrder] [SMALLINT] NOT NULL,
[ButtonID] [INT] NULL,
[Type] [VARCHAR] (15) NULL,
[DateFilterType] [INT] NULL,
[FillEvent] [NVARCHAR] (500) NULL,
[FillEventType] [INT] NULL,
[DataVariable] [BIT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL
)
GO
PRINT N'Creating index [IDX_FormSearchControlsProcess] on [dbo].[FormSearchControlsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormSearchControlsProcess] ON [dbo].[FormSearchControlsProcess] ([FormID], [UserID], [ControlID], [TableColumn])
GO
PRINT N'Creating [dbo].[FormAdditionalPropertyConfig]'
GO
CREATE TABLE [dbo].[FormAdditionalPropertyConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[Type] [VARCHAR] (10) NULL,
[PropertyName] [VARCHAR] (250) NULL,
[PropertyValue] [NVARCHAR] (2000) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormAdditionalPropertyConfig_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormAdditionalPropertyConfig] on [dbo].[FormAdditionalPropertyConfig]'
GO
ALTER TABLE [dbo].[FormAdditionalPropertyConfig] ADD CONSTRAINT [PK_FormAdditionalPropertyConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormAdditionalPropertyConfig] on [dbo].[FormAdditionalPropertyConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormAdditionalPropertyConfig] ON [dbo].[FormAdditionalPropertyConfig] ([FormID], [ControlID], [PropertyName])
GO
PRINT N'Creating [dbo].[FormBuildInProcessControls]'
GO
CREATE TABLE [dbo].[FormBuildInProcessControls]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[ProcessID] [INT] NULL,
[ColumnName] [VARCHAR] (500) NULL,
[ControlName] [NVARCHAR] (500) NULL,
[ControlTypeID] [INT] NULL,
[DataTypeID] [INT] NULL,
[IsIdentity] [BIT] NULL CONSTRAINT [DF__FormBuild__IsIde__1785CE2D] DEFAULT ((0)),
[IsVisibility] [BIT] NULL CONSTRAINT [DF__FormBuild__IsVis__18BAD56A] DEFAULT ((0)),
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormBuildInProcessControls_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormBuildInProcessControls_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormBuildInProcessControls_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormBuildInProcessControls_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormBuildInProcessControls_IsCurrentVersion] DEFAULT ((1)),
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormBuildInProcessControls_Version] DEFAULT ((1)),
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormBuildInProcessControls] on [dbo].[FormBuildInProcessControls]'
GO
ALTER TABLE [dbo].[FormBuildInProcessControls] ADD CONSTRAINT [PK_FormBuildInProcessControls] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormBuildInProcessControls] on [dbo].[FormBuildInProcessControls]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormBuildInProcessControls] ON [dbo].[FormBuildInProcessControls] ([ProcessID])
GO
PRINT N'Creating [dbo].[FormButtonConfig]'
GO
CREATE TABLE [dbo].[FormButtonConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[ButtonType] [INT] NULL,
[DisplayType] [NVARCHAR] (100) NOT NULL,
[Type] [NVARCHAR] (50) NOT NULL,
[TypeValues] [NVARCHAR] (100) NOT NULL,
[Code] [VARCHAR] (200) NULL,
[Description] [NVARCHAR] (1000) NULL,
[Remarks] [NVARCHAR] (1000) NULL,
[Category] [NVARCHAR] (400) NULL,
[UserAccess] [SMALLINT] NOT NULL,
[ImagePath] [NVARCHAR] (500) NULL,
[Details] [NVARCHAR] (1000) NULL,
[MenuCategory] [NVARCHAR] (500) NULL,
[ButtonKeyColumn] [VARCHAR] (100) NULL,
[AvailableStatus] [VARCHAR] (100) NULL,
[ButtonTriggerEvent] [VARCHAR] (500) NULL,
[ProcessButtonTypeID] [INT] NULL,
[ButtonCategory] [BIT] NULL CONSTRAINT [DF__FormButto__Butto__647BE6AE] DEFAULT ((0)),
[VisibleTabs] [VARCHAR] (100) NULL,
[DisableTabs] [VARCHAR] (100) NULL,
[IsMultipleApproval] [BIT] NULL CONSTRAINT [DF__FormButto__IsMul__27C71436] DEFAULT ((0)),
[IsDml] [BIT] NULL CONSTRAINT [DF__FormButto__IsDml__18166675] DEFAULT ((1)),
[ReqOldRefID] [BIT] NULL,
[ClearControls] [VARCHAR] (max) NULL,
[ClearColumns] [VARCHAR] (max) NULL,
[AutoClose] [BIT] NULL,
[IsMobile] [BIT] NOT NULL CONSTRAINT [DF__FormButto__IsMob__241674F] DEFAULT ((1)),
[IsAudit] [BIT] NULL,
[BuiltProcessButtonID] [INT] NULL,
[CompanyID] [INT] NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormButtonConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormButtonConfig_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormButtonConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormButtonConfig_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormButtonConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormButtonConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormButtonConfig_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormButtonConfig_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormButtonConfig] on [dbo].[FormButtonConfig]'
GO
ALTER TABLE [dbo].[FormButtonConfig] ADD CONSTRAINT [PK_FormButtonConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating [dbo].[FormControlAutoGenerateConfig]'
GO
CREATE TABLE [dbo].[FormControlAutoGenerateConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[ConfigTypeID] [INT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[CountBasisID] [INT] NULL,
[ResetPeriodID] [INT] NULL,
[StartingNumber] [INT] NULL,
[DigitsCount] [INT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlAutoGenerateConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlAutoGenerateConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlAutoGenerateConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormControlAutoGenerateConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlAutoGenerateConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormControlAutoGenerateConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormControlAutoGenerateConfig] on [dbo].[FormControlAutoGenerateConfig]'
GO
ALTER TABLE [dbo].[FormControlAutoGenerateConfig] ADD CONSTRAINT [PK_FormControlAutoGenerateConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormControlAutoGenerateConfig] on [dbo].[FormControlAutoGenerateConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlAutoGenerateConfig] ON [dbo].[FormControlAutoGenerateConfig] ([FormID], [ConfigTypeID], [ControlID])
GO
PRINT N'Creating [dbo].[FormControlMultilingual]'
GO
CREATE TABLE [dbo].[FormControlMultilingual]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[ControlID] [BIGINT] NOT NULL,
[LanguageID] [INT] NOT NULL,
[ConfigType] [VARCHAR] (100) NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlMultilingual_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlMultilingual_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlMultilingual_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormControlMultilingual_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlMultilingual_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormControlMultilingual_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormControlMultilingual] on [dbo].[FormControlMultilingual]'
GO
ALTER TABLE [dbo].[FormControlMultilingual] ADD CONSTRAINT [PK_FormControlMultilingual] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormControlMultilingual] on [dbo].[FormControlMultilingual]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlMultilingual] ON [dbo].[FormControlMultilingual] ([ControlID], [LanguageID], [ConfigType])
GO
PRINT N'Creating [dbo].[FormControlPropertyConfig]'
GO
CREATE TABLE [dbo].[FormControlPropertyConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[PropertyName] [VARCHAR] (250) NULL,
[PropertyValue] [NVARCHAR] (2000) NULL,
[Type] [VARCHAR] (10) NULL,
[PropertyType] [VARCHAR] (10) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlPropertyConfig_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormControlPropertyConfig] on [dbo].[FormControlPropertyConfig]'
GO
ALTER TABLE [dbo].[FormControlPropertyConfig] ADD CONSTRAINT [PK_FormControlPropertyConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormControlPropertyConfig] on [dbo].[FormControlPropertyConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlPropertyConfig] ON [dbo].[FormControlPropertyConfig] ([FormID], [ControlID], [PropertyName])
GO
PRINT N'Creating [dbo].[FormRoleConfiguration]'
GO
CREATE TABLE [dbo].[FormRoleConfiguration]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[RoleID] [INT] NOT NULL,
[FormID] [BIGINT] NOT NULL,
[HasReadPermission] [BIT] NOT NULL,
[Audit] [BIT] NOT NULL,
[ValidateChecksum] [BIT] NOT NULL,
[IsFavourite] [BIT] NOT NULL,
[FavouriteOrder] [INT] NULL,
[CompanyID] [INT] NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormRoleConfiguration_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormRoleConfiguration] on [dbo].[FormRoleConfiguration]'
GO
ALTER TABLE [dbo].[FormRoleConfiguration] ADD CONSTRAINT [PK_FormRoleConfiguration] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating [dbo].[FormTabConfig]'
GO
CREATE TABLE [dbo].[FormTabConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[DisplayName] [NVARCHAR] (100) NULL,
[TabOrder] [SMALLINT] NOT NULL,
[IsMandatory] [BIT] NOT NULL,
[TableName] [VARCHAR] (255) NULL,
[KeyColumn] [VARCHAR] (255) NULL,
[DefaultTab] [BIT] NULL,
[AddCondition] [VARCHAR] (255) NULL,
[ButtonID] [BIGINT] NULL,
[IsMobile] [BIT] NOT NULL CONSTRAINT [DF__FormTabCo__IsMob__6CE442A4] DEFAULT ((1)),
[CompanyID] [INT] NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormTabConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormTabConfig_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormTabConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormTabConfig_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormTabConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormTabConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[IsStatic] [BIT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormTabConfig_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormTabConfig_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL,
[Description] [NVARCHAR] (max) NULL
)
GO
PRINT N'Creating primary key [PK_FormTabConfig] on [dbo].[FormTabConfig]'
GO
ALTER TABLE [dbo].[FormTabConfig] ADD CONSTRAINT [PK_FormTabConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating [dbo].[FormTableList]'
GO
CREATE TABLE [dbo].[FormTableList]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[FormConfigID] [BIGINT] NOT NULL,
[TableName] [VARCHAR] (255) NOT NULL,
[KeyColumn] [VARCHAR] (255) NULL,
[StatusID] [INT] NOT NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableList_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableList_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableList_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableList_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormTableList_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormTableList_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormTableList_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormTableList_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormTableList] on [dbo].[FormTableList]'
GO
ALTER TABLE [dbo].[FormTableList] ADD CONSTRAINT [PK_FormTableList] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormTableList] on [dbo].[FormTableList]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormTableList] ON [dbo].[FormTableList] ([FormConfigID], [TableName])
GO
PRINT N'Creating [dbo].[FormControlCodeAutoConfig]'
GO
CREATE TABLE [dbo].[FormControlCodeAutoConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[ControlConfigID] [BIGINT] NOT NULL,
[FormID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[CodeTypeID] [INT] NULL,
[MasterID] [INT] NULL,
[FixedCode] [NVARCHAR] (10) NULL,
[FieldTypeID] [INT] NULL,
[FieldName] [VARCHAR] (255) NULL,
[SeparatorChar] [NVARCHAR] (10) NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlCodeAutoConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormControlCodeAutoConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormControlCodeAutoConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormControlCodeAutoConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormControlCodeAutoConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_FormControlCodeAutoConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormControlCodeAutoConfig] on [dbo].[FormControlCodeAutoConfig]'
GO
ALTER TABLE [dbo].[FormControlCodeAutoConfig] ADD CONSTRAINT [PK_FormControlCodeAutoConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormControlCodeAutoConfig] on [dbo].[FormControlCodeAutoConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormControlCodeAutoConfig] ON [dbo].[FormControlCodeAutoConfig] ([FormID], [ControlConfigID], [ControlID])
GO
PRINT N'Creating [dbo].[FormGroupboxConfig]'
GO
CREATE TABLE [dbo].[FormGroupboxConfig]
(
[ReferenceID] [INT] NOT NULL IDENTITY(1, 1),
[FormID] [BIGINT] NOT NULL,
[TabID] [BIGINT] NOT NULL,
[Name] [NVARCHAR] (100) NULL,
[DisplayName] [NVARCHAR] (100) NULL,
[GroupOrder] [SMALLINT] NOT NULL,
[CommonGroup] [BIT] NOT NULL,
[TableName] [VARCHAR] (255) NULL,
[KeyColumn] [VARCHAR] (255) NULL,
[DefaultGroupbox] [BIT] NULL,
[ButtonID] [INT] NULL CONSTRAINT [DF__FormGroup__Butto__BA725C2] DEFAULT ((0)),
[AddCondition] [VARCHAR] (255) NULL,
[ControlPerRow] [SMALLINT] NULL,
[IsMobile] [BIT] NOT NULL CONSTRAINT [DF__FormGroup__IsMob__238BC6EF] DEFAULT ((1)),
[CompanyID] [INT] NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormGroupboxConfig_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL,
[Description] [NVARCHAR] (max) NULL,
[IsChildGroupBox] [BIT] NULL,
[ControlCount] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_FormGroupboxConfig] on [dbo].[FormGroupboxConfig]'
GO
ALTER TABLE [dbo].[FormGroupboxConfig] ADD CONSTRAINT [PK_FormGroupboxConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating [dbo].[FormTableColumnList]'
GO
CREATE TABLE [dbo].[FormTableColumnList]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[FormConfigID] [BIGINT] NOT NULL,
[FormTableID] [BIGINT] NOT NULL,
[TableColumn] [VARCHAR] (255) NOT NULL,
[DataType] [INT] NULL,
[MaxLength] [INT] NULL,
[ControlNames] [NVARCHAR] (4000) NULL,
[IsLinked] [BIT] NOT NULL CONSTRAINT [DF__FormTable__IsLin__2288EEDB] DEFAULT ((0)),
[Droppable] [BIT] NOT NULL CONSTRAINT [DF__FormTable__Dropp__24933189] DEFAULT ((1)),
[IsIndex] [BIT] NULL CONSTRAINT [DF__FormTable__IsInd__72BFAC48] DEFAULT ((0)),
[StatusID] [INT] NOT NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableColumnList_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableColumnList_CreatedDateGMT] DEFAULT (getutcdate()),
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableColumnList_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL CONSTRAINT [DF_FormTableColumnList_ModifiedDateGMT] DEFAULT (getutcdate()),
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_FormTableColumnList_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (max) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_FormTableColumnList_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (max) NULL,
[OrderBy] [INT] NOT NULL,
[VersionID] [INT] NULL,
[Version] [INT] NOT NULL CONSTRAINT [DF_FormTableColumnList_Version] DEFAULT ((0)),
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_FormTableColumnList_IsCurrentVersion] DEFAULT ((1)),
[ERPID] [VARCHAR] (25) NULL
)
GO
PRINT N'Creating primary key [PK_FormTableColumnList] on [dbo].[FormTableColumnList]'
GO
ALTER TABLE [dbo].[FormTableColumnList] ADD CONSTRAINT [PK_FormTableColumnList] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_FormTableColumnList] on [dbo].[FormTableColumnList]'
GO
CREATE NONCLUSTERED INDEX [IDX_FormTableColumnList] ON [dbo].[FormTableColumnList] ([FormConfigID], [FormTableID], [TableColumn])
GO
PRINT N'Creating [dbo].[WorkflowControlColumnsConfig]'
GO
CREATE TABLE [dbo].[WorkflowControlColumnsConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[WorkflowID] [BIGINT] NOT NULL,
[ProcessID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[FkData1] [sys].[sysname] NULL,
[FkData2] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[IsUTC] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUTC__2C3099F5] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__WorkflowC__Depen__5359051B] DEFAULT ((0)),
[SelectAll] [BIT] NULL CONSTRAINT [DF__WorkflowC__Selec__6647CFE9] DEFAULT ((0)),
[ColumnWidth] [VARCHAR] (4) NULL,
[DecimalLength] [SMALLINT] NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsCur__5C53A643] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsInd__680EEA46] DEFAULT ((0)),
[IsUpload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUpl__451A4C7E] DEFAULT ((0)),
[IsDownload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDow__3E840B2C] DEFAULT ((0)),
[IsView] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsVie__53623EE9] DEFAULT ((0)),
[IsDelete] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDel__37F2DE] DEFAULT ((0)),
[IsPrimary] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsPri__3F3AAEC3] DEFAULT ((0)),
[GridHeader] [VARCHAR] (100) NULL,
[GridType] [BIT] NULL CONSTRAINT [DF__WorkflowC__GridT__59D7717C] DEFAULT ((0)),
[OrderByValue] [VARCHAR] (10) NULL,
[OrderByColumn] [VARCHAR] (100) NULL,
[PageSize] [INT] NULL,
[GridParentControl] [VARCHAR] (100) NULL,
[FillEvent] [NVARCHAR] (500) NULL,
[DependentType] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsNoU__7833B8C8] DEFAULT ((0)),
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[DateDifference] [VARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_WorkflowControlColumnsConfig] on [dbo].[WorkflowControlColumnsConfig]'
GO
ALTER TABLE [dbo].[WorkflowControlColumnsConfig] ADD CONSTRAINT [PK_WorkflowControlColumnsConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_WorkflowControlColumnsConfig] on [dbo].[WorkflowControlColumnsConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_WorkflowControlColumnsConfig] ON [dbo].[WorkflowControlColumnsConfig] ([WorkflowID], [ProcessID], [ControlID], [ColumnName])
GO
PRINT N'Creating [dbo].[WorkflowControlColumnsProcess]'
GO
CREATE TABLE [dbo].[WorkflowControlColumnsProcess]
(
[UserID] [INT] NOT NULL,
[WorkflowID] [BIGINT] NOT NULL,
[ProcessID] [BIGINT] NOT NULL,
[ControlID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[FkData1] [sys].[sysname] NULL,
[FkData2] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[IsUTC] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUTC__759525F4] DEFAULT ((0)),
[DecimalLength] [SMALLINT] NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsCur__4C4682D7] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsInd__53CE6C71] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlColumnsProcess_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__WorkflowC__Depen__28A129DE] DEFAULT ((0)),
[SelectAll] [BIT] NULL CONSTRAINT [DF__WorkflowC__Selec__35D4E5B1] DEFAULT ((0)),
[ColumnWidth] [VARCHAR] (4) NULL,
[IsUpload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUpl__474641B7] DEFAULT ((0)),
[IsDownload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDow__730737F2] DEFAULT ((0)),
[IsView] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsVie__27F67CD6] DEFAULT ((0)),
[IsDelete] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDel__8241424] DEFAULT ((0)),
[IsPrimary] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsPri__6710C77B] DEFAULT ((0)),
[GridHeader] [VARCHAR] (100) NULL,
[GridType] [BIT] NULL CONSTRAINT [DF__WorkflowC__GridT__3759A564] DEFAULT ((0)),
[OrderBy] [VARCHAR] (10) NULL,
[OrderByColumn] [VARCHAR] (100) NULL,
[PageSize] [INT] NULL,
[GridParentControl] [VARCHAR] (100) NULL,
[FillEvent] [NVARCHAR] (500) NULL,
[DependentType] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL,
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsNoU__1B4A5B3] DEFAULT ((0))
)
GO
PRINT N'Creating index [IDX_WorkflowControlColumnsProcess] on [dbo].[WorkflowControlColumnsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_WorkflowControlColumnsProcess] ON [dbo].[WorkflowControlColumnsProcess] ([WorkflowID], [UserID], [ProcessID], [ControlID], [ColumnName])
GO
PRINT N'Creating [dbo].[WorkflowControlConfig]'
GO
CREATE TABLE [dbo].[WorkflowControlConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[WorkflowID] [BIGINT] NOT NULL,
[ProcessID] [BIGINT] NOT NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [VARCHAR] (255) NOT NULL,
[ControlType] [INT] NULL,
[DataType] [INT] NULL,
[Visibility] [BIT] NULL,
[Readonly] [BIT] NULL,
[IsMandatory] [BIT] NULL,
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NULL,
[Events] [NVARCHAR] (max) NULL,
[ValidationEvent] [NVARCHAR] (max) NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF__WorkflowC__Searc__1932C16A] DEFAULT ((0)),
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NULL,
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NULL,
[IsEncrypt] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsEnc__6DB081B4] DEFAULT ((0)),
[IsReturnFill] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsRet__1A51ABEE] DEFAULT ((1)),
[IsNoAdd] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsNoA__F6E90EB] DEFAULT ((0)),
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsNoU__13075602] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[FkData1] [VARCHAR] (255) NULL,
[FkData2] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FilterConditions] [NVARCHAR] (1000) NULL,
[FillEvent] [NVARCHAR] (max) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[FillEventType] [INT] NULL,
[FillType] [BIT] NULL CONSTRAINT [DF__WorkflowC__FillT__FEA5CF9] DEFAULT ((0)),
[ButtonID] [INT] NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__WorkflowC__Depen__783CECF] DEFAULT ((0)),
[DefaultControl] [BIT] NULL CONSTRAINT [DF__WorkflowC__Defau__287D2C52] DEFAULT ((0)),
[DataTreeCondition] [VARCHAR] (1000) NULL,
[IsUTC] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUTC__C1696CE] DEFAULT ((0)),
[DecimalLength] [SMALLINT] NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsCur__EC5AAF7] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsInd__82889B2] DEFAULT ((0)),
[IsUpload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUpl__6C09B1A8] DEFAULT ((0)),
[IsDownload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDow__2FBBBABE] DEFAULT ((0)),
[IsView] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsVie__1C875903] DEFAULT ((0)),
[IsDelete] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDel__1072612] DEFAULT ((0)),
[IsFixed] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsFix__C92D67F] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkDel__71B2DF69] DEFAULT ((0)),
[FkNotActive] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkNot__6B8A8268] DEFAULT ((0)),
[FkVersion] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkVer__368FD2C6] DEFAULT ((0)),
[FkShowActive] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkSho__5DD975FA] DEFAULT ((0)),
[VersionCheck] [BIT] NULL CONSTRAINT [DF__WorkflowC__Versi__49111728] DEFAULT ((0)),
[ControlOrder] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[IsSelectAll] [BIT] NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_WorkflowControlConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_WorkflowControlConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowControlConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_WorkflowControlConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[DateDifference] [VARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_WorkflowControlConfig] on [dbo].[WorkflowControlConfig]'
GO
ALTER TABLE [dbo].[WorkflowControlConfig] ADD CONSTRAINT [PK_WorkflowControlConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_WorkflowControlConfig] on [dbo].[WorkflowControlConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_WorkflowControlConfig] ON [dbo].[WorkflowControlConfig] ([WorkflowID], [ProcessID], [TableColumn])
GO
PRINT N'Creating [dbo].[WorkflowControlProcess]'
GO
CREATE TABLE [dbo].[WorkflowControlProcess]
(
[UserID] [INT] NOT NULL,
[WorkflowID] [BIGINT] NOT NULL,
[ProcessID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NULL,
[Name] [NVARCHAR] (100) NOT NULL,
[TableColumn] [VARCHAR] (255) NOT NULL,
[ControlType] [INT] NULL,
[DataType] [INT] NULL,
[Visibility] [BIT] NULL,
[Readonly] [BIT] NULL,
[IsMandatory] [BIT] NULL,
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NULL,
[Events] [NVARCHAR] (max) NULL,
[ValidationEvent] [NVARCHAR] (max) NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF__WorkflowC__Searc__1E02E791] DEFAULT ((0)),
[SelectApplicable] [BIT] NULL,
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NULL,
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NULL,
[IsEncrypt] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsEnc__5BF537DD] DEFAULT ((0)),
[IsReturnFill] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsRet__4F4703B6] DEFAULT ((1)),
[IsNoAdd] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsNoA__55C32168] DEFAULT ((0)),
[IsNoUpdate] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsNoU__8562368] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [VARCHAR] (255) NULL,
[FkColumn] [VARCHAR] (255) NULL,
[FkData] [VARCHAR] (255) NULL,
[FkData1] [VARCHAR] (255) NULL,
[FkData2] [VARCHAR] (255) NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[FilterConditions] [NVARCHAR] (1000) NULL,
[FillEvent] [NVARCHAR] (max) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[FillEventType] [INT] NULL,
[FillType] [BIT] NULL CONSTRAINT [DF__WorkflowC__FillT__71CDA9F5] DEFAULT ((0)),
[ButtonID] [INT] NULL,
[DefaultControl] [BIT] NULL CONSTRAINT [DF__WorkflowC__Defau__499676F7] DEFAULT ((0)),
[DependentFlag] [BIT] NULL CONSTRAINT [DF__WorkflowC__Depen__D434453] DEFAULT ((0)),
[DataTreeCondition] [VARCHAR] (1000) NULL,
[IsUTC] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUTC__3BA2637D] DEFAULT ((0)),
[DecimalLength] [SMALLINT] NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsCur__715965B1] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[IsIndex] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsInd__43D4196A] DEFAULT ((0)),
[IsUpload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsUpl__E273A20] DEFAULT ((0)),
[IsDownload] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDow__5D18FF88] DEFAULT ((0)),
[IsView] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsVie__2949B2DE] DEFAULT ((0)),
[IsDelete] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsDel__46F37A06] DEFAULT ((0)),
[IsFixed] [BIT] NULL CONSTRAINT [DF__WorkflowC__IsFix__2D8018E] DEFAULT ((0)),
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkDel__728BC511] DEFAULT ((0)),
[FkNotActive] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkNot__5A282C52] DEFAULT ((0)),
[FkVersion] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkVer__AD4E1D9] DEFAULT ((0)),
[FkShowActive] [BIT] NULL CONSTRAINT [DF__WorkflowC__FkSho__4890EE05] DEFAULT ((0)),
[VersionCheck] [BIT] NULL CONSTRAINT [DF__WorkflowC__Versi__1C223857] DEFAULT ((0)),
[ControlOrder] [SMALLINT] NULL,
[ColumnCreation] [BIT] NULL,
[DataVariable] [BIT] NULL,
[IsAutoGenerate] [BIT] NULL,
[IsSelectAll] [BIT] NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating index [IDX_WorkflowControlProcess] on [dbo].[WorkflowControlProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_WorkflowControlProcess] ON [dbo].[WorkflowControlProcess] ([WorkflowID], [UserID], [ProcessID], [TableColumn])
GO
PRINT N'Creating [dbo].[WorkflowGridControlColumnsConfig]'
GO
CREATE TABLE [dbo].[WorkflowGridControlColumnsConfig]
(
[ReferenceID] [BIGINT] NOT NULL IDENTITY(1, 1),
[WorkflowID] [BIGINT] NOT NULL,
[ProcessID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NOT NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[SelectAll] [BIT] NULL CONSTRAINT [DF__WorkflowG__Selec__7D707A31] DEFAULT ((0)),
[IsDataSource] [BIT] NULL CONSTRAINT [DF__WorkflowG__IsDat__7CA2A6E6] DEFAULT ((0)),
[DecimalLength] [SMALLINT] NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__WorkflowG__IsCur__64CE8565] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__WorkflowG__Depen__7708DE66] DEFAULT ((0)),
[DependentType] [SMALLINT] NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[CompanyID] [INT] NOT NULL,
[CreatedBy] [INT] NOT NULL,
[CreatedDate] [DATETIME] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_CreatedDate] DEFAULT (getutcdate()),
[CreatedDateGMT] [DATETIME] NOT NULL,
[ModifiedBy] [INT] NOT NULL,
[ModifiedDate] [DATETIME] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_ModifiedDate] DEFAULT (getutcdate()),
[ModifiedDateGMT] [DATETIME] NOT NULL,
[NotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_NotActive] DEFAULT ((0)),
[NotActiveDate] [DATETIME] NULL,
[NotActiveDateGMT] [DATETIME] NULL,
[NotActiveReason] [NVARCHAR] (100) NULL,
[IsDeleted] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_IsDeleted] DEFAULT ((0)),
[DeletedBy] [INT] NULL,
[DeletedDate] [DATETIME] NULL,
[DeletedDateGMT] [DATETIME] NULL,
[DeleteReason] [NVARCHAR] (100) NULL,
[IsCurrentVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_IsCurrentVersion] DEFAULT ((1)),
[Version] [INT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsConfig_Version] DEFAULT ((1)),
[VersionID] [INT] NULL,
[OrderBy] [INT] NOT NULL,
[ERPID] [VARCHAR] (25) NULL,
[ColumnWidth] [VARCHAR] (4) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating primary key [PK_WorkflowGridControlColumnsConfig] on [dbo].[WorkflowGridControlColumnsConfig]'
GO
ALTER TABLE [dbo].[WorkflowGridControlColumnsConfig] ADD CONSTRAINT [PK_WorkflowGridControlColumnsConfig] PRIMARY KEY CLUSTERED ([ReferenceID])
GO
PRINT N'Creating index [IDX_WorkflowGridControlColumnsConfig] on [dbo].[WorkflowGridControlColumnsConfig]'
GO
CREATE NONCLUSTERED INDEX [IDX_WorkflowGridControlColumnsConfig] ON [dbo].[WorkflowGridControlColumnsConfig] ([WorkflowID], [ProcessID], [ColumnID], [ColumnName])
GO
PRINT N'Creating [dbo].[WorkflowGridControlColumnsProcess]'
GO
CREATE TABLE [dbo].[WorkflowGridControlColumnsProcess]
(
[UserID] [INT] NOT NULL,
[WorkflowID] [BIGINT] NOT NULL,
[ProcessID] [BIGINT] NOT NULL,
[ColumnID] [BIGINT] NOT NULL,
[GridColumnID] [BIGINT] NULL,
[ColumnName] [sys].[sysname] NOT NULL,
[ColumnName1] [sys].[sysname] NULL,
[ColumnName2] [sys].[sysname] NULL,
[DisplayName] [NVARCHAR] (255) NOT NULL,
[ControlType] [INT] NOT NULL,
[DataType] [INT] NOT NULL,
[Visibility] [BIT] NOT NULL,
[Readonly] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_Readonly] DEFAULT ((0)),
[IsMandatory] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_IsMandatory] DEFAULT ((0)),
[IsMobile] [BIT] NULL,
[IsWizard] [BIT] NULL,
[MaxLength] [INT] NOT NULL,
[Events] [NVARCHAR] (1000) NULL,
[ValidationEvent] [NVARCHAR] (500) NULL,
[ControlEventType] [INT] NULL,
[ValidationEventType] [INT] NULL,
[SearchApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_SearchApplicable] DEFAULT ((0)),
[SelectApplicable] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_SelectApplicable] DEFAULT ((0)),
[DefaultValue] [NVARCHAR] (2000) NULL,
[MaxRange] [NVARCHAR] (2000) NULL,
[AttachmentPath] [NVARCHAR] (255) NULL,
[IsIdentity] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_IsIdentity] DEFAULT ((0)),
[UniqueGroup] [VARCHAR] (100) NULL,
[IsDmlControl] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_IsDmlControl] DEFAULT ((0)),
[FkType] [INT] NULL,
[FkTable] [sys].[sysname] NULL,
[FkColumn] [sys].[sysname] NULL,
[FkData] [sys].[sysname] NULL,
[AdditionalConditions] [NVARCHAR] (1000) NULL,
[SelectAll] [BIT] NULL CONSTRAINT [DF__WorkflowG__Selec__3588A33A] DEFAULT ((0)),
[IsDataSource] [BIT] NULL CONSTRAINT [DF__WorkflowG__IsDat__3788BE7] DEFAULT ((0)),
[DecimalLength] [SMALLINT] NULL,
[DataBaseDecimalLength] [SMALLINT] NULL,
[IsCurrency] [BIT] NULL CONSTRAINT [DF__WorkflowG__IsCur__6E4F7E] DEFAULT ((0)),
[CurrencyColumn] [VARCHAR] (100) NULL,
[DependentFlag] [BIT] NULL CONSTRAINT [DF__WorkflowG__Depen__414467C7] DEFAULT ((0)),
[DependentType] [SMALLINT] NULL,
[FkOrder] [INT] NULL,
[FkDelete] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_FkDelete] DEFAULT ((0)),
[FkNotActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_FkNotActive] DEFAULT ((0)),
[FkVersion] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_FkVersion] DEFAULT ((0)),
[FkShowActive] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_FkShowActive] DEFAULT ((0)),
[VersionCheck] [BIT] NOT NULL CONSTRAINT [DF_WorkflowGridControlColumnsProcess_VersionCheck] DEFAULT ((0)),
[ColumnOrder] [SMALLINT] NOT NULL,
[ColumnWidth] [VARCHAR] (4) NULL,
[DateDifference] [NVARCHAR] (100) NULL,
[Description] [NVARCHAR] (max) NULL,
[AttachmentMaxSize] [INT] NULL
)
GO
PRINT N'Creating index [IDX_WorkflowGridControlColumnsProcess] on [dbo].[WorkflowGridControlColumnsProcess]'
GO
CREATE NONCLUSTERED INDEX [IDX_WorkflowGridControlColumnsProcess] ON [dbo].[WorkflowGridControlColumnsProcess] ([WorkflowID], [UserID], [ProcessID], [ColumnID], [ColumnName])
GO
PRINT N'Creating trigger [dbo].[trgReportDelete] on [dbo].[ReportConfiguration]'
GO

CREATE TRIGGER trgReportDelete
ON ReportConfiguration FOR UPDATE AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = '',
			@UserID INT = 0,
			@Deleted BIT = '',
			@FormID INT = 0,
			@MainMenu INT = 0,
			@SubMenuCount INT = 0

	SET @UserID = ISNULL((SELECT UserID FROM CmnUserDetails WHERE Username = 'Revol'), 1);
	SET @GMTTime = dbo.fn_GMTCalculation(@UserID);

	SET @Deleted = (SELECT New.IsDeleted FROM INSERTED New);
	SET @FormID = (SELECT New.FormID FROM INSERTED New);

	IF @Deleted = 1
	BEGIN
		SELECT @MainMenu = MainMenu1 FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 0;

		EXEC spCmnClearFormConfiguration @FormID;
      
		SELECT @SubMenuCount = COUNT(1) FROM CmnFormDetails WHERE MainMenu1 = @MainMenu AND IsDeleted = 0;

		IF @SubMenuCount = 0 
		BEGIN
			EXEC spCmnClearFormConfiguration @MainMenu;
		END	
	END

END
GO
PRINT N'Creating trigger [dbo].[trgReportUpdate] on [dbo].[ReportConfiguration]'
GO

CREATE TRIGGER trgReportUpdate
ON ReportConfiguration FOR UPDATE AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = '',
			@UserID INT = 0,
			@SP NVARCHAR(100) = '',
			@Table NVARCHAR(100) = '',
			@View NVARCHAR(100) = '',
			@Query NVARCHAR(MAX) = '',
			@SourceID INT = 0,
			@NewSP NVARCHAR(100) = '',
			@NewTable NVARCHAR(100) = '',
			@NewView NVARCHAR(100) = '',
			@NewQuery NVARCHAR(MAX) = '',
			@NewSourceID INT = 0,
			@NewStatus INT = 0,
			@ReferenceID INT = 0

	SET @UserID = ISNULL((SELECT UserID FROM CmnUserDetails WHERE Username = 'Revol'), 1);
	SET @GMTTime = dbo.fn_GMTCalculation(@UserID);

	SET @SourceID = (SELECT old.Source FROM DELETED old);
	SET @SP = (SELECT old.SpName FROM DELETED old);
	SET @Table = (SELECT old.TableName FROM DELETED old);
	SET @View = (SELECT old.ViewName FROM DELETED old);
	SET @Query = (SELECT old.Query FROM DELETED old);

	SET @NewSourceID = (SELECT new.Source FROM INSERTED new);
	SET @NewSP = (SELECT new.SpName FROM INSERTED new);
	SET @NewTable = (SELECT new.TableName FROM INSERTED new);
	SET @NewView = (SELECT new.ViewName FROM INSERTED new);
	SET @NewQuery = (SELECT new.Query FROM INSERTED new);
	SET @NewStatus = (SELECT new.Status FROM INSERTED new);
	SET @ReferenceID = (SELECT new.ReferenceID FROM INSERTED new);

	IF @SP <> @NewSP OR @Table <> @NewTable OR @View <> @NewView OR @Query <> @NewQuery AND @NewStatus <> 1
		UPDATE ReportConfiguration SET Status = 1, ModifiedBy = @UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @ReferenceID;
	
END
GO
PRINT N'Creating trigger [dbo].[trgDashboardDelete] on [dbo].[DashboardConfiguration]'
GO

CREATE TRIGGER trgDashboardDelete
ON DashboardConfiguration FOR UPDATE AS 
BEGIN
	SET NOCOUNT ON;

	DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = '',
			@UserID INT = 0,
			@Deleted BIT = '',
			@FormID INT = 0,
			@MainMenu INT = 0,
			@SubMenuCount INT = 0

	SET @UserID = ISNULL((SELECT UserID FROM CmnUserDetails WHERE Username = 'Revol'), 1);
	SET @GMTTime = dbo.fn_GMTCalculation(@UserID);

	SET @Deleted = (SELECT New.IsDeleted FROM INSERTED New);
	SET @FormID = (SELECT New.FormID FROM INSERTED New);

	IF @Deleted = 1
	BEGIN		
		SELECT @MainMenu = MainMenu1 FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 0;

		EXEC spCmnClearFormConfiguration @FormID;
      
		SELECT @SubMenuCount = COUNT(1) FROM CmnFormDetails WHERE MainMenu1 = @MainMenu AND IsDeleted = 0;

		IF @SubMenuCount = 0 
		BEGIN
			EXEC spCmnClearFormConfiguration @MainMenu;
		END		
	END
END
GO
PRINT N'Creating [dbo].[spReportClearConfigurationProcess]'
GO

CREATE PROCEDURE [dbo].[spReportClearConfigurationProcess] (@IN_ReportID BIGINT, @IN_ReportType INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_ClearConfigurationProcess

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
						@ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50),
						@ReportID BIGINT = 0,
						@DashboardID BIGINT = 0

			IF @IN_ReportType = 2
				SET @DashboardID = @IN_ReportID;
			ELSE
				SET @ReportID = @IN_ReportID;

			DELETE FROM ReportResultColumnProcess WHERE ReportID = @ReportID AND DashboardID = @DashboardID AND ReportType = @IN_ReportType AND UserID = @IN_UserID;

			DELETE FROM ReportSearchColumnProcess WHERE ReportID = @ReportID AND UserID = @IN_UserID;

		COMMIT TRANSACTION tran_ClearConfigurationProcess
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ClearConfigurationProcess

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportColumnList]'
GO

CREATE PROCEDURE [dbo].[spReportColumnList] (
	@IN_ReportID INT,
	@IN_ReportType INT,
	@IN_IndividualChartIDs VARCHAR(500),
	@IN_DataSource VARCHAR(255),
	@IN_FormID INT,
	@IN_UserID INT)
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@SourceID INT = 0,
				@StoredProcedure VARCHAR(225) = '',
				@ViewName VARCHAR(225) = '',
				@TableName VARCHAR(225) = '',
				@Query NVARCHAR(MAX) = '',
				@RQuery NVARCHAR(MAX) = '',
				@ReportID BIGINT = 0,
				@DashboardID BIGINT = 0,
				@DBConnection INT = 0,
				@ObjectName NVARCHAR(MAX) = '',
				@IsMultiSource BIT = 0,
				@DashboardSources VARCHAR(MAX) = '',
				@ReportDataSources VARCHAR(MAX) = '',
				@IndividualChartIDs VARCHAR(MAX) = '',
				@ReportDataSourceID BIGINT = 0,
				@ConfiguredChartIDs VARCHAR(MAX) = '',
				@ChartReportDataSource VARCHAR(500) = ''

		IF @IN_ReportType = 2
		BEGIN
			SET @DashboardID = @IN_ReportID;

			IF ISNULL(@IN_IndividualChartIDs, '') = ''
				SET @IN_IndividualChartIDs = '0';

			SELECT @SourceID = CASE WHEN ISNULL(ReportSource, 0) <> 0 THEN ISNULL(ReportSource, 0) ELSE Source END, 
				@StoredProcedure = CASE WHEN ISNULL(ReportSource, 0) <> 0 THEN ISNULL(ReportSpName, '') ELSE SpName END, 
				@ViewName = CASE WHEN ISNULL(ReportSource, 0) <> 0 THEN ISNULL(ReportViewName, '') ELSE ViewName END, 
				@TableName = CASE WHEN ISNULL(ReportSource, 0) <> 0 THEN ISNULL(ReportTableName, '') ELSE TableName END, 
				@Query = Query, @DBConnection = ISNULL(DBConnection, 0), @IsMultiSource = ISNULL(IsMultiSource, 0),
				@DashboardSources = ISNULL(DashboardSources, ''), @ReportDataSources = ISNULL(ReportDataSources, '')
			FROM DashboardConfiguration WHERE ReferenceID = @DashboardID;

			SELECT @ReportDataSourceID = ReferenceID, @IndividualChartIDs = ISNULL(IndividualChartIDs, ''), @ChartReportDataSource = ISNULL(ReportDataSource, '')
			FROM DashboardReportDataSource
			WHERE DashboardID = @DashboardID AND ISNULL(IndividualChartIDs, '') = ISNULL(@IN_IndividualChartIDs, '')  
				AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1; 

			SELECT @ConfiguredChartIDs = ISNULL(SUBSTRING(((SELECT CONCAT(',', ISNULL(RDS.IndividualChartIDs, '')) FROM DashboardReportDataSource RDS
											WHERE RDS.DashboardID = @DashboardID AND ISNULL(RDS.ReportDataSource, '') <> ISNULL(@IN_DataSource, '')
												AND PATINDEX('%,' + RDS.ReportDataSource + ',%', ',' + (CASE WHEN ISNULL(@ReportDataSources, '') = '' THEN @DashboardSources ELSE @ReportDataSources END) + ',') > 0
												AND ISNULL(RDS.IndividualChartIDs, '') <> '' AND RDS.IsDeleted = 0 AND RDS.NotActive = 0 AND RDS.IsCurrentVersion = 1
			FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','nvarchar(max)')), 2, 9000000000), '');

			IF (ISNULL(@IN_DataSource, '') <> '' OR ISNULL(@IN_IndividualChartIDs, '') NOT IN ('', '0')) AND ISNULL(@ReportDataSourceID, 0) = 0
			BEGIN
				SET @ReportDataSourceID = -1;
			END
		END
		ELSE
		BEGIN
			SET @ReportID = @IN_ReportID;
			SELECT @SourceID = Source, @StoredProcedure = SpName, @ViewName = ViewName, @TableName = TableName, @Query = Query, @DBConnection = ISNULL(DBConnection, 0)
			FROM ReportConfiguration WHERE ReferenceID = @IN_ReportID;
		END

		IF @SourceID = 1 
		BEGIN
			SET @ObjectName = @StoredProcedure;
		END
		ELSE IF @SourceID = 2 
		BEGIN
			SET @ObjectName = @ViewName;
		END
		ELSE IF @SourceID = 3 
		BEGIN
			SET @ObjectName = @TableName;
		END
		ELSE IF @SourceID = 4 
		BEGIN
			SET @ObjectName = @Query;
		END

		IF ISNULL(@IN_DataSource, '') <> ''
		BEGIN
			SET @SourceID = 2;
			SET @ObjectName = @IN_DataSource;
		END

		SELECT @SourceID AS SourceID, @ObjectName AS ObjectName, @DBConnection AS DBConnection, @IsMultiSource AS IsMultiSource,
			CASE WHEN @IsMultiSource = 1 THEN (CASE WHEN ISNULL(@ReportDataSources, '') = '' THEN @DashboardSources ELSE @ReportDataSources END)
				ELSE '' END AS ReportDataSources, @IndividualChartIDs AS IndividualChartIDs, @ConfiguredChartIDs AS ConfiguredChartIDs, @ChartReportDataSource AS ChartReportDataSource;
  
		SELECT RCC.ColumnName AS ColumnName, RCC.AliasName AS AliasName, ISNULL(RCC.Grid, 0) AS IsGrid, ISNULL(RCC.Excel, 0) AS IsExcel,
			ISNULL(RCC.Pdf, 0) AS IsPdf, ISNULL(RCC.IsMobile, 0) AS IsMobile, ISNULL(RCC.ResultOrder, 0) AS ResultOrder, ISNULL(RCC.OrderType, 0) AS OrderType, ISNULL(RCC.ColumnOrder, 0) AS ColumnOrder,
			ISNULL(RCC.DataType, 0) AS DataType, ISNULL(RCC.IsSummary, 0) AS IsSummary, ISNULL(RCC.SummaryType, 0) AS SummaryType, ISNULL(RCC.DecimalLength, 0) AS DecimalLength, ISNULL(RCC.ColumnWidth, 0) AS ColumnWidth
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND DashboardID = @DashboardID
			AND ISNULL(RCC.ReportDataSourceID, 0) = ISNULL(@ReportDataSourceID, 0)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		SELECT SCC.ColumnName AS ColumnName, SCC.AliasName AS AliasName, ISNULL(SCC.ControlType, 0) AS ControlType, ISNULL(SCC.FkType, 0) AS FkType,
			ISNULL(SCC.FkTable, '') AS FkTable, ISNULL(SCC.FkColumn, '') AS FkColumn, ISNULL(SCC.FkData, '') AS FkData, ISNULL(SCC.AdditionalConditions, '') AS AdditionalConditions,
			ISNULL(SCC.FkOrder, 0) AS FkOrder, ISNULL(SCC.FkDelete, 0) AS FkDelete, ISNULL(SCC.FkNotActive, 0) AS FkNotActive, ISNULL(SCC.FkVersion, 0) AS FkVersion,
			ISNULL(SCC.SearchOrder, 0) AS SearchOrder, ISNULL(SCC.DataType, 0) AS DataType, ISNULL(SCC.DefaultValue, '') AS DefaultValue,
			ISNULL(SCC.MaxRange, '') AS MaxRange, ISNULL(SCC.DependentFlag, 0) AS DependentFlag, ISNULL(SCC.Event, '') AS Event,
			ISNULL(SCC.ValidationEvent, '') AS ValidationEvent
		FROM ReportSearchColumnConfig SCC
		WHERE SCC.ReportID = @ReportID AND @DashboardID = 0 AND SCC.Search = 1
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

		IF @IN_ReportType = 2
		BEGIN
			SELECT ReferenceID, ColumnName, AliasName, ISNULL(ChartObjectName, '') AS ChartObjectName
			FROM ChartColumnConfig CC
			WHERE CC.DashboardID = @DashboardID
				--AND ISNULL(IndividualChart, 0) = 1 AND ISNULL(ChartObjectName, '') <> ''
				AND ISNULL(ParentControl, '') = '' AND ISNULL(ParentControlID, 0) = 0
				AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1;
		END
		ELSE
		BEGIN
			SELECT 1 FROM ReportConfiguration WHERE ReferenceID = @IN_ReportID AND 1 = 2; 
		END

	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportColumnProcessEntry]'
GO

CREATE PROCEDURE [dbo].[spReportColumnProcessEntry] (@IN_ReportID BIGINT, @IN_ReportType INT, @IN_UserID INT, @IN_ColumnName VARCHAR(255),
  @IN_AliasName NVARCHAR(500), @IN_Grid BIT, @IN_Excel BIT, @IN_Pdf BIT, @IN_Mobile BIT, @IN_ColumnOrder INT, @IN_ResultOrder INT, @IN_OrderType INT,
	@IN_DataType INT, @IN_IsSummary BIT, @IN_SummaryType INT, @IN_DecimalLength INT, @IN_ColumnWidth INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_ReportColumnProcessEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
						@ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50),
						@ReportID BIGINT = 0,
						@DashboardID BIGINT = 0

			IF @IN_ReportType = 2
				SET @DashboardID = @IN_ReportID;
			ELSE
				SET @ReportID = @IN_ReportID;

			INSERT INTO ReportResultColumnProcess (ReportID, DashboardID, ReportType, UserID, ColumnName, AliasName, Grid, Excel, Pdf, IsMobile, 
				ColumnOrder, ResultOrder, OrderType, DataType, IsSummary, SummaryType, DecimalLength, ColumnWidth)
			VALUES (@ReportID, @DashboardID, @IN_ReportType, @IN_UserID, @IN_ColumnName, @IN_AliasName, @IN_Grid, @IN_Excel, @IN_Pdf, @IN_Mobile,
				@IN_ColumnOrder, @IN_ResultOrder, @IN_OrderType, @IN_DataType, @IN_IsSummary, @IN_SummaryType, @IN_DecimalLength,  @IN_ColumnWidth );

		COMMIT TRANSACTION tran_ReportColumnProcessEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ReportColumnProcessEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportConfigStatusUpdate]'
GO

CREATE PROCEDURE [dbo].[spReportConfigStatusUpdate] (
	@IN_UserID INT,
	@IN_ReferenceID INT, 
	@IN_DMLEvent VARCHAR(50),
	@IN_PrevStatusID INT = 0
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@CurrentStatusID INT = 0;

	SELECT @CurrentStatusID = ISNULL(Status, 0)
	FROM ReportConfiguration WHERE ReferenceID = @IN_ReferenceID;

	IF @IN_PrevStatusID = 4 AND @CurrentStatusID = @IN_PrevStatusID   -- Update the Status to Configured
	BEGIN
		UPDATE ReportConfiguration
		SET Status = 3, -- Configured
			ModifiedBy = @IN_UserID,
			ModifiedDate = @UTCTime,
			ModifiedDateGMT = @GMTTime
		WHERE ReferenceID = @IN_ReferenceID AND Status IN (4);
	END
END
GO
PRINT N'Creating [dbo].[spReportDependentData]'
GO
CREATE PROCEDURE [dbo].[spReportDependentData] (
	@IN_ReportID BIGINT,
	@IN_UserID BIGINT
)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50);

			SELECT FCC.ColumnName AS ColumnName, FCC.AliasName AS AliasName, FCC.Search AS Search, FCC.SearchOrder AS SearchOrder,
				FCC.ControlType AS ControlTypeID, ISNULL(FCC.FkType, '') AS FkType, FCC.FkTable AS FkTable, FCC.FkColumn AS FkColumn,
				FCC.FkData AS FkData, FCC.AdditionalConditions AS AdditionalConditions,	FCC.FkOrder AS FkOrder, FCC.FkDelete AS FkDelete,
				FCC.FkNotActive AS FkNotActive, FCC.FkVersion AS FkVersion, FCC.DataType AS DataType, FCC.DefaultValue AS DefaultValue,
				FCC.MaxRange AS MaxRange, FCC.DependentFlag AS DependentFlag, FCC.Event AS Event, CM.Description AS ControlType, ISNULL(CM.ImagePath, '') AS ControlIcon
			FROM ReportSearchColumnConfig FCC
				JOIN CmnCodeMaster CM ON CM.Type = 'Control Type' AND CM.CodemasterID = FCC.ControlType AND ISNULL(CM.Description, '') <> ''
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.ReportID = @IN_ReportID AND FCC.IsDeleted = 0
			ORDER BY FCC.SearchOrder;
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportFilterProcessEntry]'
GO

CREATE PROCEDURE [dbo].[spReportFilterProcessEntry] (@IN_ReportID BIGINT, @IN_UserID INT, @IN_ColumnName VARCHAR(255),
	@IN_AliasName NVARCHAR(500), @IN_SearchOrder INT, @IN_ControlType INT, @IN_FkType INT, @IN_FkTable VARCHAR(255), 
	@IN_FkColumn VARCHAR(255), @IN_FkData VARCHAR(255), @IN_AdditionalConditions NVARCHAR(1000), @IN_FkOrder INT, @IN_FkDelete BIT, 
	@IN_FkNotActive BIT, @IN_FkVersion BIT, @IN_DataType INT, @IN_DefaultValue NVARCHAR(1000), @IN_MaxRange NVARCHAR(1000), @IN_DependentFlag BIT,
	@IN_Event VARCHAR(1000), @IN_ValidationEvent VARCHAR(1000))
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_FilterProcessEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50)

			INSERT INTO ReportSearchColumnProcess (ReportID, UserID, ColumnName, AliasName, Search, SearchOrder, ControlType, 
				FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, DataType, DefaultValue, MaxRange,
				DependentFlag, Event, ValidationEvent)
			VALUES (@IN_ReportID, @IN_UserID, @IN_ColumnName, @IN_AliasName, 1, @IN_SearchOrder, @IN_ControlType, 
				@IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_AdditionalConditions, @IN_FkOrder, @IN_FkDelete, 
				@IN_FkNotActive, @IN_FkVersion, @IN_DataType, @IN_DefaultValue, @IN_MaxRange, @IN_DependentFlag, @IN_Event, @IN_ValidationEvent);

		COMMIT TRANSACTION tran_FilterProcessEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_FilterProcessEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportGenerateForm]'
GO

CREATE PROCEDURE [dbo].[spReportGenerateForm] (@IN_ReportID INT, @IN_UserID INT)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = '',		
				@UTCTime DATETIME = GETUTCDATE(),
				@ModuleID INT = 0,
				@MainMenuOrder INT = 0,
				@FormID INT = 0,
				@TabID INT = 0,
				@GoupBoxID INT = 0,
				@ControlID INT = 0,
				@ReportName NVARCHAR(100) = ''
									
		SELECT @ReportName = Name, @FormID = ISNULL(FormID, 0) 
		FROM ReportConfiguration WHERE ReferenceID = @IN_ReportID;

		SELECT @ModuleID = CodemasterID FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = 'Report' AND IsDeleted = 0 AND NotActive = 0;
		SELECT @MainMenuOrder = ISNULL(MAX(MainMenuOrder) + 1, 1), @FormID = CASE WHEN @FormID = 0 THEN ISNULL(MAX(FormID) + 1, 600) ELSE @FormID END  
		FROM CmnFormDetails WHERE ModuleID = @ModuleID AND IsDeleted = 0;

		EXEC spCmnClearFormConfiguration @FormID;

		INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,
			FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon,
			IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
		SELECT 'StandardPage', @MainMenuOrder, 0, 0, 3, @FormID, @ReportName, @ReportName, @ModuleID, 0, '', '', '',
			0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime;

		INSERT INTO CmnFormTabs (FormID, Name, TabOrder, IsMandatory, ModifiedDate, IsDeleted)
		VALUES (@FormID, @ReportName, 1, 1, @UTCTime, 0);

		SET @TabID = SCOPE_IDENTITY();

		INSERT INTO CmnGroupBoxes (TabID, Name, GroupOrder, CommonGroup, ModifiedDate, IsDeleted)
		VALUES (@TabID, @ReportName, 1, 1, @UTCTime, 0);

		SET @GoupBoxID = SCOPE_IDENTITY();

		INSERT INTO CmnFormControls (GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, MaxLength, Events, 
			ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill,
			IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, FillType, ButtonID, FkOrder, FkDelete, FkNotActive,
			FkVersion, FkShowActive, VersionCheck, ControlOrder, ModifiedDate, IsDeleted)
		VALUES (@GoupBoxID, @ReportName, '', 19, 1, 1, 0, 0, -1, 'STP.search()', '', 1, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 0, '', '', '', '', '', 
			0, 0, 0, 0, 0, 0, 0, 0, 1, @UTCTime, 0);

		SET @ControlID = SCOPE_IDENTITY();

		INSERT INTO CmnControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
			IsMandatory, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity,
			UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion,
			FkShowActive, VersionCheck, ColumnOrder, ModifiedDate, IsDeleted)
		SELECT @ControlID, RCC.ColumnName, '', '', RCC.AliasName, 20, 7, 1, 0, 0, -1, '', '', 0, 0, '', '', 1,
			0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 0, RCC.ColumnOrder, @UTCTime, 0
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @IN_ReportID AND RCC.Grid = 1
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		INSERT INTO CmnFormSearchControl (ControlID, FormID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory,
			MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData,
			AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, SearchOrder, ModifiedDate, IsDeleted)
		SELECT @ControlID, @FormID, SCC.AliasName, SCC.ColumnName, SCC.ControlType, 7, 1, 0, 0, -1, '', '', 1, '', SCC.FkType, 
			SCC.FkTable, SCC.FkColumn, SCC.FkData, '', 0, 0, 0, 0, SCC.SearchOrder, @UTCTime, 0
		FROM ReportSearchColumnConfig SCC
		WHERE SCC.ReportID = @IN_ReportID AND SCC.Search = 1
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;
	
	END TRY
	BEGIN CATCH

		--EXEC [Fn_ErrorFetch] @@SPID

		--INSERT INTO tbl_StoredProcedure_Error(MenuID, App_User, SQL_User, Server_Name, [Procedure_Name],
		--	Error_Code, Line_Number, [Error_Message], [Error_State], Logged_Date, [INPUT_PARAMS]) 
		--SELECT @MenuID, @UserID, USER_NAME(), @@SERVERNAME, ERROR_PROCEDURE(), ERROR_NUMBER(),
		--	ERROR_LINE(), ERROR_MESSAGE(), ERROR_STATE(), GETUTCDATE(), (SELECT PIN FROM TBL_ERRORFETCH);

		SELECT @ErrorMessage = TypeValues, @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() FROM CmnCodeMaster WHERE [Type] = 'Error Message'

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spReportGetData]'
GO

CREATE PROCEDURE [dbo].[spReportGetData] (@IN_ReportType VARCHAR(50) = '', @IN_FormID INT = 0, @IN_UserID INT = 0, @IN_SessionID VARCHAR(255))
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = '',
				@TableName SYSNAME = '',
				@ConditionColumns NVARCHAR(MAX) = '',
				@AdditionalCondition NVARCHAR(2000) = '',
				@Query NVARCHAR(MAX) = '',
				@CountQuery NVARCHAR(MAX) = '',
				@ColumnValues NVARCHAR(4000) = '',
				@SelectStmt NVARCHAR(MAX) = '',
				@CTEColumnNames NVARCHAR(MAX) = '',
				@SelectColumnNames NVARCHAR(MAX) = '',
				@Count INT = 0,
				@PageIndex INT = 0,
				@Total INT = 0,
				@PageLimit INT = 0,
				@Limit VARCHAR(255) = '',
				@KeyColumn SYSNAME = '',
				@ControlID INT = 0,
				@SortColumn SYSNAME = '',
				@SortType VARCHAR(20) = '',
				@ControlType INT = 0,
				@FKType INT = 0,
				@FKTable SYSNAME = '',
				@OrderByColumn VARCHAR(MAX),
				@OrderBy VARCHAR(10) = 'ASC',
				@FilterBy VARCHAR(100) = '',
				@FilterValue INT = 0,
				@FilterTable VARCHAR(100) = '',
				@FilterKey VARCHAR(100) = '',
				@FilterUniqueKey VARCHAR(100) = '',
				@FkDelete BIT = 0,
				@FkNotActive BIT = 0,
				@FkCondition NVARCHAR(MAX) = '',
				@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0),
				@ReportID BIGINT = 0,
				@DashboradID BIGINT = 0,
				@Source INT = 0,
				@SpName VARCHAR(225) = '',
				@View VARCHAR(225) = '',
				@Table VARCHAR(225) = '',
				@OpenQuery NVARCHAR(MAX) = '',
				@RQuery NVARCHAR(MAX) = '',
				@ReportTitle NVARCHAR(1000) = '',
				@GridColumn NVARCHAR(200) = '',
				@ActiveCount INT = 0,
				@DBConnection INT = 0,
				@ObjectName NVARCHAR(MAX) = '',
				@DBConnectionType VARCHAR(50) = '',
				@ReportHeader NVARCHAR(MAX) = '',
				@ReportFooter NVARCHAR(MAX) = '',
				@ChartName NVARCHAR(500) = '',
				@RBSIterator INT = 0,
				@RBSDataVariableCount INT = 0,
				@RBSConditions NVARCHAR(MAX) = '',
				@DataVariable VARCHAR(225) = '',
				@DataValue VARCHAR(225) = '',
				@RBSTableName VARCHAR(255) = '',
				@SubTable SYSNAME = '',
				@SubCondition VARCHAR(1000) = '',
				@SubAddiCondition VARCHAR(1000) = '',
				@IndividualChart BIT = 0,
				@ChartID BIGINT,
				@ReportDataSourceID BIGINT = 0,
				@ReportDataSource VARCHAR(255) = '',
				@DashboardSources VARCHAR(MAX) = '',
				@ReportDataSources VARCHAR(MAX) = '',
				@DecimalLength NVARCHAR(MAX) = '',
				@DataTypes NVARCHAR(MAX) = '',
				@BarLimitCount INT = 0,
				@ResultColumn VARCHAR(MAX) = '',
				@OrderValue INT = 0,
				@ResultColumnOrder VARCHAR(MAX) = '',
				@GridTypeID INT = 0;

		DECLARE @RBSDataVariable TABLE (
			RowNo INT NOT NULL,
			ControlName NVARCHAR(200) NULL,
			TableName VARCHAR(255) NULL,
			TableColumn VARCHAR(255) NULL,
			DataValue NVARCHAR(MAX) NULL)
									
		SELECT TOP 1 @ControlID = FC.ControlID, @TableName = FC.FkTable, @KeyColumn = 'MT.' +FC.FkColumn, @FKType = FC.FKType, @FKTable = FC.FKTable,
				@FkDelete = FC.FkDelete, @FkNotActive = FC.FkNotActive, @GridColumn = CC.Value
		FROM CmnFormDetails FD WITH (NOLOCK)
			JOIN CmnFormTabs FT WITH (NOLOCK) ON FT.FormID = FD.FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB WITH (NOLOCK) ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls FC WITH (NOLOCK) ON FC.GroupID = GB.GroupID AND (FC.ControlType = 19 OR (FC.ControlType = 24) OR (FC.ControlType = 25 )) AND FC.IsDeleted = 0
			JOIN CmnControlProperty CC WITH (NOLOCK) ON CC.ControlID = FC.ControlID AND CC.Name = 'Grid Header' AND CC.IsDeleted = 0
		WHERE FD.FormID = @IN_FormID AND FD.IsDeleted = 0
		
		SELECT @FilterBy = ISNULL(Value, '') FROM CmnControlProperty WHERE ControlID = @ControlID AND Name = 'Filter By' AND IsDeleted = 0;
		SELECT @FilterTable = ISNULL(Value, '') FROM CmnControlProperty WHERE ControlID = @ControlID AND Name = 'Filter Table' AND IsDeleted = 0;
		SELECT @FilterKey = ISNULL(Value, '') FROM CmnControlProperty WHERE ControlID = @ControlID AND Name = 'Filter Key' AND IsDeleted = 0;
		SELECT @FilterUniqueKey = ISNULL(Value, '') FROM CmnControlProperty WHERE ControlID = @ControlID AND Name = 'Filter Unique Key' AND IsDeleted = 0;

		IF @FormType IN (6, 8) 
		BEGIN
			IF @FormType = 6
				SELECT @DashboradID = RC.ReferenceID, @Source = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportSource, 0) ELSE RC.Source END, 
					@SpName = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportSpName, '') ELSE RC.SpName END, 
					@View = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportViewName, '') ELSE RC.ViewName END, 
					@Table = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportTableName, '') ELSE RC.TableName END,
					@OpenQuery = RC.Query, @ReportTitle = RC.Title, @DBConnection = ISNULL(RC.DBConnection, 0), 
					@ReportHeader = ISNULL(RH.FullPath, ''), @ReportFooter = ISNULL(RF.FullPath, ''), @GridTypeID = ISNULL(RC.GridTypeID, 0)
				FROM DashboardConfiguration RC
					LEFT JOIN CmnFileUpload RH ON RH.ReferenceID = RC.Header AND ISNULL(RH.IsDeleted, 0) = 0
					LEFT JOIN CmnFileUpload RF ON RF.ReferenceID = RC.Footer AND ISNULL(RF.IsDeleted, 0) = 0
				WHERE RC.FormID = @IN_FormID 
					AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;
			ELSE
				SELECT @ReportID = RC.ReferenceID, @Source = RC.Source, @SpName = RC.SpName, @Table = RC.TableName, @View = RC.ViewName, 
					@OpenQuery = RC.Query, @ReportTitle = RC.Title, @DBConnection = ISNULL(RC.DBConnection, 0),
					@ReportHeader = ISNULL(RH.FullPath, ''), @ReportFooter = ISNULL(RF.FullPath, ''), @GridTypeID = ISNULL(RC.GridTypeID, 0)
				FROM ReportConfiguration RC
					LEFT JOIN CmnFileUpload RH ON RH.ReferenceID = RC.Header AND ISNULL(RH.IsDeleted, 0) = 0
					LEFT JOIN CmnFileUpload RF ON RF.ReferenceID = RC.Footer AND ISNULL(RF.IsDeleted, 0) = 0 
				WHERE RC.FormID = @IN_FormID 
					AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;

			IF @Source = 1 
			BEGIN
				SET @TableName = '##tempReportDataSpTable';
				SET @ObjectName = @SpName;
			END
			ELSE IF @Source = 2
			BEGIN
				SET @TableName = @View;
				SET @ObjectName = @View;
			END
			ELSE IF @Source = 3
			BEGIN
				SET @TableName = @Table;
				SET @ObjectName = @Table;
			END
			ELSE IF @Source = 4 
			BEGIN
				SET @TableName = '##tempReportDataTable';
				SET @ObjectName = @OpenQuery;
			END
		END;

		IF EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TlsDBConfigDetails]') AND [TYPE] IN (N'U'))
		BEGIN
			SELECT @DBConnectionType = ISNULL(DT.TypeValues, '')
			FROM TlsDBConfigDetails DB
				LEFT JOIN CmnCodeMaster DT ON DT.Type = 'Database Type' AND DT.CodemasterID = DB.DatabaseTypeID
			WHERE DB.ReferenceID = @DBConnection
		END

		IF @FilterBy <> ''
		BEGIN
			SELECT @FilterValue = ISNULL(ED.BranchID, '') FROM CmnUserDetails UD
        			JOIN MstEmployeeDetails ED ON ED.ReferenceID = UD.TypeID	
        	WHERE UD.UserID = @IN_UserID;
		END

		IF ISNULL(@FilterValue, '') = 0 
			SET @FilterBy = ''

		SELECT @ActiveCount = COUNT(1) FROM CmnSearchParameterProcess WHERE SessionID = @IN_SessionID AND TableColumn = 'MT.NotActive';
		SET @ConditionColumns = ISNULL(SUBSTRING((SELECT ' AND ' + CASE WHEN DP.ControlType = 'Textbox' OR DP.ControlType = 'Multiline Textbox' 
																				THEN DP.ColumnName + ' LIKE ''%' + ISNULL(DP.ColumnValue, '') + '%''' 
																		WHEN DP.ControlType = 'Check Listbox' THEN
																				CASE WHEN @DBConnectionType = 'MySql' THEN 'CONCAT (''('', REPLACE(DP.ColumnValue, ''<col>'',  CONCAT(''CONCAT('','', '', DP.ColumnName, '', '','')'', '' LIKE '')), '')'')'
																					ELSE '(' + REPLACE(DP.ColumnValue, '<col>', ''','' + CAST(' + DP.ColumnName  + ' AS VARCHAR(200)) + '',''' + ' LIKE ') + ')' END
																		WHEN DP.ControlType IN ('Checklist Grid') THEN
																			CASE WHEN @DBConnectionType = 'MySql' THEN CONCAT('FIND_IN_SET(', DP.ColumnName, ', ''', ISNULL(DP.ColumnValue, ''), ''') > 0')
																			ELSE '('''' + CAST(' + DP.ColumnName + ' AS VARCHAR(2000)) + '''' IN ('+ ISNULL(DP.ColumnValue, '') + '))' END
																		WHEN DP.ControlType IN ('Radiolist Grid') THEN
																			CASE WHEN @DBConnectionType = 'MySql' THEN CONCAT('FIND_IN_SET(''', ISNULL(DP.ColumnValue, ''), ''', ', DP.ColumnName, ') > 0')
																			ELSE '(PATINDEX(''%,'' + CAST(' + ISNULL(DP.ColumnValue, '')+ ' AS VARCHAR(2000)) + '',%'', '',''+'+ ISNULL(DP.ColumnName, '') + '+'','') > 0)' END
																		WHEN DP.ControlType = 'Date' THEN 
																			CASE WHEN CHARINDEX('AND', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn+ ' AS DATE) BETWEEN '+ ISNULL(DP.ColumnValue, '')+ ')') 
																				WHEN CHARINDEX('>=', DP.ColumnValue) > 0 OR CHARINDEX('<=', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn + ' AS DATE) '+ ISNULL(DP.ColumnValue, '')+ ')')
																			ELSE ('(CAST('+DP.TableColumn+ ' AS DATE) = '+ ISNULL(DP.ColumnValue, '')+ ')') END 
																		WHEN DP.ControlType = 'DateTime' THEN 
																			CASE WHEN CHARINDEX('AND', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn+ ' AS DATETIME) BETWEEN '+ ISNULL(DP.ColumnValue, '')+ ')') 
																				WHEN CHARINDEX('>=', DP.ColumnValue) > 0 OR CHARINDEX('<=', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn + ' AS DATETIME) '+ ISNULL(DP.ColumnValue, '')+ ')')
																			ELSE ('(CAST('+DP.TableColumn+ ' AS DATETIME) = '+ ISNULL(DP.ColumnValue, '')+ ')') END 
																		WHEN DP.ControlType = 'Checkbox' THEN (DP.ColumnName+ ' = '+ ISNULL(DP.ColumnValue, 0))
																		WHEN DP.ControlType = 'Combobox' AND ISNULL(DP.ColumnValue, '') = '-1' THEN ('ISNULL(CONVERT(NVARCHAR(MAX),' + DP.ColumnName + '), ''0'') NOT IN (''0'', '''') ')
																		ELSE DP.ColumnName + ' = ''' + ISNULL(DP.ColumnValue, '') + '''' END 
													FROM CmnSearchParameterProcess DP WITH (NOLOCK)
													WHERE DP.SessionID = @IN_SessionID AND (ISNULL(@DashboradID, 0) = 0 OR DP.ControlName <> 'ChartName')
													ORDER BY DP.ColumnName
													FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 1, 4000000000), '')

		IF @ActiveCount > 0
		BEGIN
			SET @FkNotActive = 0;
		END
		
		SET @AdditionalCondition = '';

		SET @ControlType = ISNULL((SELECT TOP 1 FC.ControlType 
										   FROM CmnFormDetails FD WITH (NOLOCK)
											 JOIN CmnFormTabs FT WITH (NOLOCK) ON FT.FormID = FD.FormID AND FT.IsDeleted = 0
											 JOIN CmnGroupBoxes GB WITH (NOLOCK) ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
											 JOIN CmnFormControls FC WITH (NOLOCK) ON FC.GroupID = GB.GroupID AND FC.IsDeleted = 0
											 JOIN CmnControlProperty CC WITH (NOLOCK) ON CC.ControlID = FC.ControlID AND CC.Value = @GridColumn AND CC.IsDeleted = 0
										   WHERE FD.FormID = @IN_FormID AND FD.IsDeleted = 0), '')
			
		SET @ColumnValues = ''
		SET @Limit = ''		

		IF ISNULL(@DashboradID, 0) <> 0
		BEGIN
			SET @ChartName = ISNULL((SELECT TOP 1 ColumnValue FROM CmnSearchParameterProcess WHERE SessionID = @IN_SessionID AND ControlName = 'ChartName'), '');

			IF ISNULL(@ChartName, '') <> ''
			BEGIN
				SELECT @DashboardSources = ISNULL(DashboardSources, ''), @ReportDataSources = ISNULL(ReportDataSources, '')
				FROM DashboardConfiguration WHERE ReferenceID = @DashboradID;

				SET @AdditionalCondition = ISNULL((SELECT TOP 1 ISNULL(AdditionalConditions, '') FROM ChartColumnConfig 
						WHERE DashboardID = @DashboradID AND AliasName = @ChartName AND ISNULL(JoinFkType, 0) = 0
							AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1), '');

				SELECT TOP 1 @SubTable = CASE WHEN ISNULL(JoinFkType, 0) = 1 THEN 'CmnCodeMaster' WHEN ISNULL(JoinFkType, 0) = 3 THEN 'CmnFileUpload' ELSE ISNULL(JoinFkTable, '') END, 
					@SubCondition = CONCAT(CASE WHEN ISNULL(JoinFkType, 0) = 1 THEN CONCAT('ST.Type=''', JoinFkTable, ''' AND ') ELSE '' END, 'MT.', ColumnName, '=ST.', JoinFkColumn), 
					@SubAddiCondition = ISNULL(AdditionalConditions, '')
				FROM ChartColumnConfig 
				WHERE DashboardID = @DashboradID AND AliasName = @ChartName AND ISNULL(JoinFkType, 0) <> 0
					AND ISNULL(JoinFkTable, '') <> '' AND ISNULL(ColumnName, '') <> '' AND ISNULL(JoinFkColumn, '') <> ''
					AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1;

				SELECT @ChartID = ReferenceID, @IndividualChart = ISNULL(IndividualChart, 0)
				FROM ChartColumnConfig 
				WHERE DashboardID = @DashboradID AND AliasName = @ChartName
					AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1;

				SELECT @ResultColumn = ISNULL(CC.Value, ''), @OrderValue = ISNULL(FC.FkOrder, 0), @BarLimitCount = ISNULL(BarLimitCount, 0)
				FROM CmnFormDetails FD WITH (NOLOCK)
					JOIN CmnFormTabs FT WITH (NOLOCK) ON FT.FormID = FD.FormID AND FT.IsDeleted = 0
					JOIN CmnGroupBoxes GB WITH (NOLOCK) ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
					JOIN CmnFormControls FC WITH (NOLOCK) ON FC.GroupID = GB.GroupID AND FC.IsDeleted = 0 AND FC.Name = @ChartName
					JOIN CmnControlProperty CC WITH (NOLOCK) ON CC.ControlID = FC.ControlID AND CC.Name = 'Result Column' AND CC.IsDeleted = 0
				WHERE FD.FormID = @IN_FormID AND FD.IsDeleted = 0

				SET @ResultColumnOrder = CASE WHEN @OrderValue = 5 THEN CONCAT(@ResultColumn, ' ASC') 
												WHEN @OrderValue = 6 THEN CONCAT(@ResultColumn, ' DESC') ELSE '' END;

				SELECT @ReportDataSourceID = DRD.ReferenceID, @ReportDataSource = CASE WHEN ISNULL(DRD.ReportDataSource, '') = '' THEN @TableName ELSE ISNULL(DRD.ReportDataSource, '') END,
					@IndividualChart = CASE WHEN ISNULL(DRD.ReportDataSource, '') = '' THEN @IndividualChart ELSE 1 END
				FROM DashboardReportDataSource DRD
				WHERE DRD.DashboardID = @DashboradID AND ISNULL(DRD.IndividualChartIDs, '') = ISNULL(CAST(@ChartID AS VARCHAR(50)), '')
					AND DRD.IsDeleted = 0 AND DRD.NotActive = 0 AND DRD.IsCurrentVersion = 1;

				IF ISNULL(@ReportDataSourceID, 0) = 0 AND ISNULL(@IndividualChart, 0) = 0
				BEGIN
					SELECT @ReportDataSourceID = DRD.ReferenceID, @ReportDataSource = CASE WHEN ISNULL(DRD.ReportDataSource, '') = '' THEN @TableName ELSE ISNULL(DRD.ReportDataSource, '') END,
						@IndividualChart = CASE WHEN ISNULL(DRD.ReportDataSource, '') = '' THEN @IndividualChart ELSE 1 END
					FROM DashboardReportDataSource DRD
					WHERE DRD.DashboardID = @DashboradID AND ISNULL(DRD.IndividualChartIDs, '') IN ('', '0')
						AND DRD.IsDeleted = 0 AND DRD.NotActive = 0 AND DRD.IsCurrentVersion = 1;
				END
				IF ISNULL(@ReportDataSource, '') <> ''
					SET @TableName = @ReportDataSource;
				IF ISNULL(@IndividualChart, 0) = 1
				BEGIN
					SET @ObjectName = @ReportDataSource;
					SET @Source = 2;
					IF ISNULL(@ReportDataSourceID, 0) = 0
						SET @ReportDataSourceID = -1;
				END
			END
		END
		ELSE IF (@ControlType = 24 OR @ControlType = 25) AND @FKType = 1
		BEGIN
			SET @TableName = 'CmnCodeMaster';
			SET @AdditionalCondition = 'Type = '''+ @FKTable + ''''  + CASE WHEN @AdditionalCondition <> '' THEN ' AND MT.' ELSE '' END + @AdditionalCondition;
		END

		SELECT @OrderByColumn = ISNULL(Value, '') FROM CmnControlProperty WHERE ControlID = @ControlID AND Name = 'Order By Column' AND IsDeleted = 0;
		IF @FormType IN (6, 8) 
		BEGIN
			SET @OrderByColumn = SUBSTRING((SELECT ',' + 'MT.' + RCC.ColumnName + ' ' + CASE WHEN RCC.OrderType = 1 THEN 'ASC' ELSE 'DESC' END
			FROM ReportResultColumnConfig RCC
			WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
				AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID AND ISNULL(RCC.ResultOrder, 0) > 0
				AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
			ORDER BY RCC.ResultOrder FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)  	

			IF ISNULL(@OrderByColumn, '') = ''
			BEGIN
				SELECT TOP 1 @OrderByColumn = CONCAT('MT.', RCC.ColumnName, ' ') 
				FROM ReportResultColumnConfig RCC
				WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
					AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
					AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
				ORDER BY RCC.ColumnOrder;
			END;
		END
		ELSE IF @OrderByColumn <> ''
		BEGIN 
		 	SET @OrderByColumn = 'MT.'+ @OrderByColumn + ',' + @KeyColumn;
		END
		
		SELECT @OrderBy = ISNULL(Value, 'ASC') FROM CmnControlProperty WHERE ControlID = @ControlID AND Name = 'Order By' AND IsDeleted = 0;
		IF @FormType IN (6, 8)
			SET @OrderBy = '';

		SELECT @SelectStmt = SUBSTRING((SELECT ',' + ISNULL(RCC.ColumnName, '')
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
			AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000);		
		
		SELECT @DecimalLength = SUBSTRING((SELECT ',' + CAST(ISNULL(RCC.DecimalLength, 0) AS NVARCHAR(MAX))
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
			AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000);
		
		SELECT @DataTypes = SUBSTRING((SELECT ',' + CAST(ISNULL(RCC.DataType, 0) AS NVARCHAR(MAX))
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
			AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)  

		SET @FkCondition = '';
		IF ISNULL(@FkDelete, 0) <> 0 
			SET @FkCondition = ' MT.IsDeleted = 0 ';
	
		IF ISNULL(@FkNotActive, 0) <> 0
			SET @FkCondition = CASE WHEN ISNULL(@FkCondition, '') <> '' THEN @FkCondition+ ' AND MT.NotActive = 0 ' ELSE ' MT.NotActive = 0 ' END;

		IF @FkCondition = ''
			SET @FkCondition = ' 1=1';

		SELECT @ReportTitle AS ReportTitle, @ReportHeader AS ReportHeader, @ReportFooter AS ReportFooter;

		SELECT RCC.AliasName AS ColumnName, RCC.ColumnWidth AS ColumnWidth, ISNULL(RCC.DataType, '') AS DataType, RCC.ColumnName AS TableColumn
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
			AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		INSERT INTO @RBSDataVariable (RowNo, ControlName, TableName, TableColumn, DataValue)
		EXEC spCmnGetFormRBSData @IN_FormID, @IN_UserID, ''

		SELECT @RBSDataVariableCount = COUNT(1) FROM @RBSDataVariable

		WHILE @RBSIterator < @RBSDataVariableCount
		BEGIN
			SET @RBSIterator = @RBSIterator + 1;
			SELECT @DataVariable = TableColumn, @DataValue = DataValue, @RBSTableName = TableName FROM @RBSDataVariable WHERE RowNo = @RBSIterator;

			IF @Source <> 0
			BEGIN
				IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @DataVariable) 
				BEGIN
					IF @RBSConditions <> ''
						SET @RBSConditions = @RBSConditions + ' AND '

					IF @DBConnectionType = 'MySql'
					BEGIN
						IF @DataVariable = 'CompanyID'
							SET @RBSConditions = @RBSConditions + CONCAT('(IFNULL(MT.', @DataVariable, ', 0) = 0 OR  AND FIND_IN_SET(MT.', @DataVariable, ',''', @DataValue, ''') > 0)');
						ELSE
							SET @RBSConditions = @RBSConditions + CONCAT(' AND FIND_IN_SET(MT.', @DataVariable, ',''', @DataValue, ''') > 0');
					END
					ELSE
					BEGIN
						IF @DataVariable = 'CompanyID'
							SET @RBSConditions = @RBSConditions + '(ISNULL(MT.' + @DataVariable + ', 0) = 0 OR EXISTS (SELECT 1 FROM dbo.fn_DataSplit(MT.' + @DataVariable + ', '','') A WHERE (PATINDEX(''%,'' + A.items + '',%'', '',''+''' + @DataValue + '''+'','') > 0)))';
						ELSE
							SET @RBSConditions = @RBSConditions + 'EXISTS (SELECT 1 FROM dbo.fn_DataSplit(MT.' + @DataVariable + ', '','') A WHERE (PATINDEX(''%,'' + A.items + '',%'', '',''+''' + @DataValue + '''+'','') > 0))';
					END
				END
			END
		END
		
		IF ISNULL(@SelectStmt, '') = ''
			SET @Query = '';
		ELSE
		BEGIN
			SELECT @CTEColumnnames = SUBSTRING((SELECT ',[' + RCC.ColumnName + ']'
												FROM ReportResultColumnConfig RCC
												WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
													AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
													AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
													AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
													AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
													AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1 ORDER BY RCC.ColumnOrder
												FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000) 

			SELECT @SelectColumnnames = SUBSTRING((SELECT '+ '','' + ISNULL([' + RCC.ColumnName + '], '''')'
													 FROM ReportResultColumnConfig RCC
													WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
														AND ISNULL(RCC.ReportDataSourceID, 0) = @ReportDataSourceID
														AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
														AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
														AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
														AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1 ORDER BY RCC.ColumnOrder
													 FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 9, 4000000000)

			SET @Query = 'FROM ' + @TableName + ' MT '+
										CASE WHEN @FilterTable <> '' AND @FilterBy <> '' THEN (' JOIN '+@FilterTable + ' JT ON JT.'+@FilterUniqueKey + ' = MT.'+@FilterKey+ ' AND JT.'+@FilterBy + ' = '+CONVERT(VARCHAR(MAX), @FilterValue) + ' ') ELSE '' END +
										CASE WHEN @SubTable <> '' THEN CONCAT(' JOIN ', @SubTable, ' ST ON ', @SubCondition, CASE WHEN @SubAddiCondition = '' THEN '' ELSE ' AND ' END, @SubAddiCondition) ELSE '' END +
									 ' WHERE  ' +@FkCondition+
										CASE WHEN @ColumnValues = '' THEN ' ' ELSE ' AND (' + @ColumnValues + ') ' END +
										CASE WHEN @FilterBy <> '' AND ISNULL(@FilterValue, '') <> '' AND ISNULL(@FilterTable, '') = '' THEN ' AND MT.'+ @FilterBy+ ' = '+ CONVERT(VARCHAR(MAX), @FilterValue) ELSE ' ' END +
										CASE WHEN @AdditionalCondition = '' THEN '' ELSE ' AND MT.' END + @AdditionalCondition +
										CASE WHEN @ConditionColumns = '' THEN '' ELSE ' ' END + @ConditionColumns +
										CASE WHEN @RBSConditions = '' THEN '' ELSE ' AND ' END + @RBSConditions +
										CASE WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'CreatedBy') THEN CAST((' AND dbo.fn_GetTableBranchRBSCondition('+ CAST(@IN_UserID AS VARCHAR(5))+ ', MT.CreatedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1') AS VARCHAR(100))
											WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'ModifiedBy') THEN CAST((' AND dbo.fn_GetTableBranchRBSCondition('+CAST(@IN_UserID AS VARCHAR(5))+ ', MT.ModifiedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1') AS VARCHAR(100)) ELSE ' ' END
		END
		SELECT @Source AS SourceID, @ObjectName AS ObjectName, @DBConnection AS DBConnection, @Query AS Query, @SelectStmt AS ColumnList, 
			@KeyColumn AS KeyColumn, ISNULL(@OrderByColumn, '') AS OrderByColumn, @DecimalLength AS DecimalLength, @DataTypes AS DataTypes,
			@BarLimitCount AS BarLimitCount, @ResultColumnOrder AS ResultColumnOrder, @GridTypeID AS GridType;
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spReportGetDataSources]'
GO

CREATE PROCEDURE [dbo].[spReportGetDataSources](
	@IN_Event VARCHAR(10),
	@IN_DataID VARCHAR(100),
	@IN_Header NVARCHAR(500),
	@IN_FormID INT,
	@IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY

	  DECLARE @ErrorMessage NVARCHAR(2000),
			  @ErrorSeverity NVARCHAR(50),
			  @ErrorState NVARCHAR(50),
				@DSCount INT = 0,
				@OutString NVARCHAR(MAX) = '', 
				@Query NVARCHAR(MAX) = '',
				@Min INT = 0,  
				@Max INT = 0,
				@ControlID BIGINT = 0,
				@TabOrder BIGINT = 0,
				@GroupOrder BIGINT = 0,
				@UserProfileID INT = ISNULL((SELECT UP.ProfileID FROM CmnUserDetails UP WHERE UP.UserID = @IN_UserID), 0),
				@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0),
				@DBConnection INT = 0,
				@DBConnectionType VARCHAR(50) = '',
				@RBSTableName VARCHAR(255) = ISNULL((SELECT ISNULL(TableName, '') FROM CmnFormDetails WHERE FormID = @IN_FormID), '')

		DECLARE @RBSDataVariable TABLE (
			RowNo INT NOT NULL,
			ControlName NVARCHAR(200) NULL,
			TableName VARCHAR(255) NULL,
			TableColumn VARCHAR(255) NULL,
			DataValue NVARCHAR(MAX) NULL)

		INSERT INTO @RBSDataVariable (RowNo, ControlName, TableName, TableColumn, DataValue)
		EXEC spCmnGetFormRBSData @IN_FormID, @IN_UserID, ''

		IF @FormType = 6
      SELECT @DBConnection = ISNULL(RC.DBConnection, 0)
      FROM DashboardConfiguration RC
      WHERE RC.FormID = @IN_FormID 
        AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;
		ELSE
			SELECT @DBConnection = ISNULL(RC.DBConnection, 0)
			FROM ReportConfiguration RC
			WHERE RC.FormID = @IN_FormID 
				AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;

		IF EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TlsDBConfigDetails]') AND [TYPE] IN (N'U'))
		BEGIN
			SELECT @DBConnectionType = ISNULL(DT.TypeValues, '')
			FROM TlsDBConfigDetails DB
				LEFT JOIN CmnCodeMaster DT ON DT.Type = 'Database Type' AND DT.CodemasterID = DB.DatabaseTypeID
			WHERE DB.ReferenceID = @DBConnection
		END

		IF OBJECT_ID('tempdb..#tempControls') IS NOT NULL
			DROP TABLE #tempControls
				
		CREATE TABLE #tempControls (
			ControlName VARCHAR(100) NULL,
			TabOrder INT NULL,
			GroupOrder INT NULL,
			ControlOrder INT NULL,
			TableColumn SYSNAME NULL,
			ControlType NVARCHAR(100) NULL,
			ControlTypeId INT NULL,
			DataType NVARCHAR(100) NULL,
			SelectApplicable BIT NULL,
			DSNum INT NULL,
			DSQuery NVARCHAR(MAX) NULL,
			DataSource NVARCHAR(MAX) NULL,
			DefaultValue NVARCHAR(500) NULL,
			FillEvent VARCHAR(MAX) NULL,
			IsReadonly BIT NULL,
			DateDifference INT NULL)

		INSERT INTO #tempControls
		SELECT (CASE WHEN ISNULL(SML.Name, '') = '' THEN ISNULL(FS.Name, '') ELSE ISNULL(SML.Name, '') END ) AS ControlName, 
			0, 0, FS.SearchOrder, FS.TableColumn, CT.TypeValues AS ControlType, CT.CodemasterID AS ControlTypeId, DT.TypeValues AS DataType, FS.SelectApplicable, 0 AS DSNum,
			CASE WHEN @DBConnectionType = 'MySql' THEN
				CASE WHEN FS.FkType = 1 THEN  
					(' SELECT IFNULL(GROUP_CONCAT(''{"Value":"'',' + 'CM.' + FS.FkColumn + ',''","Text":"'',' + 'CM.' + FS.FkData + ',''"}''  ORDER BY ' 
						+ CASE WHEN ISNULL(FS.FkOrder, 0) = 1 THEN (FS.FkData + ' ASC') WHEN ISNULL(FS.FkOrder, 0) = 2 THEN (FS.FkData + ' DESC') 
							WHEN ISNULL(FS.FkOrder, 0) = 3 THEN 'CM.OrderBy' WHEN ISNULL(FS.FkOrder, 0) = 4 THEN (FS.FkColumn + ' ASC') ELSE 'CM.OrderBy' END 
						+ '), '''')' + ' INTO @OutString ' + ' FROM CmnCodeMaster CM  WHERE CM.Type=''' + FS.FkTable + '''' 
						+ CASE WHEN ISNULL(FS.AdditionalConditions, '') = '' THEN '' ELSE 'AND "' END + FS.AdditionalConditions 
						+ CASE WHEN ISNULL(RBS.DataValue, '') = '' THEN '' ELSE CONCAT(' AND FIND_IN_SET(', FS.FkColumn, ',''', ISNULL(RBS.DataValue, ''), ''') > 0') END
						+ CASE WHEN FS.FkDelete = 0 THEN '' ELSE ' AND IFNULL(CM.IsDeleted, 0) = 0 ' END + CASE WHEN FS.FkNotActive = 0 THEN '' ELSE ' AND IFNULL(CM.NotActive, 0) = 0 ' END
						+ CASE WHEN FS.FkVersion = 0 THEN '' ELSE ' AND IFNULL(CM.IsCurrentVersion, 1) = 1 ' END)
					WHEN FS.FkType = 2 THEN 
						(' SELECT IFNULL(GROUP_CONCAT(''{"Value":"'',' + 'MT.' + FS.FkColumn + ',''","Text":"'',' + 'MT.' + FS.FkData + ',''"}''  ORDER BY '
							+ CASE WHEN ISNULL(FS.FkOrder, 0) = 1 THEN ('MT.' + FS.FkData + ' ASC') WHEN ISNULL(FS.FkOrder, 0) = 2 THEN ('MT.' + FS.FkData + ' DESC') 
								WHEN ISNULL(FS.FkOrder, 0) = 3 THEN 'MT.OrderBy' WHEN ISNULL(FS.FkOrder, 0) = 4 THEN (FS.FkColumn + ' ASC') ELSE ('MT.' + FS.FkData) END
							+ '), '''')' + ' INTO @OutString FROM ' + FS.FkTable + ' MT WHERE 1=1'
							+ CASE WHEN ISNULL(FS.AdditionalConditions, '') = '' THEN '' ELSE ' AND ' END + FS.AdditionalConditions
							+ CASE WHEN ISNULL(RBS.DataValue, '') = '' THEN '' ELSE CONCAT(' AND FIND_IN_SET(', FS.FkColumn, ',''', ISNULL(RBS.DataValue, ''), ''') > 0') END
							+ CASE WHEN FS.FkDelete = 0 THEN '' ELSE ' AND IFNULL(MT.IsDeleted, 0) = 0 ' END + CASE WHEN FS.FkNotActive = 0 THEN '' ELSE ' AND IFNULL(MT.NotActive, 0) = 0 ' END
							+ CASE WHEN FS.FkVersion = 0 THEN '' ELSE ' AND IFNULL(MT.IsCurrentVersion, 1) = 1 ' END)
				ELSE '' END
			ELSE
				CASE WHEN FS.FkType = 1 THEN  
					' SET @DOUT = ISNULL(SUBSTRING((SELECT '','' + (''{"Value":"'' + REPLACE(REPLACE(CAST(CM.' + FS.FkColumn + ' AS NVARCHAR(MAX)), ''\'', ''\\''),''"'', ''\"'') +''","Text":"''+ REPLACE(REPLACE(CAST(CM.' + FS.FkData + ' AS NVARCHAR(MAX)), ''\'', ''\\''),''"'', ''\"'') +''"}'')
																					FROM CmnCodeMaster CM WHERE CM.Type=''' + FS.FkTable + '''' +
																						CASE WHEN ISNULL(FS.AdditionalConditions, '') = '' THEN '' ELSE ' AND ' + FS.AdditionalConditions END +
																						CASE WHEN ISNULL(RBS.DataValue, '') = '' THEN '' ELSE ' AND EXISTS (SELECT 1 FROM dbo.fn_DataSplit(' + FS.FkColumn + ', '','') A WHERE (PATINDEX(''%,'' + A.items + '',%'', '',''+''' + ISNULL(RBS.DataValue, '') + '''+'','') > 0))' END +
																						CASE WHEN @DBConnection = 0 THEN dbo.fn_GetTableCompanyRBSCondition(@IN_UserID, 'CmnCodeMaster', FS.TableColumn) ELSE '' END +
																						CASE WHEN FS.FkDelete = 0 THEN '' ELSE ' AND  ISNULL(CM.IsDeleted, 0) = 0 '  END  +
																						CASE WHEN FS.FkNotActive = 0 THEN '' ELSE ' AND ISNULL(CM.NotActive, 0) = 0 ' END + 
																						CASE WHEN FS.FkVersion = 0 THEN '' ELSE ' AND ISNULL(CM.IsCurrentVersion, 1) = 1 ' END +
																						' ORDER BY ' + CASE WHEN ISNULL(FS.FkOrder, 0) = 1 THEN FS.FkData + ' ASC '
																																WHEN ISNULL(FS.FkOrder, 0) = 2 THEN FS.FkData + ' DESC ' 
																																WHEN ISNULL(FS.FkOrder, 0) = 3 THEN ' CM.OrderBy' 
																																WHEN ISNULL(FS.FkOrder, 0) = 4 THEN FS.FkColumn + ' ASC' 
																														ELSE ' CM.OrderBy' END + 
																					' FOR XML PATH(''''), ROOT(''MyString''), TYPE).value(''/MyString[1]'',''NVARCHAR(MAX)''), 2, 4000000000),'''') '
					WHEN FS.FkType = 2 THEN 
						' SET @DOUT = ISNULL(SUBSTRING((SELECT '','' + (''{"Value":"''+ REPLACE(REPLACE(CAST(MT.' + FS.FkColumn + ' AS NVARCHAR(MAX)), ''\'', ''\\''),''"'', ''\"'') +''","Text":"''+ REPLACE(REPLACE(CAST(MT.' + FS.FkData + ' AS NVARCHAR(MAX)), ''\'', ''\\''),''"'', ''\"'') +''"}'')
																						FROM ' + FS.FkTable + ' MT WHERE 1=1 ' + 
																							CASE WHEN ISNULL(FS.AdditionalConditions, '') = '' THEN '' ELSE ' AND ' + FS.AdditionalConditions END +
																							CASE WHEN ISNULL(RBS.DataValue, '') = '' THEN '' ELSE ' AND EXISTS (SELECT 1 FROM dbo.fn_DataSplit(' + FS.FkColumn + ', '','') A WHERE (PATINDEX(''%,'' + A.items + '',%'', '',''+''' + ISNULL(RBS.DataValue, '') + '''+'','') > 0))' END +
																							CASE WHEN @DBConnection = 0 THEN dbo.fn_GetTableCompanyRBSCondition(@IN_UserID, FS.FkTable, FS.TableColumn) ELSE '' END +
																							CASE WHEN FS.FkDelete = 0 THEN '' ELSE ' AND ISNULL(MT.IsDeleted, 0) = 0 ' END + 
																							CASE WHEN FS.FkNotActive = 0 THEN '' ELSE ' AND ISNULL(MT.NotActive, 0) = 0 ' END + 
																							CASE WHEN FS.FkVersion = 0 THEN '' ELSE ' AND ISNULL(MT.IsCurrentVersion, 1) = 1 ' END +
																							' ORDER BY ' + CASE WHEN ISNULL(FS.FkOrder, 0) = 1 THEN ' MT.'+ FS.FkData + ' ASC'
																																	WHEN ISNULL(FS.FkOrder, 0) = 2 THEN ' MT.' + FS.FkData + ' DESC'
																																	WHEN ISNULL(FS.FkOrder, 0) = 3 THEN ' MT.OrderBy'
																																	WHEN ISNULL(FS.FkOrder, 0) = 4 THEN FS.FkColumn + ' ASC'
																															ELSE ' MT.' + FS.FkData END +
																						' FOR XML PATH(''''), ROOT(''MyString''), TYPE).value(''/MyString[1]'',''NVARCHAR(MAX)''), 2, 4000000000),'''') '
				ELSE '' END
			END AS DSQuery, 
			'' AS DataSource, (SELECT CASE WHEN ISNULL(RSC.ControlValues, '') = '' THEN ISNULL(FS.DefaultValue, '') ELSE CASE WHEN FS.ControlType = 4 OR FS.ControlType = 5 
				THEN CONVERT(VARCHAR(MAX), RSC.ControlValues, 105)  ELSE ISNULL(RSC.ControlValues, '') END END) AS DefaultValue, '',FS.Readonly , ISNULL(FS.DateDifference, 0)   
		FROM CmnFormSearchControl FS
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FS.ControlType AND CT.IsDeleted = 0
			JOIN CmnCodeMaster DT ON DT.Type = 'Data Type' AND DT.CodemasterID = FS.DataType AND DT.IsDeleted = 0
			LEFT JOIN CmnRememberSearchControl RSC ON RSC.UserID = @IN_UserID AND RSC.SearchID = FS.SearchID 
			LEFT JOIN CmnSearchMultiLingual SML WITH (NOLOCK) ON SML.SearchID = FS.SearchID AND SML.LanguageID = @UserProfileID AND ISNULL(SML.IsDeleted, 0) = 0
			LEFT JOIN @RBSDataVariable RBS ON RBS.TableName = @RBSTableName AND RBS.TableColumn = FS.TableColumn
		WHERE FS.FormID = @IN_FormID AND FS.IsDeleted = 0;

		SELECT @DBConnection AS DBConnection;
	  
		SELECT ControlName, TableColumn, ControlType, ControlTypeId, SelectApplicable, '[]' AS DataSource, DSQuery, DefaultValue, FillEvent, IsReadonly, DateDifference
		FROM #tempControls
		ORDER BY TabOrder, GroupOrder, ControlOrder 

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spReportGetPivotColumnList]'
GO

CREATE PROCEDURE [dbo].[spReportGetPivotColumnList] (@IN_FormID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50),
						@SourceID INT = 0,
						@StoredProcedure VARCHAR(225) = '',
						@ViewName VARCHAR(225) = '',
						@TableName VARCHAR(225) = '',
						@Query NVARCHAR(MAX) = '',
						@RQuery NVARCHAR(MAX) = '',
						@ReportID BIGINT = 0,
						@DashboradID BIGINT = 0,
						@CompanyID BIGINT = 0,
						@UTCTime DATETIME = GETUTCDATE(),
						@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0),
						@DBConnection INT = 0,
						@ObjectName NVARCHAR(MAX) = '',
						@DBConnectionType VARCHAR(50) = ''

		IF @FormType = 6
      SELECT @DashboradID = RC.ReferenceID, @SourceID = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportSource, 0) ELSE RC.Source END, 
				@StoredProcedure = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportSpName, '') ELSE RC.SpName END, 
				@ViewName = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportViewName, '') ELSE RC.ViewName END, 
				@TableName = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportTableName, '') ELSE RC.TableName END,
				@Query = RC.Query, @DBConnection = ISNULL(RC.DBConnection, 0), @CompanyID = ISNULL(CompanyID, 0)
      FROM DashboardConfiguration RC
      WHERE RC.FormID = @IN_FormID 
        AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;
		ELSE
			SELECT @ReportID = RC.ReferenceID, @SourceID = RC.Source, @StoredProcedure = RC.SpName, @TableName = RC.TableName, @ViewName = RC.ViewName, 
				@Query = RC.Query, @DBConnection = ISNULL(RC.DBConnection, 0), @CompanyID = ISNULL(CompanyID, 0)
			FROM ReportConfiguration RC
				LEFT JOIN CmnFileUpload RH ON RH.ReferenceID = RC.Header AND ISNULL(RH.IsDeleted, 0) = 0
				LEFT JOIN CmnFileUpload RF ON RF.ReferenceID = RC.Footer AND ISNULL(RF.IsDeleted, 0) = 0 
			WHERE RC.FormID = @IN_FormID 
				AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;

		IF @SourceID = 1 
		BEGIN
			SET @TableName = '##tempReportSpTable';

			IF OBJECT_ID('tempdb..##tempReportSpTable') IS NOT NULL DROP TABLE ##tempReportSpTable
			SET @RQuery = 'EXEC ' + @StoredProcedure + ' 1, ' + @TableName + ''
			
			EXEC (@RQuery)

			SELECT v1.name, ty.NAME
			FROM tempdb.SYS.COLUMNS v1 
				JOIN sys.types ty ON v1.user_type_id = ty.user_type_id
			WHERE OBJECT_ID = OBJECT_ID(@TableName)
		END
		ELSE IF @SourceID = 2 
		BEGIN
			SELECT COLUMN_NAME, DATA_TYPE
			FROM INFORMATION_SCHEMA.COLUMNS
			WHERE TABLE_NAME = @ViewName
			ORDER BY ORDINAL_POSITION;
		END
		ELSE IF @SourceID = 3 
		BEGIN
			SELECT COLUMN_NAME, DATA_TYPE
			FROM INFORMATION_SCHEMA.COLUMNS
			WHERE TABLE_NAME = @TableName
			ORDER BY ORDINAL_POSITION;
		END
		ELSE IF @SourceID = 4 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportQueryTable') IS NOT NULL DROP TABLE ##tempReportQueryTable

			SET @RQuery = ('SELECT * INTO ##tempReportQueryTable FROM (' + @Query + ') TE')
    
			EXEC (@RQuery)

			SELECT v1.name, ty.NAME
			FROM tempdb.SYS.COLUMNS v1 
				JOIN sys.types ty ON v1.user_type_id = ty.user_type_id
			WHERE OBJECT_ID = OBJECT_ID('tempdb..##tempReportQueryTable')
		END
  
		/*IF NOT EXISTS (SELECT 1 FROM ReportPivotResultColumnConfig RCC WHERE RCC.ReportID = @ReportID AND DashboardID = @DashboradID AND RCC.UserID = @IN_UserID) 
		BEGIN
			INSERT INTO ReportPivotResultColumnConfig (UserID, ReportID, DashboardID, ColumnName, AliasName, Grid, Excel, Pdf, ColumnOrder, ResultOrder, OrderType, 
				DataType, IsSummary, SummaryType, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT @IN_UserID, ReportID, DashboardID, ColumnName, AliasName, Grid, Excel, Pdf, ColumnOrder, ResultOrder, OrderType, 
				DataType, IsSummary, SummaryType, CompanyID, OrderBy, 1, 1, 0, 0, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM ReportResultColumnConfig
			WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
		END;

		IF NOT EXISTS (SELECT 1 FROM ReportPivotSearchColumnConfig RCC WHERE RCC.ReportID = @ReportID AND DashboardID = @DashboradID AND RCC.UserID = @IN_UserID) 
		BEGIN
			INSERT INTO ReportPivotSearchColumnConfig (UserID, ReportID, DashboardID, ColumnName, AliasName, Search, SearchOrder, ControlType, 
				FkType, FkTable, FkColumn, FkData, DataType, DefaultValue, CompanyID, OrderBy, Version, IsCurrentVersion, 
				NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT @IN_UserID, ReportID, 0, ColumnName, AliasName, Search, SearchOrder, ControlType, 
				FkType, FkTable, FkColumn, FkData, DataType, DefaultValue, CompanyID, OrderBy, 1, 1, 0, 0, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM ReportSearchColumnConfig
			WHERE ReportID = @ReportID AND @DashboradID = 0 AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
		END;*/
  
		SELECT RCC.ColumnName AS ColumnName, RCC.AliasName AS AliasName, ISNULL(RCC.Grid, 0) AS IsGrid, ISNULL(RCC.Excel, 0) AS IsExcel,
			ISNULL(RCC.Pdf, 0) AS IsPdf, ISNULL(RCC.ResultOrder, 0) AS ResultOrder, ISNULL(RCC.OrderType, 0) AS OrderType, ISNULL(RCC.ColumnOrder, 0) AS ColumnOrder, 
			ISNULL(RCC.DataType, 0) AS DataType, ISNULL(RCC.IsSummary, 0) AS IsSummary, ISNULL(RCC.SummaryType, 0) AS SummaryType
		FROM ReportPivotResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID AND ISNULL(RCC.IsSummary, 0) = 0
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		SELECT RCC.ColumnName AS ColumnName, RCC.AliasName AS AliasName, ISNULL(RCC.Grid, 0) AS IsGrid, ISNULL(RCC.Excel, 0) AS IsExcel,
			ISNULL(RCC.Pdf, 0) AS IsPdf, ISNULL(RCC.ResultOrder, 0) AS ResultOrder, ISNULL(RCC.OrderType, 0) AS OrderType, ISNULL(RCC.ColumnOrder, 0) AS ColumnOrder, 
			ISNULL(RCC.DataType, 0) AS DataType, ISNULL(RCC.IsSummary, 0) AS IsSummary, ISNULL(RCC.SummaryType, 0) AS SummaryType
		FROM ReportPivotResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID AND ISNULL(RCC.IsSummary, 0) = 1
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		SELECT SCC.ColumnName AS ColumnName, SCC.AliasName AS AliasName, ISNULL(SCC.ControlType, 0) AS ControlType, ISNULL(SCC.FkType, 0) AS FkType,
			ISNULL(SCC.FkTable, '') AS FkTable, ISNULL(SCC.FkColumn, '') AS FkColumn, ISNULL(SCC.FkData, '') AS FkData, 
			ISNULL(SCC.SearchOrder, 0) AS SearchOrder, ISNULL(SCC.DataType, 0) AS DataType, ISNULL(SCC.DefaultValue, '') AS DefaultValue,
			ISNULL(SCC.MaxRange, '') AS MaxRange
		FROM ReportPivotSearchColumnConfig SCC
		WHERE SCC.ReportID = @ReportID AND SCC.DashboardID = @DashboradID AND SCC.UserID = @IN_UserID AND SCC.Search = 1
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportGetPivotReportData]'
GO

CREATE PROCEDURE [dbo].[spReportGetPivotReportData] (@IN_ReportType VARCHAR(50) = '', @IN_FormID INT = 0, @IN_UserID INT = 0, @IN_SessionID VARCHAR(255))

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = '',
				@TableName SYSNAME = '',
				@ConditionColumns VARCHAR(1000) = '',
				@AdditionalCondition NVARCHAR(2000) = '',
				@Query NVARCHAR(MAX) = '',
				@CountQuery NVARCHAR(MAX) = '',
				@ColumnValues NVARCHAR(4000) = '',
				@SelectStmt NVARCHAR(MAX) = '',
				@CTEColumnNames NVARCHAR(MAX) = '',
				@SelectColumnNames NVARCHAR(MAX) = '',
				@Count INT = 0,
				@PageIndex INT = 0,
				@Total INT = 0,
				@PageLimit INT = 0,
				@Limit VARCHAR(255) = '',
				@KeyColumn SYSNAME = '',
				@ControlID INT = 0,
				@SortColumn SYSNAME = '',
				@SortType VARCHAR(20) = '',
				@ControlType INT = 0,
				@FKType INT = 0,
				@FKTable SYSNAME = '',
				@OrderByColumn VARCHAR(MAX),
				@OrderBy VARCHAR(10) = '',
				@FilterBy VARCHAR(100) = '',
				@FilterValue INT = 0,
				@FilterTable VARCHAR(100) = '',
				@FilterKey VARCHAR(100) = '',
				@FilterUniqueKey VARCHAR(100) = '',
				@FkDelete BIT = 0,
				@FkNotActive BIT = 0,
				@FkCondition NVARCHAR(MAX) = '',
				@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0),
				@ReportID BIGINT = 0,
				@DashboradID BIGINT = 0,
				@Source INT = 0,
				@SpName VARCHAR(225) = '',
				@View VARCHAR(225) = '',
				@Table VARCHAR(225) = '',
				@OpenQuery NVARCHAR(MAX) = '',
				@RQuery NVARCHAR(MAX) = '',
				@ReportTitle NVARCHAR(1000) = '',
				@GridColumn NVARCHAR(200) = '',
				@GroupByFields NVARCHAR(MAX) = '',
				@DBConnection INT = 0,
				@ObjectName NVARCHAR(MAX) = '',
				@DBConnectionType VARCHAR(50) = '',
				@ReportHeader NVARCHAR(MAX) = '',
				@ReportFooter NVARCHAR(MAX) = '',
				@PivotQuery NVARCHAR(MAX) = '',
				@DetailsQuery NVARCHAR(MAX) = ''

		DECLARE @PivotDetailsReportColumns TABLE (ColumnName VARCHAR(255), AliasName NVARCHAR(500), ColumnOrder INT)
		
		IF @FormType = 6
      SELECT @DashboradID = RC.ReferenceID, @Source = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportSource, 0) ELSE RC.Source END, 
				@SpName = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportSpName, '') ELSE RC.SpName END, 
				@View = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportViewName, '') ELSE RC.ViewName END, 
				@Table = CASE WHEN ISNULL(RC.ReportSource, 0) <> 0 THEN ISNULL(RC.ReportTableName, '') ELSE RC.TableName END,
				@OpenQuery = RC.Query, @ReportTitle = RC.Title, @DBConnection = ISNULL(RC.DBConnection, 0), 
				@ReportHeader = ISNULL(RH.FullPath, ''), @ReportFooter = ISNULL(RF.FullPath, '')
      FROM DashboardConfiguration RC
				LEFT JOIN CmnFileUpload RH ON RH.ReferenceID = RC.Header AND ISNULL(RH.IsDeleted, 0) = 0
        LEFT JOIN CmnFileUpload RF ON RF.ReferenceID = RC.Footer AND ISNULL(RF.IsDeleted, 0) = 0
      WHERE RC.FormID = @IN_FormID 
        AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;
		ELSE
			SELECT @ReportID = RC.ReferenceID, @Source = RC.Source, @SpName = RC.SpName, @Table = RC.TableName, @View = RC.ViewName, 
				@OpenQuery = RC.Query, @ReportTitle = RC.Title, @DBConnection = ISNULL(RC.DBConnection, 0),
				@ReportHeader = ISNULL(RH.FullPath, ''), @ReportFooter = ISNULL(RF.FullPath, '')
			FROM ReportConfiguration RC
				LEFT JOIN CmnFileUpload RH ON RH.ReferenceID = RC.Header AND ISNULL(RH.IsDeleted, 0) = 0
				LEFT JOIN CmnFileUpload RF ON RF.ReferenceID = RC.Footer AND ISNULL(RF.IsDeleted, 0) = 0 
			WHERE RC.FormID = @IN_FormID 
				AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;

		IF @Source = 1 
		BEGIN
			SET @TableName = '##tempReportDataSpTable';
			SET @ObjectName = @SpName;
		END
		ELSE IF @Source = 2
		BEGIN
			SET @TableName = @View;
			SET @ObjectName = @View;
		END
		ELSE IF @Source = 3
		BEGIN
			SET @TableName = @Table;
			SET @ObjectName = @Table;
		END
		ELSE IF @Source = 4 
		BEGIN
			SET @TableName = '##tempReportDataTable';
			SET @ObjectName = @OpenQuery;
		END

		IF EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TlsDBConfigDetails]') AND [TYPE] IN (N'U'))
		BEGIN
			SELECT @DBConnectionType = ISNULL(DT.TypeValues, '')
			FROM TlsDBConfigDetails DB
				LEFT JOIN CmnCodeMaster DT ON DT.Type = 'Database Type' AND DT.CodemasterID = DB.DatabaseTypeID
			WHERE DB.ReferenceID = @DBConnection
		END

		IF @FilterBy <> ''
		BEGIN
			SELECT @FilterValue = ISNULL(ED.BranchID, '') FROM CmnUserDetails UD
        			JOIN MstEmployeeDetails ED ON ED.ReferenceID = UD.TypeID	
        	WHERE UD.UserID = @IN_UserID;
		END

		IF ISNULL(@FilterValue, '') = 0 
			SET @FilterBy = ''

		SET @ConditionColumns = ISNULL(SUBSTRING((SELECT ' AND ' + CASE WHEN DP.ControlType = 'Textbox' OR DP.ControlType = 'Multiline Textbox' 
																				THEN DP.ColumnName + ' LIKE ''%' + ISNULL(DP.ColumnValue, '') + '%''' 
																		WHEN DP.ControlType = 'Check Listbox' THEN
																				CASE WHEN @DBConnectionType = 'MySql' THEN 'CONCAT('','', ''' + DP.ColumnValue + ''', '','')' + ' LIKE CONCAT(''%,'', ' + DP.ColumnName + ', '',%'')'
																					ELSE '(PATINDEX(''%,'' + CONVERT(VARCHAR(MAX), ' + DP.ColumnName + ')' + '+'',%'', '','' +  
																					ISNULL(CONVERT(VARCHAR(MAX), ''' + DP.ColumnValue + '''), '''') + '','') > 0)' END
																		WHEN DP.ControlType = 'Date' THEN 
																			CASE WHEN CHARINDEX('AND', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn+ ' AS DATE) BETWEEN '+ ISNULL(DP.ColumnValue, '')+ ')') 
																				WHEN CHARINDEX('>=', DP.ColumnValue) > 0 OR CHARINDEX('<=', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn + ' AS DATE) '+ ISNULL(DP.ColumnValue, '')+ ')')
																			ELSE ('(CAST('+DP.TableColumn+ ' AS DATE) = '+ ISNULL(DP.ColumnValue, '')+ ')') END 
																		WHEN DP.ControlType = 'DateTime' THEN 
																			CASE WHEN CHARINDEX('AND', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn+ ' AS DATETIME) BETWEEN '+ ISNULL(DP.ColumnValue, '')+ ')') 
																				WHEN CHARINDEX('>=', DP.ColumnValue) > 0 OR CHARINDEX('<=', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn + ' AS DATETIME) '+ ISNULL(DP.ColumnValue, '')+ ')')
																			ELSE ('(CAST('+DP.TableColumn+ ' AS DATETIME) = '+ ISNULL(DP.ColumnValue, '')+ ')') END 
																		WHEN DP.ControlType = 'Checkbox' THEN (DP.ColumnName+ ' = '+ ISNULL(DP.ColumnValue, 0))
																		WHEN DP.ControlType = 'Combobox' AND ISNULL(DP.ColumnValue, '') = '-1' THEN ('ISNULL(' + DP.ColumnName + ', 0) NOT IN (''0'', '''') ')
																		ELSE DP.ColumnName + ' = ''' + ISNULL(DP.ColumnValue, '') + '''' END 
													FROM CmnSearchParameterProcess DP WITH (NOLOCK)
													WHERE DP.SessionID = @IN_SessionID
													ORDER BY DP.ColumnName
													FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 1, 4000000000), '')

		SET @AdditionalCondition = '';
			
		SET @ColumnValues = ''
		SET @Limit = ''		

		SET @KeyColumn = SUBSTRING((SELECT ',' + 'MT.' + RCC.ColumnName + ' ' + CASE WHEN RCC.OrderType = 1 THEN 'ASC' ELSE 'DESC' END
		FROM ReportPivotResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.UserID = @IN_UserID AND ISNULL(RCC.ResultOrder, 0) > 0
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ResultOrder FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)  	

		IF ISNULL(@KeyColumn, '') = ''
		BEGIN
			SET @OrderBy = 'ASC'
			SELECT TOP 1 @KeyColumn = CONCAT('MT.', RCC.ColumnName, ' ') 
			FROM ReportPivotResultColumnConfig RCC
			WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID
				AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
			ORDER BY RCC.ColumnOrder;
		END;

		SELECT @SelectStmt = SUBSTRING((SELECT ',' + ('MT.' + RCC.ColumnName) 
		FROM ReportPivotResultColumnConfig RCC
			LEFT JOIN CmnCodeMaster ST ON ST.Type = 'Summary Types' AND ST.CodemasterID = RCC.SummaryType
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)

		SELECT @GroupByFields = SUBSTRING((SELECT ', ' + RCC.ColumnName
		FROM ReportPivotResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID AND ISNULL(RCC.IsSummary, 0) = 0
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)

		SET @FkCondition = '';
		SET @FkDelete = 1;
		SET @FkNotActive = 1;
		IF ISNULL(@FkDelete, 0) <> 0 
			SET @FkCondition = ' MT.IsDeleted = 0 ';
	
		IF ISNULL(@FkNotActive, 0) <> 0
			SET @FkCondition = CASE WHEN ISNULL(@FkCondition, '') <> '' THEN @FkCondition+ ' AND MT.NotActive = 0 ' ELSE ' MT.NotActive = 0 ' END;

		IF @FkCondition = ''
			SET @FkCondition = ' 1=1';

		SELECT @ReportTitle AS ReportTitle, @ReportHeader AS ReportHeader, @ReportFooter AS ReportFooter;

		SELECT RCC.AliasName AS ColumnName
		FROM ReportPivotResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		INSERT INTO @PivotDetailsReportColumns
		SELECT RCC.ColumnName, RCC.AliasName, RCC.ColumnOrder
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		UNION
		SELECT RCC.ColumnName, RCC.AliasName, RCC.ColumnOrder
		FROM ReportPivotResultColumnConfig RCC
		WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID
			AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
			AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
			AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
			AND NOT EXISTS (SELECT 1 FROM ReportResultColumnConfig CC
                      WHERE CC.ReportID = RCC.ReportID AND CC.DashboardID = RCC.DashboardID AND CC.ColumnName = RCC.ColumnName
                        AND (@IN_ReportType <> 'Excel' OR CC.Excel = 1)
                        AND (@IN_ReportType <> 'Pdf' OR CC.Pdf = 1)
                        AND (@IN_ReportType <> 'Grid' OR CC.Grid = 1)
                        AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1);

		SELECT RCC.AliasName AS ColumnName
		FROM @PivotDetailsReportColumns RCC
		ORDER BY RCC.ColumnOrder;
		
		IF ISNULL(@SelectStmt, '') <> ''
		BEGIN
			SELECT @CTEColumnnames = SUBSTRING((SELECT ',[' + RCC.ColumnName + ']'
												FROM ReportPivotResultColumnConfig RCC
												WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID
													AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
													AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
													AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
													AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
													ORDER BY RCC.ColumnOrder
												FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000) 

			SELECT @SelectColumnnames = SUBSTRING((SELECT '+ '','' + ' + '''"' + RCC.ColumnName + '":"'' + REPLACE(REPLACE('
														+ CASE WHEN RCC.IsSummary = 1 THEN CASE WHEN RCC.SummaryType < 6 THEN ST.TypeValues + '(' + RCC.ColumnName + ')' ELSE 'COUNT(' + RCC.ColumnName + ')' END
														ELSE 'ISNULL(CAST(' + 'CASE WHEN CONVERT(VARCHAR(MAX), ' + RCC.ColumnName +', 105)= ''01-01-1900'' THEN '''' ELSE CONVERT(VARCHAR(MAX), ' + RCC.ColumnName + ', 127)END' + ' AS NVARCHAR(MAX)), '''')' END
														+ ', ''\'', ''\\''),''"'', ''\"'')  + ''"'''
													 FROM ReportPivotResultColumnConfig RCC
														LEFT JOIN CmnCodeMaster ST ON ST.Type = 'Summary Types' AND ST.CodemasterID = RCC.SummaryType
													WHERE RCC.ReportID = @ReportID AND RCC.DashboardID = @DashboradID AND RCC.UserID = @IN_UserID
														AND (@IN_ReportType <> 'Excel' OR RCC.Excel = 1)
														AND (@IN_ReportType <> 'Pdf' OR RCC.Pdf = 1)
														AND (@IN_ReportType <> 'Grid' OR RCC.Grid = 1)
														AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
														ORDER BY RCC.ColumnOrder
													 FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 9, 4000000000) 
		
			SET @PivotQuery = ' ;WITH GridValues ([Limit],' + @CTEColumnnames + ') AS (
										SELECT ROW_NUMBER() OVER (ORDER BY ' + @KeyColumn + '), ' 
									+ @SelectStmt + ' FROM ' + @TableName + ' MT '+
									 ' WHERE  ' +@FkCondition+
										CASE WHEN @ColumnValues = '' THEN ' ' ELSE ' AND (' + @ColumnValues + ') ' END +
										CASE WHEN @FilterBy <> '' AND ISNULL(@FilterValue, '') <> '' AND ISNULL(@FilterTable, '') = '' THEN ' AND MT.'+ @FilterBy+ ' = '+ CONVERT(VARCHAR(MAX), @FilterValue) ELSE ' ' END +
										CASE WHEN @AdditionalCondition = '' THEN '' ELSE ' AND MT.' END + @AdditionalCondition +
										CASE WHEN @ConditionColumns = '' THEN '' ELSE ' ' END + @ConditionColumns +
										CASE WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'CreatedBy') THEN CAST((' AND dbo.fn_GetTableBranchRBSCondition('+ CAST(@IN_UserID AS VARCHAR(5))+ ', MT.CreatedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1') AS VARCHAR(100))
											WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'ModifiedBy') THEN CAST((' AND dbo.fn_GetTableBranchRBSCondition('+CAST(@IN_UserID AS VARCHAR(5))+ ', MT.ModifiedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1') AS VARCHAR(100)) ELSE ' ' END + ')
										SELECT ''{''+' + @SelectColumnnames + '+''}'' FROM GridValues ' +
													CASE WHEN ISNULL(@GroupByFields, '') = '' THEN '' ELSE ' GROUP BY ' END + ISNULL(@GroupByFields, '')
												  + CASE WHEN @OrderByColumn <> '' THEN ' ORDER BY [Limit]' ELSE '' END			

			SELECT @CTEColumnnames = SUBSTRING((SELECT ',[' + RCC.ColumnName + ']'
												FROM @PivotDetailsReportColumns RCC ORDER BY RCC.ColumnOrder
												FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000) 

			SELECT @SelectStmt = SUBSTRING((SELECT ',' + '''"' + RCC.ColumnName + '":"'' + REPLACE(REPLACE('+
				'ISNULL(CAST(MT.' + RCC.ColumnName+ ' AS NVARCHAR(MAX)), ''''), ''\'', ''\\''),''"'', ''\"'')'+ ' + ''"'''  
			FROM @PivotDetailsReportColumns RCC ORDER BY RCC.ColumnOrder
			FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)

			SELECT @SelectColumnnames = SUBSTRING((SELECT '+ '','' + ISNULL([' + RCC.ColumnName + '], '''')'
													 FROM @PivotDetailsReportColumns RCC ORDER BY RCC.ColumnOrder
													 FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 9, 4000000000) 
			
			SET @DetailsQuery = ' ;WITH GridValues ([Limit],' + @CTEColumnnames + ') AS (
										SELECT ROW_NUMBER() OVER (ORDER BY ' + @KeyColumn + ' '+ @OrderBy + '), ' 
									+ @SelectStmt + ' FROM ' + @TableName + ' MT '+
									 ' WHERE  ' +@FkCondition+
										CASE WHEN @ColumnValues = '' THEN ' ' ELSE ' AND (' + @ColumnValues + ') ' END +
										CASE WHEN @FilterBy <> '' AND ISNULL(@FilterValue, '') <> '' AND ISNULL(@FilterTable, '') = '' THEN ' AND MT.'+ @FilterBy+ ' = '+ CONVERT(VARCHAR(MAX), @FilterValue) ELSE ' ' END +
										CASE WHEN @AdditionalCondition = '' THEN '' ELSE ' AND MT.' END + @AdditionalCondition +
										CASE WHEN @ConditionColumns = '' THEN '' ELSE ' ' END + @ConditionColumns +
										CASE WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'CreatedBy') THEN CAST((' AND dbo.fn_GetTableBranchRBSCondition('+ CAST(@IN_UserID AS VARCHAR(5))+ ', MT.CreatedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1') AS VARCHAR(100))
											WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'ModifiedBy')  THEN CAST((' AND dbo.fn_GetTableBranchRBSCondition('+CAST(@IN_UserID AS VARCHAR(5))+ ', MT.ModifiedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1') AS VARCHAR(100)) ELSE ' ' END + ')
										SELECT ''{''+' + @SelectColumnnames + '+''}'' FROM GridValues ' +
												  + CASE WHEN @OrderByColumn <> '' THEN ' ORDER BY [Limit]' ELSE '' END
		END

		SELECT @Source AS SourceID, @ObjectName AS ObjectName, @DBConnection AS DBConnection, @PivotQuery AS PivotQuery, @DetailsQuery AS DetailsQuery;
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spReportPivotColumnEntry]'
GO

CREATE PROCEDURE [dbo].[spReportPivotColumnEntry] (@IN_FormID BIGINT, @IN_UserID INT, @IN_ColumnName VARCHAR(255),
  @IN_AliasName NVARCHAR(500), @IN_Grid BIT, @IN_Excel BIT, @IN_Pdf BIT, @IN_ColumnOrder INT, @IN_ResultOrder INT, @IN_OrderType INT,
	@IN_DataType INT, @IN_IsSummary BIT, @IN_SummaryType INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_PivotColumnEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@ReportID BIGINT = 0,
							@CompanyID BIGINT = 0,
							@DashboradID BIGINT = 0,
							@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0)

			IF @FormType = 6
				SELECT @DashboradID = ReferenceID, @CompanyID = ISNULL(CompanyID, 0)
				FROM DashboardConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			ELSE
				SELECT @ReportID = ReferenceID, @CompanyID = ISNULL(CompanyID, 0)
				FROM ReportConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			UPDATE ReportPivotResultColumnConfig
			SET ColumnOrder = ColumnOrder + 1
			WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ColumnName <> @IN_ColumnName AND ColumnOrder >= @IN_ColumnOrder
				AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			IF NOT EXISTS (SELECT 1 FROM ReportPivotResultColumnConfig RCC WHERE RCC.ReportID = @ReportID AND DashboardID = @DashboradID AND RCC.UserID = @IN_UserID 
											AND RCC.ColumnName = @IN_ColumnName AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1) 
			BEGIN
				INSERT INTO ReportPivotResultColumnConfig (UserID, ReportID, DashboardID, ColumnName, AliasName, Grid, Excel, Pdf, ColumnOrder, ResultOrder, OrderType, 
					DataType, IsSummary, SummaryType, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				VALUES (@IN_UserID, @ReportID, @DashboradID, @IN_ColumnName, @IN_AliasName, @IN_Grid, @IN_Excel, @IN_Pdf, @IN_ColumnOrder, @IN_ResultOrder, 
					@IN_OrderType, @IN_DataType, @IN_IsSummary, @IN_SummaryType, @CompanyID, @IN_ColumnOrder, 1, 1, 0, 0, 
					@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime);
			END
			ELSE
			BEGIN
				UPDATE ReportPivotResultColumnConfig
				SET AliasName = @IN_AliasName,
					Grid = @IN_Grid,
					Excel = @IN_Excel,
					Pdf = @IN_Pdf,
					ColumnOrder = @IN_ColumnOrder,
					ResultOrder = @IN_ResultOrder,
					OrderType = @IN_OrderType,
					DataType = @IN_DataType,
					IsSummary = @IN_IsSummary,
					SummaryType = @IN_SummaryType,
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @UTCTime
				WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ColumnName = @IN_ColumnName 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			END;

		COMMIT TRANSACTION tran_PivotColumnEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_PivotColumnEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportPivotFilterEntry]'
GO

CREATE PROCEDURE [dbo].[spReportPivotFilterEntry] (@IN_FormID BIGINT, @IN_UserID INT, @IN_ColumnName VARCHAR(255),
  @IN_AliasName NVARCHAR(500), @IN_SearchOrder INT, @IN_ControlType INT, @IN_FkType INT, @IN_FkTable VARCHAR(255), 
	@IN_FkColumn VARCHAR(255), @IN_FkData VARCHAR(255), @IN_DataType INT, @IN_DefaultValue NVARCHAR(1000), @IN_MaxRange NVARCHAR(1000))
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_PivotFilterEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@ReportID BIGINT = 0,
							@CompanyID BIGINT = 0,
							@DashboradID BIGINT = 0,
							@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0)

			IF @FormType = 6
				SELECT @DashboradID = ReferenceID, @CompanyID = ISNULL(CompanyID, 0)
				FROM DashboardConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			ELSE
				SELECT @ReportID = ReferenceID, @CompanyID = ISNULL(CompanyID, 0)
				FROM ReportConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			UPDATE ReportPivotSearchColumnConfig
			SET SearchOrder = SearchOrder + 1
			WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND UserID = @IN_UserID 
				AND ColumnName <> @IN_ColumnName AND SearchOrder >= @IN_SearchOrder
				AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
  
			IF NOT EXISTS (SELECT 1 FROM ReportPivotSearchColumnConfig RCC WHERE RCC.ReportID = @ReportID AND DashboardID = @DashboradID AND RCC.UserID = @IN_UserID 
											AND RCC.ColumnName = @IN_ColumnName AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1) 
			BEGIN
				INSERT INTO ReportPivotSearchColumnConfig (UserID, ReportID, DashboardID, ColumnName, AliasName, Search, SearchOrder, ControlType, 
					FkType, FkTable, FkColumn, FkData, DataType, DefaultValue, MaxRange, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				VALUES (@IN_UserID, @ReportID, @DashboradID, @IN_ColumnName, @IN_AliasName, 1, @IN_SearchOrder, @IN_ControlType, 
					@IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_DataType, @IN_DefaultValue, @IN_MaxRange, @CompanyID, @IN_SearchOrder, 1, 1, 0, 0, 
					@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime);
			END
			ELSE
			BEGIN
				UPDATE ReportPivotSearchColumnConfig
				SET AliasName = @IN_AliasName,
					Search = 1,
					SearchOrder = @IN_SearchOrder,
					ControlType = @IN_ControlType,
					FkType = @IN_FkType,
					FkTable = @IN_FkTable,
					FkColumn = @IN_FkColumn,
					FkData = @IN_FkData,
					DataType = @IN_DataType,
					DefaultValue = @IN_DefaultValue,
					MaxRange = @IN_MaxRange,
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @UTCTime
				WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ColumnName = @IN_ColumnName 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			END;

		COMMIT TRANSACTION tran_PivotFilterEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_PivotFilterEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportPublish]'
GO

CREATE PROCEDURE [dbo].[spReportPublish](
	@IN_ReportID INT,
	@IN_FormID INT, 
	@IN_UserID INT
)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  BEGIN TRANSACTION tran_ReportPublish
	
	  DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@RQuery NVARCHAR(MAX) = '',
			@Query NVARCHAR(MAX) = '',
			@Name NVARCHAR(500) = '',
			@Title NVARCHAR(500) = '',
			@SourceID INT = 0,
			@StoredProcedure VARCHAR(100) = '',
			@ViewName VARCHAR(100) = '',
			@TableName VARCHAR(100) = '',
			@FormID INT = 0,
			@FormTableName NVARCHAR(100) = '',
			@FormCount INT = 0,
			@MainMenuOrder INT = 0,
			@ModuleID INT = 0,
			@CodemasterID INT = 0,
			@TabID INT = 0,
			@GoupBoxID INT = 0,
			@controlID INT = 0,
			@MainFormID INT = 0,
			@SubMenuOrder INT = 0,
			@MainMenuName NVARCHAR(500) = '',
			@MainMenuCount INT = 0,
			@FormIcon NVARCHAR(100) = '',
			@ModuleMenuCount INT = 0,
			@PivotReport BIT,
			@FormNameCount INT = 0, 
			@FormNameID BIGINT = 0,
			@ExistingFormCount BIGINT = 0,
			@GridType INT = 1,
			@ExistingFormID INT = 0,
			@ExistingCount INT = 0,
			@DeletedFormCount INT = 0,
			@IsMainMenu BIT = 0,
			@MainOrder INT = 0,
			@MainMenuOrderMax INT = 0,
			@GridTypeID INT = 0,
			@GridAcessType INT = 1
			
		SELECT @Name = Name, @Title = Title, @SourceID = Source, @StoredProcedure = SpName, @ViewName = ViewName, @TableName = TableName, @Query = Query, @FormID = ISNULL(FormID, 0), @IsMainMenu = ISNULL(RC.IsMainMenu, 0),
			@MainMenuName = CASE WHEN ISNULL(@IsMainMenu, 0) = 1 THEN '' ELSE ISNULL(CM.TypeValues, '') END, @PivotReport = ISNULL(RC.PivotReport, 0), @MainOrder = ISNULL(RC.MainMenuOrder, 0),
			@GridTypeID = ISNULL(RC.GridTypeID, 0)
		FROM ReportConfiguration RC
			JOIN CmnCodeMaster CM ON CM.CodemasterID = RC.ModuleID AND Type = 'Module'
		WHERE RC.ReferenceID = @IN_ReportID;
  
		IF @SourceID = 1
			SET @FormTableName = @StoredProcedure;
		ELSE IF @SourceID = 2
			SET @FormTableName = @ViewName;
		ELSE IF @SourceID = 3
			SET @FormTableName = @TableName;
		ELSE IF @SourceID = 4
			SET @FormTableName = '';
	
		SET @ModuleID = ISNULL((SELECT CodemasterID FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = 'Report' AND IsDeleted = 0 AND NotActive = 0), 6);
		SELECT @MainMenuCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @MainMenuName AND ISNULL(MainMenu1, 0) = 0 AND FormPath = '' AND IsDeleted = 0;
		
		IF (ISNULL(@MainMenuCount, 0) = 0 AND ISNULL(@MainMenuName, '') <> '')
		BEGIN
			SELECT @MainMenuOrder = ISNULL(Max(MainMenuOrder), 0), @MainFormID = ISNULL(MAX(FormID) + 10, 600) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND FormPath = '' AND ISNULL(MainMenu1, 0) = 0 AND IsDeleted = 0;
			SELECT @MainMenuOrder = OrderBy, @FormIcon = ImagePath FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = @MainMenuName AND IsDeleted = 0 AND NotActive = 0;  
			
			SET @ExistingFormCount = (SELECT COUNT(1) FROM CmnFormDetails WHERE FormID = @MainFormID);
			IF @ExistingFormCount > 0
			BEGIN
			   SET @MainFormID = (SELECT (MAX(FormID) + 1) FROM CmnFormDetails);
			END

			IF ISNULL(@MainMenuOrder, 0) = 0
			  SET @MainMenuOrder = 1;
			
			INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,
				FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon,
				IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
			SELECT '', @MainMenuOrder, 0, NULL, 0, @MainFormID, @MainMenuName, @MainMenuName, @ModuleID, 0, NULL, NULL, @FormIcon,
				0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime; 

			DECLARE @Role VARCHAR(10) = 'Admin',
					@HasReadPermission BIT = 1,
					@IsFavourite BIT = 0,
					@FavouriteOrder INT = '0',
					@SubAudit BIT = 0,
					@Audit BIT = 1,
					@ValidateChecksum BIT = 1,
					@RoleID INT = 0,
					@TabList VARCHAR(500) = '',
					@ButtonList VARCHAR(500) = ''

			SET @RoleID = ISNULL((SELECT CodemasterID FROM CmnCodeMaster WHERE Type = 'Roles' AND TypeValues = @Role), 0);
			SET @ButtonList = '';
			SET @TabList = ISNULL(SUBSTRING((SELECT ',' + CAST(TabID AS VARCHAR(MAX)) FROM CmnFormTabs WHERE FormID = @MainFormID
								FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
			SET @ButtonList = ISNULL(SUBSTRING((SELECT ',' + CAST(CodemasterID AS VARCHAR(MAX)) FROM CmnCodeMaster WHERE MenuID = @MainFormID AND Type = 'Menubutton' AND IsDeleted = 0 AND NotActive = 0
								FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
			SELECT @MainMenuOrder = MainMenuOrder, @SubMenuOrder = SubMenuOrder FROM CmnFormDetails WHERE FormID = @MainFormID;

			INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT @RoleID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
				@MainFormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
				, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0;
  
			INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.UserID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
				@MainFormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
				, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM CmnUserDetails E WHERE PATINDEX(CONCAT('%,', CAST(E.RoleID AS VARCHAR(50)), ',%'), CONCAT(',', CAST(@RoleID AS VARCHAR(50)), ',')) > 0;
		END
		ELSE
		BEGIN
			SELECT @FormIcon = ImagePath FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = @MainMenuName AND IsDeleted = 0 AND NotActive = 0;
		END

		SET @FormCount = 0;
		SET @FormNameCount = 0;
		SET @ExistingFormID = 0;
		SET @ExistingCount = 0;
		SET @FormNameID = 0;
		SET @SubMenuOrder = 0;

		SELECT @MainFormID = FormID FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @MainMenuName AND FormPath = '' AND IsDeleted = 0;
		SELECT @FormCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 0;
		SELECT @FormNameCount = COUNT(1) FROM CmnFormDetails WHERE Name = @Name AND ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
		SELECT @DeletedFormCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 1;

		IF @FormNameCount > 0
		BEGIN
			SELECT @FormNameID = FormID FROM CmnFormDetails WHERE Name = @Name AND ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
		END

		SET @ExistingFormID = ISNULL((CASE WHEN @FormNameCount = 0 THEN @FormID ELSE @FormNameID END), 0);
		SET @ExistingCount = ISNULL((CASE WHEN @FormNameCount = 0 THEN @FormCount ELSE @FormNameCount END), 0);

		IF OBJECT_ID('tempdb..#tempUserList') IS NOT NULL
			DROP TABLE #tempUserList

		CREATE TABLE #tempUserList (
			UserID INT NULL,
			Buttons VARCHAR(MAX) NULL,
			Tabs VARCHAR(MAX) NULL,
			MainMenuOrder INT NULL, 
			SubMenuOrder INT NULL,
			HasReadPermission BIT NULL,
			IsFavourite BIT NULL, 
			FavouriteOrder INT NULL,
			Audit BIT NULL,
			ValidateChecksum BIT NULL)	

		IF OBJECT_ID('tempdb..#tempRoleList') IS NOT NULL
			DROP TABLE #tempRoleList

		CREATE TABLE #tempRoleList (
			RoleID INT NULL,
			Buttons VARCHAR(MAX) NULL,
			Tabs VARCHAR(MAX) NULL,
			MainMenuOrder INT NULL, 
			SubMenuOrder INT NULL,
			HasReadPermission BIT NULL,
			IsFavourite BIT NULL, 
			FavouriteOrder INT NULL,
			Audit BIT NULL,
			ValidateChecksum BIT NULL)	

		IF ISNULL(@ExistingFormID, 0) <> 0 AND ISNULL(@ExistingCount, 0) <> 0
		BEGIN				
			INSERT INTO #tempRoleList
			SELECT RoleID, ISNULL(SUBSTRING((SELECT ',' + CM.TypeValues FROM CmnCodeMaster CM WHERE CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.CodemasterID AS VARCHAR(500)) + ',%' , ',' + CAST(Buttons AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM CmnFormTabs FT WHERE PATINDEX('%,' +  CAST(FT.TabID AS VARCHAR(500)) + ',%' , ',' + CAST(Tabs AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				MainMenuOrder, SubMenuOrder, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum
			FROM CmnRolePermission 
			WHERE FormID = @ExistingFormID AND IsDeleted = 0;

			INSERT INTO #tempUserList
			SELECT UserID, ISNULL(SUBSTRING((SELECT ',' + CM.TypeValues FROM CmnCodeMaster CM WHERE CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.CodemasterID AS VARCHAR(500)) + ',%' , ',' + CAST(Buttons AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM CmnFormTabs FT WHERE PATINDEX('%,' +  CAST(FT.TabID AS VARCHAR(500)) + ',%' , ',' + CAST(Tabs AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				MainMenuOrder, SubMenuOrder, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum
			FROM CmnRBSPermission 
			WHERE FormID = @ExistingFormID AND IsDeleted = 0;
    
		END

		IF @ExistingCount <> 0
		BEGIN
			SELECT @SubMenuOrder = SubMenuOrder FROM CmnFormDetails WHERE FormID = @ExistingFormID;
		END

		IF (@FormCount > 0 OR @DeletedFormCount > 0) AND @FormID <> 0
			EXEC spCmnClearFormConfiguration @FormID;  

		IF @FormNameCount > 0 AND ISNULL(@FormNameID, 0) <> 0
		BEGIN
			SET @FormID = @FormNameID;
			EXEC spCmnClearFormConfiguration @FormNameID; 
		END 

		IF ISNULL(@FormID, 0) = 0
		BEGIN
			SELECT @SubMenuOrder = ISNULL(MAX(SubMenuOrder) + 1, 1), @FormID = ISNULL(MAX(FormID) + 1, (@MainFormID + 1)) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
		END
		
		SET @ExistingFormCount = (SELECT COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID);
		IF @ExistingFormCount > 0
		BEGIN
			SET @FormID = (SELECT (MAX(FormID) + 1) FROM CmnFormDetails);
		END

		IF ISNULL(@MainMenuName, '') = ''
		BEGIN
			SET @SubMenuOrder = 0;
			SET @MainFormID = 0;
			SELECT @MainMenuOrderMax = ISNULL(MAX(MainMenuOrder) + 1, 1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND (ISNULL(MainMenu1, '') = '' OR ISNULL(MainMenu1, 0) = 0) AND IsDeleted = 0;
			SET @MainMenuOrder = CASE WHEN ISNULL(@MainOrder, 0) = 0 THEN @MainMenuOrderMax ELSE ISNULL(@MainOrder, 0) END;
		END
		ELSE
		BEGIN
			IF ISNULL(@SubMenuOrder, 0) = 0
				SET @SubMenuOrder = 1;
		END

		IF ISNULL(@FormID, 0) = 0
			SET @FormID = @MainFormID + 1;
  
		INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon,
				IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
		SELECT 'StandardPage', CASE WHEN @MainMenuName = '' THEN @MainMenuOrder ELSE 0 END, @SubMenuOrder, @MainFormID, 8, @FormID, @Name, @Title, @ModuleID, 0, '', '', @FormIcon,
				0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime;
  
		SET @CodemasterID = ISNULL((SELECT (MAX(CodemasterID) + 1) FROM CmnCodeMaster WHERE Type = 'Menubutton'), 1);
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
				,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 1, 'Menubutton', @CodemasterID, 'Menubutton', 'Excel', '', '', '', '', 1, '', 'fa-file-excel-o', @FormID, @ModuleID, '', 'REPORT.generateExcelReport()', 0, 6
				,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		SET @CodemasterID = @CodemasterID + 1;
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
				,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 1, 'Menubutton', @CodemasterID, 'Menubutton', 'Pdf', '', '', '', '', 2, '', 'fa-file-pdf-o', @FormID, @ModuleID, '', 'REPORT.generatePdfReport()', 0, 6
				,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		SET @CodemasterID = @CodemasterID + 1;
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
				,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 1, 'Menubutton', @CodemasterID, 'Menubutton', 'Csv', '', '', '', '', 3, '', 'fa-file-text-o', @FormID, @ModuleID, '', 'REPORT.generateCsvReport()', 0, 6
				,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		IF @PivotReport = 1
		BEGIN
			SET @CodemasterID = @CodemasterID + 1;
			INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			  ,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT 1, 'Menubutton', @CodemasterID, 'Menubutton', 'Pivot Report', '', '', '', '', 4, '', 'fa-flag-checkered', @FormID, @ModuleID, '', 'CMNF.loadJs(''/assets/javascripts/PivotReport.js'', typeof PIVOT);setTimeout(function(){ PIVOT.openConfigurationPopup(); }, 1000);', 0, 6
			  ,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		END

		UPDATE ReportConfiguration SET FormID = @FormID, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_ReportID;    
		
		INSERT INTO CmnFormTabs (FormID, Name, TabOrder, IsMandatory, ModifiedDate, IsDeleted) VALUES (@FormID, @Name, 1, 1, @UTCTime, 0);

		SET @TabID = SCOPE_IDENTITY();

		INSERT INTO CmnGroupBoxes (TabID, Name, GroupOrder, CommonGroup, ModifiedDate, IsDeleted) VALUES (@TabID, @Name, 1, 1, @UTCTime, 0);

		SET @GoupBoxID = SCOPE_IDENTITY();

		INSERT INTO CmnFormControls (GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, MaxLength, Events, 
			ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsMobile,
			IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, FillType, ButtonID, FkOrder, FkDelete, FkNotActive,
			FkVersion, FkShowActive, VersionCheck, ControlOrder, ModifiedDate, IsDeleted)
		VALUES (@GoupBoxID, @Name, '', 19, 1, 1, 0, 0, -1, 'STP.search()', '', 1, 0, '', '', 0, 0, 0, 0, 0, 1, 0, 0, 0, '', '', '', '', '', 
			0, 0, 0, 0, 0, 0, 0, 0, 1, @UTCTime, 0);

		SET @ControlID = SCOPE_IDENTITY();

		INSERT INTO CmnControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
			IsMandatory, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, IsMobile,
			UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion,
			FkShowActive, VersionCheck, ColumnOrder, ModifiedDate, IsDeleted, ColumnWidth)
		SELECT @ControlID, RCC.ColumnName, '', '', RCC.AliasName, 20, RCC.DataType, 1, 0, 0, -1, '', '', 0, 0, '', '', 1, RCC.IsMobile, 0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 0,
			RCC.ColumnOrder, @UTCTime, 0, CASE WHEN ISNULL(RCC.ColumnWidth, 0) = 0 THEN 100 ELSE RCC.ColumnWidth END
		FROM ReportResultColumnConfig RCC
		WHERE RCC.ReportID = @IN_ReportID AND RCC.Grid = 1 AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		ORDER BY RCC.ColumnOrder;

		INSERT INTO CmnFormSearchControl (ControlID, FormID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory,
			MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, IsMobile,
			AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, SearchOrder, ModifiedDate, IsDeleted)
		SELECT @ControlID, @FormID, SCC.AliasName, SCC.ColumnName, SCC.ControlType, SCC.DataType, 1, 0, 0, -1, SCC.Event, SCC.ValidationEvent, 1, SCC.DefaultValue, SCC.MaxRange, SCC.FkType, SCC.FkTable, SCC.FkColumn, SCC.FkData, 
			1, SCC.AdditionalConditions, ISNULL(SCC.FkOrder, 1), ISNULL(SCC.FkDelete, 1), ISNULL(SCC.FkNotActive, 1), ISNULL(SCC.FkVersion, 1), SCC.SearchOrder, @UTCTime, 0
		FROM ReportSearchColumnConfig SCC
		WHERE SCC.ReportID = @IN_ReportID AND SCC.Search = 1 AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

		INSERT INTO CmnSearchControlColumns (SearchID, DisplayName, ColumnName, ControlType, DataType, Visibility, Readonly, IsMandatory,
			Maxlength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData,
			AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, ColumnOrder, DependentType, IsDeleted, DateDifference)
		SELECT FSC.SearchID, SCC.Name, SCC.TableColumn, SCC.ControlType, SCC.DataType, SCC.Visibility, SCC.Readonly, SCC.IsMandatory, 
			SCC.Maxlength, SCC.Events, SCC.ValidationEvent, SCC.SelectApplicable, SCC.DefaultValue, SCC.FkType, SCC.FkTable, SCC.FkColumn, 
			SCC.FkData, SCC.AdditionalConditions, SCC.FkOrder, SCC.FkDelete, SCC.FkNotActive, SCC.FkVersion, 
			SCC.SearchOrder, SCC.DependentType, 0, ISNULL(SCC.DateDifference, NULL)
		FROM RepDependentColumnConfig SCC
			JOIN ReportSearchColumnConfig SC ON SC.ReportID = SCC.ReportID AND SC.Search = 1
				AND SC.IsDeleted = 0 AND SC.NotActive = 0 AND SC.IsCurrentVersion = 1
			JOIN CmnFormSearchControl FSC ON FSC.FormID = @FormID AND FSC.TableColumn = SC.ColumnName
				AND FSC.Name = SC.AliasName AND FSC.IsDeleted = 0
		WHERE SCC.ReportID = @IN_ReportID
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

		IF EXISTS(SELECT 1 FROM ReportResultColumnConfig RCC WHERE RCC.ReportID = @IN_ReportID AND RCC.Grid = 1 AND RCC.IsSummary = 1
				AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1)
			SET @GridType = 0

			IF (@GridTypeID = 2)
			BEGIN
				SET @GridType = 0;
				SET @GridAcessType = 12;
			END

		INSERT INTO CmnControlProperty VALUES (@ControlID, 'Grid Header', @Title, @UTCTime, 0);
		INSERT INTO CmnControlProperty VALUES (@ControlID, 'Page Size', 15, @UTCTime, 0);
		INSERT INTO CmnControlProperty VALUES (@ControlID, 'Grid Type', @GridType, @UTCTime, 0);
		INSERT INTO CmnControlProperty VALUES (@ControlID, 'Grid Access Type', @GridAcessType, @UTCTime, 0);
		INSERT INTO CmnControlProperty VALUES (@ControlID, 'Row Event', 'STP.rowClickEvent', @UTCTime, 0);

		INSERT INTO CmnColumnProperty SELECT CC.ColumnID, 'Summary', CM.Description, @UTCTime, 0
		FROM CmnControlColumns CC    
		JOIN ReportResultColumnConfig RCC ON RCC.ReportID = @IN_ReportID AND RCC.Grid = 1 AND RCC.ColumnName = CC.ColumnName AND RCC.AliasName = CC.DisplayName AND RCC.IsSummary = 1 
			AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
		JOIN CmnCodeMaster CM ON CM.Type = 'Summary Types' AND CM.CodemasterID = RCC.SummaryType AND CM.IsDeleted = 0
		WHERE CC.ControlID = @ControlID AND CC.IsDeleted = 0
		ORDER BY CC.ColumnOrder;

		INSERT INTO CmnGeneralProperty VALUES('Form', @FormID, 'Footer', 0, @UTCTime, 0);

		SET @Role = 'Admin'
		SET @HasReadPermission = 1
		SET @IsFavourite = 0
		SET @FavouriteOrder = '0'
		SET @SubAudit = 0
		SET @Audit = 1
		SET @ValidateChecksum = 1
		SET @RoleID = 0
		SET @TabList = ''
		SET @ButtonList = ''
		SET @SubMenuOrder = 0

		SET @RoleID = ISNULL((SELECT CodemasterID FROM CmnCodeMaster WHERE Type = 'Roles' AND TypeValues = @Role), 0);		
		SET @ButtonList = '';
		SET @TabList = ISNULL(SUBSTRING((SELECT ',' + CAST(TabID AS VARCHAR(MAX)) FROM CmnFormTabs WHERE FormID = @FormID
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
		SET @ButtonList = ISNULL(SUBSTRING((SELECT ',' + CAST(CodemasterID AS VARCHAR(MAX)) FROM CmnCodeMaster WHERE MenuID = @FormID AND Type = 'Menubutton' AND IsDeleted = 0 AND NotActive = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
		SELECT @MainMenuOrder = MainMenuOrder, @SubMenuOrder = SubMenuOrder FROM CmnFormDetails WHERE FormID = @FormID;

		IF ISNULL(@ExistingFormID, 0) <> 0 AND ISNULL(@ExistingCount, 0) > 0 
		BEGIN			
			INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.RoleID, ISNULL(SUBSTRING((SELECT ',' + CAST(FT.TabID AS VARCHAR(50)) FROM CmnFormTabs FT WHERE FT.FormID = @FormID AND PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + CAST(E.Tabs AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 				
					ISNULL(SUBSTRING((SELECT ',' + CAST(CM.CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster CM WHERE MenuID = @FormID AND CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + CAST(E.Buttons AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					E.MainMenuOrder, E.SubMenuOrder, @FormID, E.HasReadPermission, E.IsFavourite, E.FavouriteOrder, 0, E.Audit, E.ValidateChecksum, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
			FROM #tempRoleList E;
			
			INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.UserID, ISNULL(SUBSTRING((SELECT ',' + CAST(FT.TabID AS VARCHAR(50)) FROM CmnFormTabs FT WHERE FT.FormID = @FormID AND PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + CAST(TU.Tabs AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 				
					ISNULL(SUBSTRING((SELECT ',' + CAST(CM.CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster CM WHERE MenuID = @FormID AND CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + CAST(TU.Buttons AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					TU.MainMenuOrder, TU.SubMenuOrder, @FormID, TU.HasReadPermission, TU.IsFavourite, TU.FavouriteOrder, 0, TU.Audit, TU.ValidateChecksum, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
			FROM CmnUserDetails E 
				JOIN #tempUserList TU ON TU.UserID = E.UserID
			WHERE E.IsDeleted = 0;
		END
		ELSE
		BEGIN
			INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
			, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT @RoleID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
			@FormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
			, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0;

			INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
			, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.UserID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
			@FormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
			, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
			FROM CmnUserDetails E WHERE PATINDEX(CONCAT('%,', CAST(E.RoleID AS VARCHAR(50)), ',%'), CONCAT(',', CAST(@RoleID AS VARCHAR(50)), ',')) > 0;
		END

		IF OBJECT_ID('tempdb..#tempUserList') IS NOT NULL
			DROP TABLE #tempUserList

		IF OBJECT_ID('tempdb..#tempRoleList') IS NOT NULL
			DROP TABLE #tempRoleList
		
		UPDATE MB SET ButtonType = 6,
			ModifiedBy = @IN_UserID, 
			ModifiedDate = @UTCTime,
			ModifiedDateGMT = @GMTTime
		FROM CmnCodeMaster MB 
		WHERE MB.Type = 'Menubutton' AND ISNULL(MB.ButtonType, 0) = 0 AND ModuleID = @ModuleID AND MenuID = @FormID
			AND ISNULL(MB.IsDeleted, 0) = 0 AND ISNULL(MB.NotActive, 0) = 0 AND ISNULL(MB.IsCurrentVersion, 0) = 1;

		UPDATE ReportConfiguration SET Status = 4, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_ReportID;    

		SELECT @ModuleMenuCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND IsDeleted = 0;		
		SELECT @FormID, @ModuleMenuCount;

		COMMIT TRANSACTION tran_ReportPublish

	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ReportPublish
		
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END;
GO
PRINT N'Creating [dbo].[spReportRemovePivotColumn]'
GO

CREATE PROCEDURE [dbo].[spReportRemovePivotColumn] (@IN_FormID BIGINT, @IN_UserID INT, @IN_ColumnName VARCHAR(255), @IN_ColumnType VARCHAR(50))
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_RemovePivotColumn

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@ReportID BIGINT = 0,
							@DashboradID BIGINT = 0,
							@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0)

			IF @FormType = 6
				SELECT @DashboradID = ReferenceID FROM DashboardConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			ELSE
				SELECT @ReportID = ReferenceID FROM ReportConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			IF @IN_ColumnType = 'Filter' 
			BEGIN
				UPDATE ReportPivotSearchColumnConfig
				SET IsDeleted = 1,
					DeletedBy = @IN_UserID,
					DeletedDate = @UTCTime,
					DeletedDateGMT = @UTCTime
				WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ColumnName = @IN_ColumnName 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			END
			ELSE
			BEGIN
				UPDATE ReportPivotResultColumnConfig
				SET IsDeleted = 1,
					DeletedBy = @IN_UserID,
					DeletedDate = @UTCTime,
					DeletedDateGMT = @UTCTime
				WHERE ReportID = @ReportID AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ColumnName = @IN_ColumnName 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			END;

		COMMIT TRANSACTION tran_RemovePivotColumn
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_RemovePivotColumn

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportSaveConfiguration]'
GO

CREATE PROCEDURE [dbo].[spReportSaveConfiguration] (
	@IN_ReportID BIGINT,
	@IN_ReportType INT,
	@IN_ReportDataSource VARCHAR(255),
	@IN_IndividualChartIDs VARCHAR(MAX),
	@IN_FormID INT,
	@IN_UserID INT,
	@IN_IPAddress VARCHAR(200))
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_SaveConfiguration

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@CompanyID INT = 0,
					@ReportID BIGINT = 0,
					@DashboardID BIGINT = 0,
					@ReportDataSourceID BIGINT = 0

			IF @IN_ReportType = 2
			BEGIN
				SET @DashboardID = @IN_ReportID;
				SET @CompanyID = ISNULL((SELECT CompanyID FROM DashboardConfiguration WHERE ReferenceID = @DashboardID), 1);

				IF ISNULL(@IN_IndividualChartIDs, '') = ''
					SET @IN_IndividualChartIDs = '0';

				--IF ISNULL(@IN_ReportDataSource, '') <> ''
				--BEGIN
					SELECT @ReportDataSourceID = ReferenceID
					FROM DashboardReportDataSource
					WHERE DashboardID = @DashboardID AND ISNULL(IndividualChartIDs, '') = ISNULL(@IN_IndividualChartIDs, '')
						AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

					IF ISNULL(@ReportDataSourceID, 0) = 0
					BEGIN
						INSERT INTO DashboardReportDataSource (DashboardID, ReportDataSource, IndividualChartIDs, CompanyID, OrderBy, Version,
							IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
						VALUES (@DashboardID, @IN_ReportDataSource, @IN_IndividualChartIDs, @CompanyID,
							ISNULL((SELECT COUNT(1) FROM DashboardReportDataSource WHERE DashboardID = @DashboardID), 0) + 1,
							1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime);

						SET @ReportDataSourceID = IDENT_CURRENT('DashboardReportDataSource');
					END
					ELSE
					BEGIN
						UPDATE DashboardReportDataSource
						SET ReportDataSource = @IN_ReportDataSource,
							ModifiedBy = @IN_UserID,
							ModifiedDate = @UTCTime,
							ModifiedDateGMT = @UTCTime
						WHERE ReferenceID = @ReportDataSourceID;
					END
				--END
			END
			ELSE
			BEGIN
				SET @ReportID = @IN_ReportID;
				SET @CompanyID = ISNULL((SELECT CompanyID FROM ReportConfiguration WHERE ReferenceID = @ReportID), 1);
			END

			UPDATE MT
			SET MT.IsDeleted = 1,
				MT.DeletedBy = @IN_UserID,
				MT.DeletedDate = @UTCTime,
				MT.DeletedDateGMT = @UTCTime
			FROM ReportResultColumnConfig MT
				LEFT JOIN ReportResultColumnProcess PT ON PT.ReportID = MT.ReportID  AND PT.DashboardID = MT.DashboardID 
					AND PT.ReportType = MT.ReportType AND PT.UserID = @IN_UserID AND PT.ColumnName = MT.ColumnName
			WHERE MT.ReportID = @ReportID AND MT.DashboardID = @DashboardID AND MT.ReportType = @IN_ReportType
				AND ISNULL(MT.ReportDataSourceID, 0) = @ReportDataSourceID AND PT.ColumnName IS NULL
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			UPDATE MT
			SET MT.AliasName = PT.AliasName,
				MT.Grid = PT.Grid,
				MT.Excel = PT.Excel,
				MT.Pdf = PT.Pdf,
				MT.IsMobile = PT.IsMobile,
				MT.ColumnOrder = PT.ColumnOrder,
				MT.ResultOrder = PT.ResultOrder,
				MT.OrderType = PT.OrderType,
				MT.DataType = PT.DataType,
				MT.IsSummary = PT.IsSummary,
				MT.SummaryType = PT.SummaryType,
				MT.DecimalLength = PT.DecimalLength,
				MT.ModifiedBy = @IN_UserID,
				MT.ModifiedDate = @UTCTime,
				MT.ModifiedDateGMT = @UTCTime,
			        MT.ColumnWidth = PT.ColumnWidth
			FROM ReportResultColumnConfig MT
				JOIN ReportResultColumnProcess PT ON PT.ReportID = MT.ReportID AND PT.DashboardID = MT.DashboardID
					AND PT.ReportType = MT.ReportType AND PT.ColumnName = MT.ColumnName
			WHERE MT.ReportID = @ReportID AND MT.DashboardID = @DashboardID AND MT.ReportType = @IN_ReportType
				AND ISNULL(MT.ReportDataSourceID, 0) = @ReportDataSourceID AND PT.UserID = @IN_UserID
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			INSERT INTO ReportResultColumnConfig (ReportID, DashboardID, ReportType, ReportDataSourceID, ColumnName, AliasName, Grid, Excel, Pdf, IsMobile, ColumnOrder,
				ResultOrder, OrderType, DataType, IsSummary, SummaryType, DecimalLength, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, ColumnWidth)
			SELECT PT.ReportID, @DashboardID, PT.ReportType, @ReportDataSourceID, PT.ColumnName, PT.AliasName, PT.Grid, PT.Excel, PT.Pdf, PT.IsMobile, PT.ColumnOrder,
				PT.ResultOrder, PT.OrderType, PT.DataType, PT.IsSummary, PT.SummaryType, PT.DecimalLength, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.ColumnWidth
			FROM ReportResultColumnProcess PT
				LEFT JOIN ReportResultColumnConfig MT ON PT.ReportID = MT.ReportID AND PT.DashboardID = MT.DashboardID
					AND PT.ReportType = MT.ReportType AND ISNULL(MT.ReportDataSourceID, 0) = @ReportDataSourceID AND PT.ColumnName = MT.ColumnName
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
			WHERE PT.ReportID = @ReportID AND PT.DashboardID = @DashboardID AND PT.ReportType = @IN_ReportType 
				AND PT.UserID = @IN_UserID AND MT.ColumnName IS NULL;

			UPDATE MT
			SET MT.IsDeleted = 1,
				MT.DeletedBy = @IN_UserID,
				MT.DeletedDate = @UTCTime,
				MT.DeletedDateGMT = @UTCTime
			FROM ReportSearchColumnConfig MT
				LEFT JOIN ReportSearchColumnProcess PT ON PT.ReportID = MT.ReportID AND PT.UserID = @IN_UserID AND PT.ColumnName = MT.ColumnName
			WHERE MT.ReportID = @IN_ReportID AND PT.ColumnName IS NULL
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			UPDATE MT
			SET MT.AliasName = PT.AliasName,
				MT.Search = 1,
				MT.SearchOrder = PT.SearchOrder,
				MT.ControlType = PT.ControlType,
				MT.FkType = PT.FkType,
				MT.FkTable = PT.FkTable,
				MT.FkColumn = PT.FkColumn,
				MT.FkData = PT.FkData,
				MT.AdditionalConditions = PT.AdditionalConditions,
				MT.FkOrder = PT.FkOrder,
				MT.FkDelete = PT.FkDelete,
				MT.FkNotActive = PT.FkNotActive,
				MT.FkVersion = PT.FkVersion,
				MT.DataType = PT.DataType,
				MT.DefaultValue = PT.DefaultValue,
				MT.MaxRange = PT.MaxRange,
				MT.DependentFlag = PT.DependentFlag,
				MT.Event = PT.Event,
				MT.ValidationEvent = PT.ValidationEvent,
				MT.ModifiedBy = @IN_UserID,
				MT.ModifiedDate = @UTCTime,
				MT.ModifiedDateGMT = @UTCTime
			FROM ReportSearchColumnConfig MT
				JOIN ReportSearchColumnProcess PT ON PT.ReportID = MT.ReportID AND PT.ColumnName = MT.ColumnName
			WHERE MT.ReportID = @IN_ReportID AND PT.UserID = @IN_UserID
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			INSERT INTO ReportSearchColumnConfig (ReportID, ColumnName, AliasName, Search, SearchOrder, ControlType, 
				FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, DataType, DefaultValue,
				MaxRange, DependentFlag, Event, ValidationEvent, CompanyID, OrderBy, 
				Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT PT.ReportID, PT.ColumnName, PT.AliasName, 1, PT.SearchOrder, PT.ControlType, PT.FkType, PT.FkTable, 
				PT.FkColumn, PT.FkData, PT.AdditionalConditions, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, PT.DataType, PT.DefaultValue,
				PT.MaxRange, PT.DependentFlag, PT.Event, PT.ValidationEvent, @CompanyID, PT.SearchOrder, 
				1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM ReportSearchColumnProcess PT
				LEFT JOIN ReportSearchColumnConfig MT ON PT.ReportID = MT.ReportID AND PT.ColumnName = MT.ColumnName
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
			WHERE PT.ReportID = @IN_ReportID AND PT.UserID = @IN_UserID AND MT.ColumnName IS NULL;
 
			IF @IN_ReportType = 2
				UPDATE DashboardConfiguration SET Status = 3, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @DashboardID;  
			ELSE
				UPDATE ReportConfiguration SET Status = 3, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @ReportID;  

			SELECT 'Saved successfully';

		COMMIT TRANSACTION tran_SaveConfiguration
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_SaveConfiguration

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spReportValidate]'
GO

CREATE PROCEDURE [dbo].[spReportValidate](
	@IN_Event VARCHAR(10), 
	@IN_ReportID INT,
	@IN_Query NVARCHAR(MAX), 
	@IN_FormID INT, 
	@IN_UserID INT
)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@RQuery NVARCHAR(MAX) = '',
			@Query NVARCHAR(MAX) = '',
			@SourceID INT = 0,
			@StoredProcedure VARCHAR(100) = '',
			@ViewName VARCHAR(100) = '',
			@TableName VARCHAR(100) = '',
			@checkQuery NVARCHAR(MAX) = '',
			@DBConnection INT = 0
			        
		IF @IN_Event = 'Update'
		BEGIN
			UPDATE ReportConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_ReportID;
		END
		ELSE
		BEGIN
			SET @RQuery = '';
      
			IF @IN_Query <> ''
				SET @RQuery = @IN_Query;
			ELSE
			BEGIN
				SELECT @SourceID = Source, @StoredProcedure = SpName, @ViewName = ViewName, @TableName = TableName, @Query = Query, @DBConnection = ISNULL(DBConnection, 0)
				FROM ReportConfiguration WHERE ReferenceID = @IN_ReportID;
  
				IF @SourceID = 1
				  SET @RQuery = 'EXEC '+ @StoredProcedure + ' 1, ''''';
				ELSE IF @SourceID = 2
				  SET @RQuery = 'SELECT * FROM '+ @ViewName;
				ELSE IF @SourceID = 3
				  SET @RQuery = 'SELECT * FROM '+ @TableName;
				ELSE IF @SourceID = 4
				  SET @RQuery = @Query;	
				  
				IF CHARINDEX(' insert ', LOWER(@Query)) > 0 OR CHARINDEX(' update', LOWER(@Query)) > 0 OR CHARINDEX(' delete ', LOWER(@Query)) > 0 OR CHARINDEX(' drop ', LOWER(@Query)) > 0 OR 
					  CHARINDEX(' truncate ', LOWER(@Query)) > 0 OR CHARINDEX(' alter ', LOWER(@Query)) > 0
				BEGIN
					  SET @checkQuery = 'DML';
				END		
			END

			SELECT @checkQuery;

			SELECT @RQuery AS Query, @DBConnection AS DBConnection;
			
		END
		  
	END TRY
	BEGIN CATCH

		--EXEC [Fn_ErrorFetch] @@SPID

		--INSERT INTO tbl_StoredProcedure_Error(MenuID, App_User, SQL_User, Server_Name, [Procedure_Name],
		--	Error_Code, Line_Number, [Error_Message], [Error_State], Logged_Date, [INPUT_PARAMS]) 
		--SELECT @IN_FormID, @IN_UserID, USER_NAME(), @@SERVERNAME, ERROR_PROCEDURE(), ERROR_NUMBER(),
		--	ERROR_LINE(), ERROR_MESSAGE(), ERROR_STATE(), GETUTCDATE(), (SELECT PIN FROM TBL_ERRORFETCH);

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END;
GO
PRINT N'Creating [dbo].[spSavePivotColumnName]'
GO

CREATE PROCEDURE [dbo].[spSavePivotColumnName] (@IN_ColumnName VARCHAR(255), @IN_DisplayName VARCHAR(255), @IN_Type VARCHAR(25), @IN_FormID BIGINT, @IN_UserID INT)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
						@ErrorMessage NVARCHAR(2000) = '',
						@ErrorState NVARCHAR(50) = '',
						@CompanyID INT = 0,
						@ReportID INT = 0,
						@DashboradID BIGINT = 0,
						@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0)

			IF @FormType = 6
				SELECT @DashboradID = ReferenceID FROM DashboardConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			ELSE
				SELECT @ReportID = ReferenceID FROM ReportConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			IF @IN_Type = 'Filters'
			BEGIN
				UPDATE ReportPivotSearchColumnConfig SET AliasName = @IN_DisplayName WHERE ColumnName = @IN_ColumnName AND ReportID = @ReportID 
					AND DashboardID = @DashboradID AND UserID = @IN_UserID AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
			ELSE IF @IN_Type = 'Columns'
			BEGIN
				UPDATE ReportPivotResultColumnConfig SET AliasName = @IN_DisplayName WHERE ColumnName = @IN_ColumnName AND ReportID = @ReportID 
					AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ISNULL(IsSummary, 0) = 0 AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
			ELSE IF @IN_Type = 'Summary'
			BEGIN
				UPDATE ReportPivotResultColumnConfig SET AliasName = @IN_DisplayName WHERE ColumnName = @IN_ColumnName AND ReportID = @ReportID 
					AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ISNULL(IsSummary, 0) = 1 AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
		
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spSavePivotColumnOrder]'
GO

CREATE PROCEDURE [dbo].[spSavePivotColumnOrder] (@IN_ColumnName VARCHAR(255), @IN_ColumnOrder INT, @IN_Type VARCHAR(10), @IN_FormID BIGINT, @IN_UserID INT)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
						@ErrorMessage NVARCHAR(2000) = '',
						@ErrorState NVARCHAR(50) = '',
						@CompanyID INT = 0,
						@ReportID INT = 0,
						@DashboradID BIGINT = 0,
						@FormType INT = ISNULL((SELECT FormType FROM CmnFormDetails WHERE FormID = @IN_FormID), 0)

			IF @FormType = 6
				SELECT @DashboradID = ReferenceID FROM DashboardConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			ELSE
				SELECT @ReportID = ReferenceID FROM ReportConfiguration WHERE FormID = @IN_FormID AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			IF @IN_Type = 'Filters'
			BEGIN
				UPDATE ReportPivotSearchColumnConfig SET SearchOrder = @IN_ColumnOrder WHERE ColumnName = @IN_ColumnName AND ReportID = @ReportID 
					AND DashboardID = @DashboradID AND UserID = @IN_UserID AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
			ELSE IF @IN_Type = 'Columns'
			BEGIN
				UPDATE ReportPivotResultColumnConfig SET ColumnOrder = @IN_ColumnOrder WHERE ColumnName = @IN_ColumnName AND ReportID = @ReportID 
					AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ISNULL(IsSummary, 0) = 0 AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
			ELSE IF @IN_Type = 'Summary'
			BEGIN
				UPDATE ReportPivotResultColumnConfig SET ColumnOrder = @IN_ColumnOrder WHERE ColumnName = @IN_ColumnName AND ReportID = @ReportID 
					AND DashboardID = @DashboradID AND UserID = @IN_UserID AND ISNULL(IsSummary, 0) = 1 AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
		
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spChartClearConfigurationProcess]'
GO

CREATE PROCEDURE [dbo].[spChartClearConfigurationProcess] (@IN_DashboardID BIGINT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_ClearConfigurationProcess

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50)

			DELETE FROM ChartColumnProcess WHERE DashboardID = @IN_DashboardID AND UserID = @IN_UserID;

			DELETE FROM ChartSearchColumnProcess WHERE DashboardID = @IN_DashboardID AND UserID = @IN_UserID;

		COMMIT TRANSACTION tran_ClearConfigurationProcess
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ClearConfigurationProcess

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spChartColumnList]'
GO

CREATE PROCEDURE [dbo].[spChartColumnList] (@IN_DashboardID INT, @IN_DataSource VARCHAR(255), @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@SourceID INT = 0,
				@StoredProcedure VARCHAR(225) = '',
				@ViewName VARCHAR(225) = '',
				@TableName VARCHAR(225) = '',
				@Query NVARCHAR(MAX) = '',
				@RQuery NVARCHAR(MAX) = '',
				@DBConnection INT = 0,
				@ObjectName NVARCHAR(MAX) = '',
				@IsMultiSource BIT = 0,
				@DashboardSources VARCHAR(MAX) = '',
				@AllDataSources VARCHAR(MAX) = '',
				@IntersectColumnQuery VARCHAR(MAX) = ''

		SELECT @SourceID = Source, @StoredProcedure = SpName, @ViewName = ViewName, @TableName = TableName, @Query = Query,
			@DBConnection = ISNULL(DBConnection, 0), @IsMultiSource = ISNULL(IsMultiSource, 0), @DashboardSources = ISNULL(DashboardSources, '')
		FROM DashboardConfiguration WHERE ReferenceID = @IN_DashboardID;

		IF @SourceID = 1 
		BEGIN
			SET @ObjectName = @StoredProcedure;
		END
		ELSE IF @SourceID = 2 
		BEGIN
			SET @ObjectName = @ViewName;
		END
		ELSE IF @SourceID = 3 
		BEGIN
			SET @ObjectName = @TableName;
		END
		ELSE IF @SourceID = 4 
		BEGIN
			SET @ObjectName = @Query;
		END

		IF @IsMultiSource = 1
		BEGIN
			SET @AllDataSources = CASE WHEN @SourceID IN (2, 3) THEN @ObjectName ELSE '' END + ',' + @DashboardSources;
		END

		IF ISNULL(@IN_DataSource, '') <> ''
		BEGIN
			SET @SourceID = 2;
			SET @ObjectName = @IN_DataSource;
		END

		SELECT @SourceID AS SourceID, @ObjectName AS ObjectName, @DBConnection AS DBConnection,
			@IsMultiSource AS IsMultiSource, CASE WHEN @IsMultiSource = 1 THEN @DashboardSources ELSE '' END AS DashboardSources;
  
		SELECT CodemasterID AS Value, Description AS Text FROM CmnCodeMaster 
		WHERE Type = 'Chart Type' AND IsDeleted = 0 AND NotActive = 0;
  
		SELECT CCC.ColumnName AS ColumnName, CCC.AliasName AS AliasName, ISNULL(CCC.Grid, 0) AS IsGrid, ISNULL(CCC.Excel, 0) AS IsExcel,
			ISNULL(CCC.Pdf, 0) AS IsPdf, ISNULL(CCC.ResultOrder, 0) AS ResultOrder, ISNULL(CCC.OrderType, 0) AS OrderType, ISNULL(CCC.ColumnOrder, 0) AS ColumnOrder,
			ISNULL(CCC.ChartType, 1) AS ChartType, ISNULL(CCC.XAxis, '') AS XAxis, ISNULL(CCC.YAxis, '') AS YAxis, ISNULL(CCC.FkType, 0) AS FkType, ISNULL(CCC.FkTable, '') AS FkTable,
			ISNULL(CCC.FkColumn, 0) AS FkColumn, ISNULL(CCC.FkData, '') AS FkData, ISNULL(CCC.JoinFkType, 0) AS JoinFkType, ISNULL(CCC.JoinFkTable, '') AS JoinFkTable, 
			ISNULL(CCC.JoinFkColumn, 0) AS JoinFkColumn, ISNULL(CCC.JoinFkData, '') AS JoinFkData, ISNULL(CCC.FkOrder, 0) AS FkOrder, ISNULL(CCC.FkDelete, 0) AS FkDelete,
			ISNULL(CCC.FkNotActive, 0) AS FkNotActive, ISNULL(CCC.FkVersion, 0) AS FkVersion, ISNULL(CCC.IsMainTable, 0) AS MainTable, 
			ISNULL(CCC.IsStackedBar, 0) AS StackedBar, ISNULL(CCC.AllBarReq, 0) AS AllBarReq, ISNULL(CCC.IsWidget, 0) AS IsWidget,
			ISNULL(CCC.ParentControl, '') AS ParentControl, CCC.AdditionalConditions AS AdditionalConditions, ISNULL(CCC.ReferenceID, 0) AS ReferenceID, 
			ISNULL(CCC.ParentControlID, 0) AS ParentControlID, COALESCE(CCC.ResultColumn, CCC.ColumnName, '') AS ResultColumn,
			ISNULL(CCC.OrderColumn, '') AS OrderColumn, ISNULL(CCC.RangeEndColumn, '') AS RangeEndColumn, ISNULL(CCC.IndividualChart, 0) AS IndividualChart,
			ISNULL(CCC.ChartSourceID, 0) AS ChartSourceID, ISNULL(CCC.ChartObjectName, '') AS ChartObjectName, ISNULL(CCC.BarLimitCount, 0) AS BarLimitCount, 
			ISNULL(CCC.ResultRoundOf, 0) AS ResultRoundOf, ISNULL(CCC.BarColour, '') AS BarColour, ISNULL(CCC.StartPoint, 0) AS StartPoint, 
			ISNULL(CCC.CustomPointValue, '') AS CustomPointValue, ISNULL(CCC.IsMyDashboard, 0) AS IsMyDashboard, ISNULL(CCC.CategoryDisplay, 0) AS CategoryDisplay
		FROM ChartColumnConfig CCC
		WHERE CCC.DashboardID = @IN_DashboardID
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		SELECT SCC.ColumnName AS ColumnName, SCC.AliasName AS AliasName, ISNULL(SCC.ControlType, 0) AS ControlType, ISNULL(SCC.FkType, 0) AS FkType,
			ISNULL(SCC.FkTable, '') AS FkTable, ISNULL(SCC.FkColumn, '') AS FkColumn, ISNULL(SCC.FkData, '') AS FkData, ISNULL(SCC.AdditionalConditions, '') AS AdditionalConditions,
			ISNULL(SCC.FkOrder, 0) AS FkOrder, ISNULL(SCC.FkDelete, 0) AS FkDelete, ISNULL(SCC.FkNotActive, 0) AS FkNotActive, ISNULL(SCC.FkVersion, 0) AS FkVersion,
			ISNULL(SCC.SearchOrder, 0) AS SearchOrder, ISNULL(SCC.DataType, 0) AS DataType, ISNULL(SCC.DefaultValue, '') AS DefaultValue, ISNULL(SCC.MaxRange, '') AS MaxRange, ISNULL(SCC.DependentFlag, 0) AS DependentFlag,
			ISNULL(SCC.Event, '') AS Event, ISNULL(SCC.IsMobile, 0) AS IsMobile
		FROM ChartSearchColumnConfig SCC
		WHERE SCC.DashboardID = @IN_DashboardID AND SCC.Search = 1
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

		IF ISNULL(@AllDataSources, '') <> ''
		BEGIN
			SELECT @IntersectColumnQuery = ISNULL(SUBSTRING(((SELECT 'INTERSECT SELECT COLUMN_NAME AS ColumnName FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''' + TABLE_NAME + '''
					'
				FROM INFORMATION_SCHEMA.TABLES
				WHERE TABLE_NAME IN (SELECT RTRIM(LTRIM(ISNULL(items, ''))) FROM fn_RevolSpliter(@AllDataSources, ',') WHERE RTRIM(LTRIM(ISNULL(items, ''))) <> '')
				FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','nvarchar(max)')), 10, 9000000000), '');

			IF ISNULL(@IntersectColumnQuery, '') <> ''
				EXEC (@IntersectColumnQuery);
			ELSE
				SELECT '' AS ColumnName FROM DashboardConfiguration WHERE ReferenceID = @IN_DashboardID AND 1 = 2;
		END
		ELSE
			SELECT '' AS ColumnName FROM DashboardConfiguration WHERE ReferenceID = @IN_DashboardID AND 1 = 2;

	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spChartColumnProcessEntry]'
GO

CREATE PROCEDURE [dbo].[spChartColumnProcessEntry] (@IN_DashboardID BIGINT, @IN_UserID INT, @IN_ReferenceID BIGINT, @IN_ColumnName VARCHAR(255),
  @IN_AliasName NVARCHAR(500), @IN_ChartType INT, @IN_FkType INT, @IN_FkTable VARCHAR(255), @IN_FkColumn VARCHAR(255), @IN_FkData VARCHAR(255), @IN_JoinFkType INT, 
  @IN_JoinFkTable VARCHAR(255), @IN_JoinFkColumn VARCHAR(255), @IN_XAxis VARCHAR(255), @IN_Yaxis INT, @IN_Grid BIT, @IN_Excel BIT, @IN_Pdf BIT, @IN_ColumnOrder INT, @IN_ResultOrder INT, 
  @IN_OrderType INT, @IN_FkOrder INT, @IN_FkDelete BIT, @IN_FkNotActive BIT, @IN_FkVersion BIT, @IN_StackedBar BIT, @IN_ParentControl VARCHAR(255),
  @IN_ParentControlID BIGINT, @IN_AdditionalConditions VARCHAR(255), @IN_IsMainTable BIT, @IN_AllBarReq BIT, 
  @IN_ResultColumn VARCHAR(255), @IN_IsWidget BIT, @IN_OrderColumn VARCHAR(255), @IN_RangeEndColumn VARCHAR(255), @IN_IndividualChart BIT,
  @IN_ChartSourceID INT, @IN_ChartObjectName VARCHAR(255), @IN_BarLimitCount INT, @IN_BarColour NVARCHAR(MAX), @IN_ResultRoundOf INT, @IN_StartPoint INT, @IN_CustomPointValue VARCHAR(100), @IN_IsMyDashboard BIT, @IN_CategoryDisplay BIT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_DashboardColumnProcessEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50)

			INSERT INTO ChartColumnProcess (ReferenceID, DashboardID, UserID, ColumnName, AliasName, ChartType, FkType, FkTable, FkColumn, FkData, JoinFkType, 
				JoinFkTable, JoinFkColumn, FkOrder, FkDelete, FkNotActive, FkVersion, XAxis, YAxis, Grid, Excel, Pdf, ColumnOrder, ResultOrder, 
				OrderType, IsStackedBar, ParentControl, ParentControlID, AdditionalConditions, IsMainTable, AllBarReq, ResultColumn,
				IsWidget, OrderColumn, RangeEndColumn, IndividualChart, ChartSourceID, ChartObjectName, BarLimitCount, ResultRoundOf, BarColour, StartPoint, CustomPointValue, IsMyDashboard, CategoryDisplay)
			VALUES (@IN_ReferenceID, @IN_DashboardID, @IN_UserID, @IN_ColumnName, @IN_AliasName, @IN_ChartType, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_JoinFkType, @IN_JoinFkTable, @IN_JoinFkColumn, 
				@IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_XAxis, @IN_Yaxis, @IN_Grid, @IN_Excel, @IN_Pdf, @IN_ColumnOrder, @IN_ResultOrder, @IN_OrderType, 
				@IN_StackedBar, CASE WHEN @IN_ParentControl <> '' AND CHARINDEX('-', @IN_ParentControl) > 0 THEN SUBSTRING(@IN_ParentControl, 1, CHARINDEX('-', @IN_ParentControl) - 1) ELSE @IN_ParentControl END,
				@IN_ParentControlID, @IN_AdditionalConditions, @IN_IsMainTable, @IN_AllBarReq, 
				@IN_ResultColumn, @IN_IsWidget, @IN_OrderColumn, @IN_RangeEndColumn, @IN_IndividualChart, @IN_ChartSourceID, @IN_ChartObjectName, @IN_BarLimitCount, @IN_ResultRoundOf,
				@IN_BarColour, @IN_StartPoint, @IN_CustomPointValue, @IN_IsMyDashboard, @IN_CategoryDisplay);

		COMMIT TRANSACTION tran_DashboardColumnProcessEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_DashboardColumnProcessEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spChartFilterProcessEntry]'
GO

CREATE PROCEDURE [dbo].[spChartFilterProcessEntry] (@IN_DashboardID BIGINT, @IN_UserID INT, @IN_ColumnName VARCHAR(255),
  @IN_AliasName NVARCHAR(500), @IN_SearchOrder INT, @IN_ControlType INT, @IN_FkType INT, @IN_FkTable VARCHAR(255), 
  @IN_FkColumn VARCHAR(255), @IN_FkData VARCHAR(255), @IN_AdditionalConditions NVARCHAR(1000), @IN_FkOrder INT, @IN_FkDelete BIT, 
  @IN_FkNotActive BIT, @IN_FkVersion BIT, @IN_DataType INT, @IN_DefaultValue NVARCHAR(1000), @IN_MaxRange NVARCHAR(1000), 
  @IN_DependentFlag BIT, @IN_Event VARCHAR(1000), @IN_ValidationEvent VARCHAR(1000), @IN_IsMobile BIT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_DashboardFilterProcessEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50)

			INSERT INTO ChartSearchColumnProcess (DashboardID, UserID, ColumnName, AliasName, Search, SearchOrder, ControlType, 
				FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, DataType,
				DefaultValue, MaxRange, DependentFlag, Event, ValidationEvent, IsMobile)
			VALUES (@IN_DashboardID, @IN_UserID, @IN_ColumnName, @IN_AliasName, 1, @IN_SearchOrder, @IN_ControlType, 
				@IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_AdditionalConditions, @IN_FkOrder, @IN_FkDelete, 
				@IN_FkNotActive, @IN_FkVersion, @IN_DataType, @IN_DefaultValue, @IN_MaxRange, @IN_DependentFlag, @IN_Event, @IN_ValidationEvent, @IN_IsMobile);

		COMMIT TRANSACTION tran_DashboardFilterProcessEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_DashboardFilterProcessEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spChartSaveConfiguration]'
GO

CREATE PROCEDURE [dbo].[spChartSaveConfiguration] (@IN_DashboardID BIGINT, @IN_UserID INT, @IN_IPAddress VARCHAR(200))
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_ChartConfigurationEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@CompanyID INT,
					@CartCount INT = 0,
					@Message VARCHAR(100)
			
			SET @CompanyID = ISNULL((SELECT CompanyID FROM DashboardConfiguration WHERE ReferenceID = @IN_DashboardID), 0);

			UPDATE MT
			SET MT.IsDeleted = 1,
				MT.DeletedBy = @IN_UserID,
				MT.DeletedDate = @UTCTime,
				MT.DeletedDateGMT = @UTCTime
			FROM ChartColumnConfig MT
				LEFT JOIN ChartColumnProcess PT ON PT.DashboardID = MT.DashboardID AND PT.UserID = @IN_UserID AND PT.ColumnName = MT.ColumnName 
					AND ISNULL(PT.ParentControlID, 0) = ISNULL(MT.ParentControlID, 0) AND PT.ReferenceID = MT.ReferenceID
			WHERE MT.DashboardID = @IN_DashboardID AND PT.ColumnName IS NULL
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			UPDATE MT
			SET MT.AliasName = PT.AliasName,
				MT.ChartType = PT.ChartType,
				MT.FkType = PT.FkType,
				MT.FkTable = PT.FkTable,
				MT.FkColumn = PT.FkColumn,
				MT.FkData = PT.FkData,
				MT.JoinFkType = PT.JoinFkType,
				MT.JoinFkTable = PT.JoinFkTable,
				MT.JoinFkColumn = PT.JoinFkColumn,
				MT.XAxis = PT.XAxis,
				MT.YAxis = PT.YAxis,
				MT.Grid = PT.Grid,
				MT.Excel = PT.Excel,
				MT.Pdf = PT.Pdf,
				MT.ColumnOrder = PT.ColumnOrder,
				MT.ResultOrder = PT.ResultOrder,
				MT.OrderType = PT.OrderType,
				MT.ParentControl = PT.ParentControl, 
				MT.IsMainTable = PT.IsMainTable,
				MT.IsStackedBar = PT.IsStackedBar,
				MT.AllBarReq = PT.AllBarReq,
				MT.IsWidget = PT.IsWidget,
				MT.ResultColumn = PT.ResultColumn,
				MT.RangeEndColumn = PT.RangeEndColumn,
				MT.OrderColumn = PT.OrderColumn,
				MT.AdditionalConditions = PT.AdditionalConditions,
				MT.FkOrder = PT.FkOrder,
				MT.FkDelete = PT.FkDelete,
				MT.FkNotActive = PT.FkNotActive,
				MT.FkVersion = PT.FkVersion,
				MT.IndividualChart = PT.IndividualChart,
				MT.ChartSourceID = PT.ChartSourceID,
				MT.ChartObjectName = PT.ChartObjectName,
				MT.BarLimitCount = PT.BarLimitCount,
				MT.ResultRoundOf = PT.ResultRoundOf,
				MT.BarColour = PT.BarColour,
				MT.StartPoint = PT.StartPoint,
				MT.CustomPointValue = PT.CustomPointValue,
				MT.IsMyDashboard = PT.IsMyDashboard,
				MT.CategoryDisplay = PT.CategoryDisplay,
				MT.ModifiedBy = @IN_UserID,
				MT.ModifiedDate = @UTCTime,
				MT.ModifiedDateGMT = @UTCTime
			FROM ChartColumnConfig MT
				JOIN ChartColumnProcess PT ON PT.DashboardID = MT.DashboardID AND PT.ColumnName = MT.ColumnName 
					AND ISNULL(PT.ParentControlID, 0) = ISNULL(MT.ParentControlID, 0) AND PT.ReferenceID = MT.ReferenceID
			WHERE MT.DashboardID = @IN_DashboardID AND PT.UserID = @IN_UserID
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			INSERT INTO ChartColumnConfig (DashboardID, ColumnName, AliasName, ChartType, FkType, FkTable, FkColumn, FkData, JoinFkType, JoinFkTable, JoinFkColumn, 
				XAxis, YAxis,Grid, Excel, Pdf, ColumnOrder, ResultOrder, OrderType, FkOrder, FkDelete, FkNotActive, FkVersion, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
				ParentControl, ParentControlID, IsMainTable, IsStackedBar, AllBarReq, IsWidget, ResultColumn, RangeEndColumn, OrderColumn,
				AdditionalConditions, IndividualChart, ChartSourceID, ChartObjectName, BarLimitCount, ResultRoundOf, BarColour, StartPoint, CustomPointValue, IsMyDashboard, CategoryDisplay,
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT PT.DashboardID, PT.ColumnName, PT.AliasName, PT.ChartType, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.JoinFkType, PT.JoinFkTable, PT.JoinFkColumn, 
				PT.XAxis, PT.YAxis, PT.Grid, PT.Excel, PT.Pdf, PT.ColumnOrder, PT.ResultOrder, PT.OrderType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, 
				PT.ParentControl, PT.ParentControlID, PT.IsMainTable, PT.IsStackedBar, PT.AllBarReq, PT.IsWidget, PT.ResultColumn, PT.RangeEndColumn, PT.OrderColumn,
				PT.AdditionalConditions, PT.IndividualChart, PT.ChartSourceID, PT.ChartObjectName, PT.BarLimitCount, PT.ResultRoundOf, PT.BarColour, PT.StartPoint, PT.CustomPointValue, PT.IsMyDashboard, PT.CategoryDisplay,
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM ChartColumnProcess PT
				LEFT JOIN ChartColumnConfig MT ON PT.DashboardID = MT.DashboardID AND PT.ColumnName = MT.ColumnName 
					AND ISNULL(PT.ParentControlID, 0) = ISNULL(MT.ParentControlID, 0) AND PT.ReferenceID = MT.ReferenceID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
			WHERE PT.DashboardID = @IN_DashboardID AND PT.UserID = @IN_UserID AND MT.ColumnName IS NULL;

			UPDATE MT
			SET MT.IsDeleted = 1,
				MT.DeletedBy = @IN_UserID,
				MT.DeletedDate = @UTCTime,
				MT.DeletedDateGMT = @UTCTime
			FROM ChartSearchColumnConfig MT
				LEFT JOIN ChartSearchColumnProcess PT ON PT.DashboardID = MT.DashboardID AND PT.UserID = @IN_UserID AND PT.ColumnName = MT.ColumnName
			WHERE MT.DashboardID = @IN_DashboardID AND PT.ColumnName IS NULL
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			UPDATE MT
			SET MT.AliasName = PT.AliasName,
				MT.Search = 1,
				MT.SearchOrder = PT.SearchOrder,
				MT.ControlType = PT.ControlType,
				MT.FkType = PT.FkType,
				MT.FkTable = PT.FkTable,
				MT.FkColumn = PT.FkColumn,
				MT.FkData = PT.FkData,
				MT.AdditionalConditions = PT.AdditionalConditions,
				MT.FkOrder = PT.FkOrder,
				MT.FkDelete = PT.FkDelete,
				MT.FkNotActive = PT.FkNotActive,
				MT.FkVersion = PT.FkVersion,
				MT.DataType = PT.DataType,
				MT.DefaultValue = PT.DefaultValue,
				MT.MaxRange = PT.MaxRange,
				MT.DependentFlag = PT.DependentFlag,
				MT.Event = PT.Event,
				MT.ValidationEvent = PT.ValidationEvent,
				MT.IsMobile = PT.IsMobile,
				MT.ModifiedBy = @IN_UserID,
				MT.ModifiedDate = @UTCTime,
				MT.ModifiedDateGMT = @UTCTime
			FROM ChartSearchColumnConfig MT
				JOIN ChartSearchColumnProcess PT ON PT.DashboardID = MT.DashboardID AND PT.ColumnName = MT.ColumnName
			WHERE MT.DashboardID = @IN_DashboardID AND PT.UserID = @IN_UserID
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

			INSERT INTO ChartSearchColumnConfig (DashboardID, ColumnName, AliasName, Search, SearchOrder, ControlType, 
				FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, DataType, DefaultValue, 
				MaxRange, DependentFlag, Event, ValidationEvent, IsMobile, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT PT.DashboardID, PT.ColumnName, PT.AliasName, 1, PT.SearchOrder, PT.ControlType, PT.FkType, PT.FkTable, 
				PT.FkColumn, PT.FkData, PT.AdditionalConditions, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, PT.DataType,
				PT.DefaultValue, PT.MaxRange, PT.DependentFlag, PT.Event, PT.ValidationEvent, PT.IsMobile, @CompanyID, PT.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM ChartSearchColumnProcess PT
				LEFT JOIN ChartSearchColumnConfig MT ON PT.DashboardID = MT.DashboardID AND PT.ColumnName = MT.ColumnName
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
			WHERE PT.DashboardID = @IN_DashboardID AND PT.UserID = @IN_UserID AND MT.ColumnName IS NULL;

			SELECT @CartCount = COUNT(1) 
			FROM ChartColumnConfig
			WHERE DashboardID = @IN_DashboardID AND ISNULL(ParentControlID, 0) = 0
				AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

			UPDATE DashboardConfiguration SET Status = 3, LayoutType = CASE WHEN LayoutType > @CartCount AND @CartCount > 0 THEN @CartCount ELSE LayoutType END,
				ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime 
			WHERE ReferenceID = @IN_DashboardID;    

			SELECT 'Saved successfully';

		COMMIT TRANSACTION tran_ChartConfigurationEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ChartConfigurationEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spDashboardConfigUpdate]'
GO

CREATE PROCEDURE [dbo].[spDashboardConfigUpdate] (
	@IN_UserID INT,
	@IN_ReferenceID INT, 
	@IN_DMLEvent VARCHAR(50),
	@IN_PrevStatusID INT = 0
)
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@CurrentStatusID INT = 0;

	SELECT @CurrentStatusID = ISNULL(Status, 0)
	FROM DashboardConfiguration WHERE ReferenceID = @IN_ReferenceID;

	IF @IN_PrevStatusID = 4 AND @CurrentStatusID = @IN_PrevStatusID  -- Update the Status to Configured
	BEGIN
		UPDATE DashboardConfiguration
		SET Status = 3, -- Configured
			ModifiedBy = @IN_UserID,
			ModifiedDate = @UTCTime,
			ModifiedDateGMT = @GMTTime
		WHERE ReferenceID = @IN_ReferenceID AND Status IN (4);
	END

	-- Remove the previous main page form from main page if it exists
	--IF EXISTS (SELECT 1 FROM DashboardConfiguration WHERE ReferenceID = @IN_ReferenceID AND IsMainPage = 1 AND IsDeleted = 0)
	--BEGIN
	--	UPDATE DashboardConfiguration
	--	SET IsMainPage = 0, -- Remove from Main Page
	--		ModifiedBy = @IN_UserID,
	--		ModifiedDate = @UTCTime,
	--		ModifiedDateGMT = @GMTTime
	--	WHERE ReferenceID <> @IN_ReferenceID AND IsMainPage = 1;
	--END
END
GO
PRINT N'Creating [dbo].[spDashboardDependentData]'
GO
CREATE PROCEDURE [dbo].[spDashboardDependentData] (
	@IN_DashboardID BIGINT,
	@IN_UserID BIGINT
)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50);
		
			SELECT FCC.ColumnName AS ColumnName, FCC.AliasName AS AliasName, FCC.Search AS Search, FCC.SearchOrder AS SearchOrder,
				FCC.ControlType AS ControlTypeID, ISNULL(FCC.FkType, '') AS FkType, FCC.FkTable AS FkTable, FCC.FkColumn AS FkColumn,
				FCC.FkData AS FkData, FCC.AdditionalConditions AS AdditionalConditions,	FCC.FkOrder AS FkOrder, FCC.FkDelete AS FkDelete,
				FCC.FkNotActive AS FkNotActive, FCC.FkVersion AS FkVersion, FCC.DataType AS DataType, FCC.DefaultValue AS DefaultValue,
				FCC.MaxRange AS MaxRange, FCC.DependentFlag AS DependentFlag, FCC.Event AS Event, FCC.ValidationEvent, CM.Description AS ControlType, ISNULL(CM.ImagePath, '') AS ControlIcon
			FROM ChartSearchColumnConfig FCC
				JOIN CmnCodeMaster CM ON CM.Type = 'Control Type' AND CM.CodemasterID = FCC.ControlType AND ISNULL(CM.Description, '') <> ''
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.DashboardID = @IN_DashboardID AND FCC.IsDeleted = 0
			ORDER BY FCC.SearchOrder;
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spDashboardGetData]'
GO

CREATE PROCEDURE [dbo].[spDashboardGetData](
	@IN_Event VARCHAR(50), 
	@IN_FormID INT, 
	@IN_UserID INT,
	@IN_SessionID VARCHAR(255))
AS
BEGIN
	SET NOCOUNT ON

	BEGIN TRY   

		DECLARE @ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@DashboardID BIGINT = 0,
				@TableName VARCHAR(255) = '',
				@Source INT = 0,
				@SpName VARCHAR(225) = '',
				@View VARCHAR(225) = '',
				@Table VARCHAR(225) = '',
				@OpenQuery NVARCHAR(MAX) = '',
				@RQuery NVARCHAR(MAX) = '',
				@ActiveCount INT = 0,
				@ConditionColumns NVARCHAR(MAX) = '',
				@DBConnection INT = 0,
				@ObjectName NVARCHAR(MAX) = '',
				@DBConnectionType VARCHAR(50) = '',
				@NullFunction VARCHAR(50) = 'ISNULL',
				@RBSIterator INT = 0,
				@RBSDataVariableCount INT = 0,
				@RBSConditions NVARCHAR(MAX) = '',
				@DataVariable VARCHAR(225) = '',
				@DataValue VARCHAR(225) = '',
				@RBSTableName VARCHAR(255) = '',
				@ChartView VARCHAR(100) = '',
				@IsMainPageDashboard BIT = 0

		DECLARE @RBSDataVariable TABLE (
			RowNo INT NOT NULL,
			ControlName NVARCHAR(200) NULL,
			TableName VARCHAR(255) NULL,
			TableColumn VARCHAR(255) NULL,
			DataValue NVARCHAR(MAX) NULL)

		SELECT @DashboardID = RC.ReferenceID, @Source = RC.Source, @SpName = RC.SpName, @Table = RC.TableName, 
			@View = RC.ViewName, @OpenQuery = RC.Query, @DBConnection = ISNULL(RC.DBConnection, 0), @ChartView = ISNULL(CCM.TypeValues, ''),
			@IsMainPageDashboard = ISNULL(RC.IsMainPage, 0)
		FROM DashboardConfiguration RC 
			LEFT JOIN CmnCodeMaster CCM ON CCM.Type = 'Chart View' AND CCM.CodemasterID = RC.ChartView
		WHERE RC.FormID = @IN_FormID 
			AND RC.IsDeleted = 0 AND RC.NotActive = 0 AND RC.IsCurrentVersion = 1;

		IF EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TlsDBConfigDetails]') AND [TYPE] IN (N'U'))
		BEGIN
			SELECT @DBConnectionType = ISNULL(DT.TypeValues, '')
			FROM TlsDBConfigDetails DB
				LEFT JOIN CmnCodeMaster DT ON DT.Type = 'Database Type' AND DT.CodemasterID = DB.DatabaseTypeID
			WHERE DB.ReferenceID = @DBConnection
		END
		IF @DBConnectionType = 'MySql'
			SET @NullFunction = 'IFNULL'

		IF @Source = 1 
		BEGIN
			SET @TableName = '##tempDashboardDataSpTable';
			SET @ObjectName = @SpName;
		END
		ELSE IF @Source = 2
		BEGIN
			SET @TableName = @View;
			SET @ObjectName = @View;
		END
		ELSE IF @Source = 3
		BEGIN
			SET @TableName = @Table;
			SET @ObjectName = @Table;
		END
		ELSE IF @Source = 4 
		BEGIN
			SET @TableName = '##tempDashboardDataTable';
			SET @ObjectName = @OpenQuery;
		END
	
		IF OBJECT_ID('tempdb..#tempChartControls') IS NOT NULL
			DROP TABLE #tempChartControls

		CREATE TABLE #tempChartControls (
			RowNum INT NOT NULL IDENTITY(1, 1),
			ControlID INT NOT NULL,
			ColumnID INT NOT NULL,
			ChartName NVARCHAR(500) NULL,
			ValueColumn SYSNAME NULL,
			ResultColumn SYSNAME NULL,
			RangeEndColumn SYSNAME NULL,
			BarColumn SYSNAME NULL,
			TextColumn SYSNAME NULL,
			OrderByClause VARCHAR(500) NULL,
			MainTable SYSNAME NULL,
			MainCondition VARCHAR(1000) NULL,
			MainAddiCondition VARCHAR(1000) NULL,
			DeleteCondition VARCHAR(500) NULL,
			ActiveCondition VARCHAR(500) NULL,
			VersionCondition VARCHAR(500) NULL,
			SubTable SYSNAME NULL,
			SubCondition VARCHAR(1000) NULL,
			SubAddiCondition VARCHAR(1000) NULL,
			SubDeleteCondition VARCHAR(500) NULL,
			SubActiveCondition VARCHAR(500) NULL,
			SubVersionCondition VARCHAR(500) NULL,
			JoinCondition VARCHAR(500) NULL,
			ColumnTable VARCHAR(255) NULL,
			StackedColumn VARCHAR(255) NULL,
			ColumnName VARCHAR(255) NULL,
			ColumnValue VARCHAR(255) NULL,
			ColumnCondition VARCHAR(1000) NULL,
			ColumnAddiCondition VARCHAR(1000) NULL,
			ColumnDeleteCondition VARCHAR(500) NULL,
			ColumnActiveCondition VARCHAR(500) NULL,
			ColumnVersionCondition VARCHAR(500) NULL,
			ColumnJoinCondition VARCHAR(500) NULL,
			IndividualChart BIT NULL,
			ChartSourceID INT NULL,
			ChartObjectName VARCHAR(255) NULL,
			ResultRoundOf VARCHAR(200) NULL,
			BarLimitCount INT NULL,
			ResultColumnOrder VARCHAR(255) NULL,
			StartPoint INT NULL,
			CustomPointValue VARCHAR(100) NULL,
			IsMyDashboard BIT NULL,
			CategoryDisplay BIT NULL,
			CONSTRAINT [PK_tempChartControls] PRIMARY KEY ([RowNum] ASC))
			
		INSERT INTO #tempChartControls (ControlID, ColumnID, ChartName, ValueColumn, BarColumn, ResultColumn, RangeEndColumn, TextColumn, OrderByClause, MainTable, MainCondition, MainAddiCondition, DeleteCondition, 
			ActiveCondition, VersionCondition, SubTable, SubCondition, SubAddiCondition, SubDeleteCondition, SubActiveCondition, SubVersionCondition, JoinCondition,
			ColumnTable, StackedColumn, ColumnName, ColumnValue, ColumnCondition, ColumnAddiCondition, ColumnDeleteCondition, ColumnActiveCondition,
			ColumnVersionCondition, ColumnJoinCondition, IndividualChart, ChartSourceID, ChartObjectName, ResultRoundOf, BarLimitCount, ResultColumnOrder, StartPoint, CustomPointValue, IsMyDashboard, CategoryDisplay)
		SELECT FC.ControlID, ISNULL(CC.ColumnID, 0), FC.Name, 'MT.' + FC.TableColumn, FC.TableColumn,
			CASE WHEN ISNULL(CP.Value, '') NOT IN ('', '0') THEN 'MT.' + CP.Value ELSE 'MT.' + FC.TableColumn END,
			CASE WHEN ISNULL(REC.Value, '') NOT IN ('', '0') THEN 'MT.' + REC.Value ELSE '' END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 'ST.' + FC.FkData ELSE 'ST.' + CC.FkData END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 
				CASE WHEN ISNULL(OC.Value, '') NOT IN ('', '0') THEN CONCAT('MT.', ISNULL(OC.Value, ''), CASE WHEN ISNULL(FC.FkOrder, 1) = 2 THEN ' DESC' ELSE '' END)
					 WHEN ISNULL(FC.FkOrder, 1) = 1 THEN 'ST.' + FC.FkData + ' ASC'
					 WHEN ISNULL(FC.FkOrder, 1) = 2 THEN 'ST.' + FC.FkData + ' DESC'
					 WHEN ISNULL(FC.FkOrder, 1) = 3 THEN 'ST.Orderby ASC' 
					 WHEN ISNULL(FC.FkOrder, 1) = 4 THEN ' MT.' + FC.TableColumn + ' ASC' ELSE '' END
				ELSE CASE WHEN ISNULL(CCO.Value, '') NOT IN ('', '0') THEN CONCAT('MT.', ISNULL(CCO.Value, ''), CASE WHEN ISNULL(CC.FkOrder, 1) = 2 THEN ' DESC' ELSE '' END)
					 WHEN ISNULL(CC.FkOrder, 1) = 1 THEN 'ST.' + CC.FkData + ' ASC' 
					 WHEN ISNULL(CC.FkOrder, 1) = 2 THEN 'ST.' + CC.FkData + ' DESC'
					 WHEN ISNULL(CC.FkOrder, 1) = 3 THEN 'ST.Orderby ASC' 
					 WHEN ISNULL(CC.FkOrder, 1) = 4 THEN 'MT.' + CC.ColumnName + ' ASC' ELSE '' END END, 
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN @TableName 
				ELSE  CASE WHEN ISNULL(FC.FkType, 1) = 1 THEN 'CmnCodeMaster' WHEN ISNULL(FC.FkType, 1) = 3 THEN 'CmnFileUpload' ELSE FC.FkTable END END,
			CASE WHEN ISNULL(FC.FkType, 1) IN (1, 3) AND ISNULL(FC.SearchApplicable, 0) = 1 THEN 'MT.Type=''' + FC.FkTable + '''' ELSE '' END, 
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 THEN ISNULL(FC.AdditionalConditions, '') ELSE '' END,
			CASE WHEN FC.FkDelete = 0 OR ISNULL(FC.SearchApplicable, 0) <> 1 THEN '' ELSE (' ' + @NullFunction + '(MT.IsDeleted, 0) = 0 ') END, 
			CASE WHEN FC.FkNotActive = 0 OR ISNULL(FC.SearchApplicable, 0) <> 1 THEN '' ELSE (' ' + @NullFunction + '(MT.NotActive, 0) = 0 ') END, 
			CASE WHEN FC.FkVersion = 0 OR ISNULL(FC.SearchApplicable, 0) <> 1 THEN '' ELSE (' ' + @NullFunction + '(MT.IsCurrentVersion, 1) = 1 ') END, 

			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 
				CASE WHEN ISNULL(FC.FkType, 1) = 1 THEN 'CmnCodeMaster' WHEN ISNULL(FC.FkType, 1) = 3 THEN 'CmnFileUpload' ELSE FC.FkTable END
				ELSE CASE WHEN ISNULL(CC.FkType, 1) = 1 THEN 'CmnCodeMaster' WHEN ISNULL(CC.FkType, 1) = 3 THEN 'CmnFileUpload' ELSE CC.FkTable END END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 
				CASE WHEN ISNULL(FC.FkType, 1) IN (1, 3) THEN 'ST.Type=''' + FC.FkTable + '''' ELSE '' END
				ELSE CASE WHEN ISNULL(CC.FkType, 1) IN (1, 3) THEN 'ST.Type=''' + CC.FkTable + '''' ELSE '' END END, 
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN ISNULL(FC.AdditionalConditions, '') ELSE ISNULL(CC.AdditionalConditions, '') END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 
				CASE WHEN FC.FkDelete = 0 THEN '' ELSE (' ' + @NullFunction + '(ST.IsDeleted, 0) = 0 ') END
				ELSE CASE WHEN CC.FkDelete = 0 THEN '' ELSE (' ' + @NullFunction + '(ST.IsDeleted, 0) = 0 ') END END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 
				CASE WHEN FC.FkNotActive = 0 THEN '' ELSE (' ' + @NullFunction + '(ST.NotActive, 0) = 0 ') END
				ELSE CASE WHEN CC.FkNotActive = 0 THEN '' ELSE (' ' + @NullFunction + '(ST.NotActive, 0) = 0 ') END END, 
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 
				CASE WHEN FC.FkVersion = 0 THEN '' ELSE (' ' + @NullFunction + '(ST.IsCurrentVersion, 1) = 1 ') END
				ELSE CASE WHEN CC.FkVersion = 0 THEN '' ELSE (' ' + @NullFunction + '(ST.IsCurrentVersion, 1) = 1 ') END END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) <> 1 THEN 'ST.' + FC.FkColumn + ' = MT.' +  FC.TableColumn
				ELSE 'ST.' + CC.FkColumn + ' = MT.' + CC.ColumnName END,

			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN  ''
				ELSE CASE WHEN ISNULL(CC.FkType, 1) = 1 THEN 'CmnCodeMaster' WHEN ISNULL(CC.FkType, 1) = 3 THEN 'CmnFileUpload' ELSE CC.FkTable END END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN  '' ELSE CC.ColumnName END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN  '' ELSE CC.FkData END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN  '' ELSE CC.FkColumn END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN ''
				ELSE CASE WHEN ISNULL(CC.FkType, 1) IN (1, 3) THEN 'Type=''' + CC.FkTable + '''' ELSE '' END END, 
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN '' ELSE ISNULL(CC.AdditionalConditions, '') END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN ''
				ELSE CASE WHEN CC.FkDelete = 0 THEN '' ELSE (' ' + @NullFunction + '(IsDeleted, 0) = 0 ') END END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN ''
				ELSE CASE WHEN CC.FkNotActive = 0 THEN '' ELSE (' ' + @NullFunction + '(NotActive, 0) = 0 ') END END, 
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN ''
				ELSE CASE WHEN CC.FkVersion = 0 THEN '' ELSE (' ' + @NullFunction + '(IsCurrentVersion, 1) = 1 ') END END,
			CASE WHEN ISNULL(FC.SearchApplicable, 0) = 1 OR ISNULL(CC.ColumnID, 0) = 0 THEN ''
				ELSE 'CT.' + CC.FkColumn + ' = MT.' + CC.ColumnName END,
			CASE WHEN ISNULL(IC.Value, '') = '1' THEN 1 ELSE 0 END,
			CASE WHEN ISNULL(CSI.Value, '') NOT IN ('', '0') THEN CSI.Value ELSE 0 END, ISNULL(CON.Value, ''),
			CASE WHEN ISNULL(CP.Value, '') NOT IN ('', '0') THEN 
				CASE WHEN ISNULL(FC.ResultRoundOf, 0) <> 0 THEN FC.ResultRoundOf ELSE 0 END END,
			CASE WHEN ISNULL(FC.BarLimitCount, 0) <> 0 THEN FC.BarlimitCount ELSE 0 END,
			CASE WHEN ISNULL(OC.Value, '') IN ('', '0') AND ISNULL(CP.Value, '') NOT IN ('', '0') THEN
				CASE WHEN ISNULL(FC.FkOrder, 1) = 5 THEN 'MT.' + CP.Value + ' ASC'
					WHEN ISNULL(FC.FkOrder, 1) = 6 THEN 'MT.' + CP.Value + ' DESC' ELSE '' END END,
			CASE WHEN ISNULL(FC.StartPoint, 0) <> 0 THEN FC.StartPoint ELSE 0 END,
			CASE WHEN ISNULL(FC.CustomPointValue, '') <> '' THEN FC.CustomPointValue ELSE '0' END,
			CASE WHEN ISNULL(FC.IsMyDashboard, 0) <> 0 THEN FC.IsMyDashboard ELSE 0 END,
			CASE WHEN ISNULL(FC.CategoryDisplay, 0) <> 0 THEN FC.CategoryDisplay ELSE 0 END
		FROM CmnFormDetails FD
			JOIN CmnFormTabs FT ON FT.FormID = FD.FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls FC ON FC.GroupID = GB.GroupID AND FC.IsDeleted = 0
			LEFT JOIN CmnControlColumns CC ON CC.ControlID = FC.ControlID AND CC.IsDeleted = 0
			LEFT JOIN CmnControlProperty CP ON CP.ControlID = FC.ControlID AND CP.Name = 'Result Column' AND CP.IsDeleted = 0
			LEFT JOIN CmnControlProperty REC ON REC.ControlID = FC.ControlID AND REC.Name = 'Range End Column' AND REC.IsDeleted = 0
			LEFT JOIN CmnControlProperty OC ON OC.ControlID = FC.ControlID AND OC.Name = 'Order Column' AND OC.IsDeleted = 0
			LEFT JOIN CmnColumnProperty CCO ON CCO.ColumnID = CC.ColumnID AND CCO.Name = 'Order Column' AND CCO.IsDeleted = 0
			LEFT JOIN CmnControlProperty IC ON IC.ControlID = FC.ControlID AND IC.Name = 'Individual Chart' AND IC.IsDeleted = 0
			LEFT JOIN CmnControlProperty CSI ON CSI.ControlID = FC.ControlID AND CSI.Name = 'Chart Source ID' AND CSI.IsDeleted = 0
			LEFT JOIN CmnControlProperty CON ON CON.ControlID = FC.ControlID AND CON.Name = 'Chart Object Name' AND CON.IsDeleted = 0
		WHERE FD.FormID = @IN_FormID AND FD.IsDeleted = 0
		ORDER BY FC.ControlOrder, CC.ColumnOrder

		SELECT @ActiveCount = COUNT(1) FROM CmnSearchParameterProcess WHERE SessionID = @IN_SessionID AND TableColumn = 'MT.NotActive';
		SET @ConditionColumns = ISNULL(SUBSTRING((SELECT ' AND ' + CASE WHEN DP.ControlType = 'Textbox' OR DP.ControlType = 'Multiline Textbox' 
																				THEN DP.ColumnName + ' LIKE ''%' + ISNULL(DP.ColumnValue, '') + '%''' 
																		WHEN DP.ControlType = 'Check Listbox' THEN
																				CASE WHEN @DBConnectionType = 'MySql'  THEN 'CONCAT (''('', REPLACE(DP.ColumnValue, ''<col>'',  CONCAT(''CONCAT('','', '', DP.ColumnName, '', '','')'', '' LIKE '')), '')'')'
																					ELSE '(' + REPLACE(DP.ColumnValue, '<col>', ''','' + CAST(' + DP.ColumnName  + ' AS VARCHAR(200)) + '',''' + ' LIKE ') + ')' END
																		WHEN DP.ControlType IN ('Checklist Grid') THEN
																			CASE WHEN @DBConnectionType = 'MySql' THEN CONCAT('FIND_IN_SET(', DP.ColumnName, ', ''', ISNULL(DP.ColumnValue, ''), ''') > 0')
																			ELSE '('''' + CAST(' + DP.ColumnName + ' AS VARCHAR(2000)) + '''' IN ('+ ISNULL(DP.ColumnValue, '') + '))' END
																		WHEN DP.ControlType IN ('Radiolist Grid') THEN
																			CASE WHEN @DBConnectionType = 'MySql' THEN CONCAT('FIND_IN_SET(''', ISNULL(DP.ColumnValue, ''), ''', ', DP.ColumnName, ') > 0')
																			ELSE '(PATINDEX(''%,'' + CAST(' + ISNULL(DP.ColumnValue, '')+ ' AS VARCHAR(2000)) + '',%'', '',''+'+ ISNULL(DP.ColumnName, '') + '+'','') > 0)' END
																		WHEN DP.ControlType = 'Date' THEN 
																			CASE WHEN CHARINDEX('AND', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn+ ' AS DATE) BETWEEN '+ ISNULL(DP.ColumnValue, '')+ ')') 
																				WHEN CHARINDEX('>=', DP.ColumnValue) > 0 OR CHARINDEX('<=', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn + ' AS DATE) '+ ISNULL(DP.ColumnValue, '')+ ')')
																			ELSE ('(CAST('+DP.TableColumn+ ' AS DATE) = '+ ISNULL(DP.ColumnValue, '')+ ')') END 
																		WHEN DP.ControlType = 'DateTime' THEN 
																			CASE WHEN CHARINDEX('AND', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn+ ' AS DATETIME) BETWEEN '+ ISNULL(DP.ColumnValue, '')+ ')') 
																				WHEN CHARINDEX('>=', DP.ColumnValue) > 0 OR CHARINDEX('<=', DP.ColumnValue) > 0 THEN ('(CAST('+DP.TableColumn + ' AS DATETIME) '+ ISNULL(DP.ColumnValue, '')+ ')')
																			ELSE ('(CAST('+DP.TableColumn+ ' AS DATETIME) = '+ ISNULL(DP.ColumnValue, '')+ ')') END 
																		WHEN DP.ControlType = 'Checkbox' THEN (DP.ColumnName+ ' = '+ ISNULL(DP.ColumnValue, 0))
																		ELSE DP.ColumnName + ' = ''' + ISNULL(DP.ColumnValue, '') + '''' END 
													FROM CmnSearchParameterProcess DP WITH (NOLOCK)
													WHERE DP.SessionID = @IN_SessionID 
													ORDER BY DP.ColumnName
													FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 1, 4000000000), '')

		INSERT INTO @RBSDataVariable (RowNo, ControlName, TableName, TableColumn, DataValue)
		EXEC spCmnGetFormRBSData @IN_FormID, @IN_UserID, ''

		SELECT @RBSDataVariableCount = COUNT(1) FROM @RBSDataVariable

		WHILE @RBSIterator < @RBSDataVariableCount
		BEGIN
			SET @RBSIterator = @RBSIterator + 1;
			SELECT @DataVariable = TableColumn, @DataValue = DataValue, @RBSTableName = TableName FROM @RBSDataVariable WHERE RowNo = @RBSIterator;

			IF EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @DataVariable) 
			BEGIN
				IF @RBSConditions <> ''
					SET @RBSConditions = @RBSConditions + ' AND '

				IF @DBConnectionType = 'MySql'
				BEGIN
					IF @DataVariable = 'CompanyID'
						SET @RBSConditions = @RBSConditions + CONCAT('(IFNULL(MT.', @DataVariable, ', 0) = 0 OR  AND FIND_IN_SET(MT.', @DataVariable, ',''', @DataValue, ''') > 0)');
					ELSE
						SET @RBSConditions = @RBSConditions + CONCAT(' AND FIND_IN_SET(MT.', @DataVariable, ',''', @DataValue, ''') > 0');
				END
				ELSE
				BEGIN
					IF @DataVariable = 'CompanyID'
						SET @RBSConditions = @RBSConditions + '(ISNULL(MT.' + @DataVariable + ', 0) = 0 OR EXISTS (SELECT 1 FROM dbo.fn_DataSplit(MT.' + @DataVariable + ', '','') A WHERE (PATINDEX(''%,'' + A.items + '',%'', '',''+''' + @DataValue + '''+'','') > 0)))';
					ELSE
						SET @RBSConditions = @RBSConditions + 'EXISTS (SELECT 1 FROM dbo.fn_DataSplit(MT.' + @DataVariable + ', '','') A WHERE (PATINDEX(''%,'' + A.items + '',%'', '',''+''' + @DataValue + '''+'','') > 0))';
				END
			END
		END

		IF @RBSConditions <> ''
			SET @ConditionColumns = @ConditionColumns + ' AND ' + @RBSConditions;
													
		SELECT @Source AS SourceID, @ObjectName AS ObjectName, @DBConnection AS DBConnection, @ConditionColumns AS ConditionColumns, @ChartView AS ChartView, @IsMainPageDashboard AS IsMainPage;

		SELECT CC.ControlID, CC.ColumnID, ChartName, ValueColumn, BarColumn, TextColumn, OrderByClause, MainTable, ResultColumn, RangeEndColumn,
			MainCondition, MainAddiCondition, DeleteCondition, CASE WHEN @ActiveCount > 0 THEN '' ELSE ActiveCondition END AS ActiveCondition, 
			VersionCondition, SubTable, SubCondition, SubAddiCondition, SubDeleteCondition, SubActiveCondition, SubVersionCondition, JoinCondition, 
			ColumnTable, StackedColumn, ColumnName, ColumnValue, ColumnCondition, ColumnAddiCondition, ColumnDeleteCondition, 
			ColumnActiveCondition, ColumnVersionCondition, ColumnJoinCondition, COALESCE(CLRT.Value, CRT.Value, 'COUNT') AS ResultType, 
			COALESCE(CLCT.Value, CCT.Value, 'column') AS ChartType, ISNULL(AB.Value, '') AS AllBarReq, ISNULL(WG.Value, '') AS Widget,
			ISNULL(CC.IndividualChart, 0) AS IndividualChart,
			CASE WHEN ISNULL(CC.IndividualChart, 0) = 1 THEN ISNULL(CC.ChartSourceID, 2) ELSE @Source END AS ChartSourceID,
			CASE WHEN ISNULL(CC.IndividualChart, 0) = 1 THEN ISNULL(CC.ChartObjectName, '') ELSE @ObjectName END AS ChartObjectName,
			BarLimitCount AS BarLimitCount, ResultColumnOrder AS ResultColumnOrder, ResultRoundOf AS ResultRoundOf, CC.StartPoint AS StartPoint,
			CC.CustomPointValue AS CustomPointValue, CC.IsMyDashboard AS IsMyDashboard, CC.CategoryDisplay AS CategoryDisplay
		FROM #tempChartControls CC
			LEFT JOIN CmnControlProperty CRT ON CRT.ControlID = CC.ControlID AND CRT.Name = 'ResultType'
			LEFT JOIN CmnColumnProperty CLRT ON CLRT.ColumnID = CC.ColumnID AND CLRT.Name = 'ResultType'
			LEFT JOIN CmnControlProperty CCT ON CCT.ControlID = CC.ControlID AND CCT.Name = 'ChartType'
			LEFT JOIN CmnColumnProperty CLCT ON CLCT.ColumnID = CC.ColumnID AND CLCT.Name = 'ChartType'
			LEFT JOIN CmnControlProperty AB ON AB.ControlID = CC.ControlID AND AB.Name = 'All Bar'
			LEFT JOIN CmnControlProperty WG ON WG.ControlID = CC.ControlID AND WG.Name = 'Widget';
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH	
END;
GO
PRINT N'Creating [dbo].[spDashboardPublish]'
GO

CREATE PROCEDURE [dbo].[spDashboardPublish](
	@IN_DashboardID INT,
	@IN_FormID INT, 
	@IN_UserID INT
)
AS
BEGIN
	SET NOCOUNT ON

	BEGIN TRY
	
	  BEGIN TRANSACTION tran_DashboardPublish

	  DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@RQuery NVARCHAR(MAX) = '',
			@Query NVARCHAR(MAX) = '',
			@Name NVARCHAR(500) = '',
			@Title NVARCHAR(500) = '',
			@SourceID INT = 0,
			@StoredProcedure VARCHAR(100) = '',
			@ViewName VARCHAR(100) = '',
			@TableName VARCHAR(100) = '',
			@FormID INT = 0,
			@GroupBoxID INT = 0,
			@FormTableName NVARCHAR(100) = '',
			@FormCount INT = 0,
			@MainMenuOrder INT = 0,
			@ModuleID INT = 0,
			@MainModuleID INT =0,
			@CodemasterID INT = 0,
			@TabID INT = 0,
			@GoupBoxID INT = 0,
			@controlID INT = 0,
			@MainFormID INT = 0,
			@SubMenuOrder INT = 0,
			@MainMenuName NVARCHAR(500) = '',
			@MainMenuCount INT = 0,
			@FormIcon NVARCHAR(100) = '',
			@ModuleMenuCount INT = 0,
			@LayoutClass NVARCHAR(500) = '',
			@FormNameCount INT = 0, 
			@FormNameID BIGINT = 0,
			@ExistingFormCount BIGINT = 0,
			@PivotReport BIT,
			@ExistingFormID INT = 0,
			@ExistingCount INT = 0,
			@DeletedFormCount INT = 0,
			@IsMainMenu BIT = 0,
			@MainOrder INT = 0,
			@MainMenuOrderMax INT = 0
			
		SELECT @Name = Name, @Title = Title, @SourceID = Source, @StoredProcedure = SpName, @ViewName = ViewName, @TableName = TableName, @Query = Query, @FormID = ISNULL(FormID, 0), @IsMainMenu = ISNULL(RC.IsMainMenu, 0),
			@MainMenuName = CASE WHEN @IsMainMenu = 1 THEN '' ELSE ISNULL(CM.TypeValues, '') END, @LayoutClass = ISNULL(LT.Description, 1), @PivotReport = ISNULL(RC.PivotReport, 0), @MainOrder = ISNULL(RC.MainMenuOrder, 0)
		FROM DashboardConfiguration RC
			JOIN CmnCodeMaster CM ON CM.CodemasterID = RC.ModuleID AND Type = 'Module'
			LEFT JOIN CmnCodeMaster LT ON LT.CodemasterID = RC.LayoutType AND LT.Type = 'Chart Layout Type'
		WHERE RC.ReferenceID = @IN_DashboardID;
  
		IF @SourceID = 1
			SET @FormTableName = @StoredProcedure;
		ELSE IF @SourceID = 2
			SET @FormTableName = @ViewName;
		ELSE IF @SourceID = 3
			SET @FormTableName = @TableName;
		ELSE IF @SourceID = 4
			SET @FormTableName = '';
	
		SET @ModuleID = ISNULL((SELECT CodemasterID FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = 'Dashboard' AND IsDeleted = 0 AND NotActive = 0), 7);
		SELECT @MainMenuCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @MainMenuName AND ISNULL(MainMenu1, 0) = 0 AND FormPath = '' AND IsDeleted = 0;
		
		IF (ISNULL(@MainMenuCount, 0) = 0 AND ISNULL(@MainMenuName, '') <> '')
		BEGIN
			SELECT @MainMenuOrder = ISNULL(Max(MainMenuOrder), 0), @MainFormID = ISNULL(MAX(FormID) + 10, 710) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND FormPath = '' AND IsDeleted = 0;
			SELECT @MainMenuOrder = OrderBy, @FormIcon = ImagePath FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = @MainMenuName AND IsDeleted = 0 AND NotActive = 0;  

			SET @ExistingFormCount = (SELECT COUNT(1) FROM CmnFormDetails WHERE FormID = @MainFormID);
			IF @ExistingFormCount > 0
			BEGIN
			   SET @MainFormID = (SELECT (MAX(FormID) + 1) FROM CmnFormDetails);
			END

			IF ISNULL(@MainMenuOrder, 0) = 0
			  SET @MainMenuOrder = 1;
			
			INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,
				FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon,
				IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
			SELECT '', @MainMenuOrder, 0, NULL, 0, @MainFormID, @MainMenuName, @MainMenuName, @ModuleID, 0, NULL, NULL, @FormIcon,
				0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime; 

			DECLARE @Role VARCHAR(10) = 'Admin',
					@HasReadPermission BIT = 1,
					@IsFavourite BIT = 0,
					@FavouriteOrder INT = '0',
					@SubAudit BIT = 0,
					@Audit BIT = 1,
					@ValidateChecksum BIT = 1,
					@RoleID INT = 0,
					@TabList VARCHAR(500) = '',
					@ButtonList VARCHAR(500) = ''

			SET @RoleID = ISNULL((SELECT CodemasterID FROM CmnCodeMaster WHERE Type = 'Roles' AND TypeValues = @Role), 0);
			SET @ButtonList = '';
			SET @TabList = ISNULL(SUBSTRING((SELECT ',' + CAST(TabID AS VARCHAR(MAX)) FROM CmnFormTabs WHERE FormID = @MainFormID
								FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
			SET @ButtonList = ISNULL(SUBSTRING((SELECT ',' + CAST(CodemasterID AS VARCHAR(MAX)) FROM CmnCodeMaster WHERE MenuID = @MainFormID AND Type = 'Menubutton' AND IsDeleted = 0 AND NotActive = 0
								FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
			SELECT @MainMenuOrder = MainMenuOrder, @SubMenuOrder = SubMenuOrder FROM CmnFormDetails WHERE FormID = @MainFormID;

			INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT @RoleID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
				@MainFormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
				, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0;
  
			INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.UserID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
				@MainFormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
				, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM CmnUserDetails E WHERE PATINDEX(CONCAT('%,', CAST(E.RoleID AS VARCHAR(50)), ',%'), CONCAT(',', CAST(@RoleID AS VARCHAR(50)), ',')) > 0;
		END
		ELSE
		BEGIN
			SELECT @FormIcon = ImagePath FROM CmnCodeMaster WHERE Type = 'Module' AND TypeValues = @MainMenuName AND IsDeleted = 0 AND NotActive = 0;
		END

		SET @FormCount = 0;
		SET @FormNameCount = 0;
		SET @ExistingFormID = 0;
		SET @ExistingCount = 0;
		SET @FormNameID = 0;
		SET @SubMenuOrder = 0;

		SELECT @MainFormID = FormID FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @MainMenuName AND FormPath = '' AND IsDeleted = 0;
		SELECT @FormCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 0;
		SELECT @FormNameCount = COUNT(1) FROM CmnFormDetails WHERE Name = @Name AND ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
		SELECT @DeletedFormCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 1;
				
		IF @FormNameCount > 0
		BEGIN
			SELECT @FormNameID = FormID FROM CmnFormDetails WHERE Name = @Name AND ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
		END

		SET @ExistingFormID = ISNULL((CASE WHEN @FormNameCount = 0 THEN @FormID ELSE @FormNameID END), 0);
		SET @ExistingCount = ISNULL((CASE WHEN @FormNameCount = 0 THEN @FormCount ELSE @FormNameCount END), 0);

		IF OBJECT_ID('tempdb..#tempUserList') IS NOT NULL
			DROP TABLE #tempUserList

		CREATE TABLE #tempUserList (
			UserID INT NULL,
			Buttons VARCHAR(MAX) NULL,
			Tabs VARCHAR(MAX) NULL,
			MainMenuOrder INT NULL, 
			SubMenuOrder INT NULL,
			HasReadPermission BIT NULL,
			IsFavourite BIT NULL, 
			FavouriteOrder INT NULL,
			Audit BIT NULL,
			ValidateChecksum BIT NULL)	

		IF OBJECT_ID('tempdb..#tempRoleList') IS NOT NULL
			DROP TABLE #tempRoleList

		CREATE TABLE #tempRoleList (
			RoleID INT NULL,
			Buttons VARCHAR(MAX) NULL,
			Tabs VARCHAR(MAX) NULL,
			MainMenuOrder INT NULL, 
			SubMenuOrder INT NULL,
			HasReadPermission BIT NULL,
			IsFavourite BIT NULL, 
			FavouriteOrder INT NULL,
			Audit BIT NULL,
			ValidateChecksum BIT NULL)	

		IF ISNULL(@ExistingFormID, 0) <> 0 AND ISNULL(@ExistingCount, 0) <> 0
		BEGIN				
			INSERT INTO #tempRoleList
			SELECT RoleID, ISNULL(SUBSTRING((SELECT ',' + CM.TypeValues FROM CmnCodeMaster CM WHERE CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.CodemasterID AS VARCHAR(500)) + ',%' , ',' + CAST(Buttons AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM CmnFormTabs FT WHERE PATINDEX('%,' +  CAST(FT.TabID AS VARCHAR(500)) + ',%' , ',' + CAST(Tabs AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				MainMenuOrder, SubMenuOrder, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum
			FROM CmnRolePermission 
			WHERE FormID = @ExistingFormID AND IsDeleted = 0;

			INSERT INTO #tempUserList
			SELECT UserID, ISNULL(SUBSTRING((SELECT ',' + CM.TypeValues FROM CmnCodeMaster CM WHERE CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.CodemasterID AS VARCHAR(500)) + ',%' , ',' + CAST(Buttons AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM CmnFormTabs FT WHERE PATINDEX('%,' +  CAST(FT.TabID AS VARCHAR(500)) + ',%' , ',' + CAST(Tabs AS VARCHAR(50)) + ',') > 0
					FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
				MainMenuOrder, SubMenuOrder, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum
			FROM CmnRBSPermission 
			WHERE FormID = @ExistingFormID AND IsDeleted = 0;
    
		END

		IF @ExistingCount <> 0
		BEGIN
			SELECT @SubMenuOrder = SubMenuOrder FROM CmnFormDetails WHERE FormID = @ExistingFormID;
		END

		IF (@FormCount > 0 OR @DeletedFormCount > 0) AND @FormID <> 0
		BEGIN
			EXEC spCmnClearFormConfiguration @FormID;  
			DELETE FROM CmnGeneralProperty WHERE Type = 'Form' AND TypeID = @FormID;
		END

		IF @FormNameCount > 0 AND ISNULL(@FormNameID, 0) <> 0
		BEGIN
			EXEC spCmnClearFormConfiguration @FormNameID;  
			DELETE FROM CmnGeneralProperty WHERE Type = 'Form' AND TypeID = @FormNameID;
		END 
	
		IF ISNULL(@FormID, 0) = 0
		BEGIN
			SELECT @SubMenuOrder = ISNULL(MAX(SubMenuOrder) + 1, 1), @FormID = ISNULL(MAX(FormID) + 1, (@MainFormID + 1)) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
		END
		
		SET @ExistingFormCount = (SELECT COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID);
		IF @ExistingFormCount > 0
		BEGIN
			SET @FormID = (SELECT (MAX(FormID) + 1) FROM CmnFormDetails);
		END

		IF @MainMenuName = ''
		BEGIN
			SET @SubMenuOrder = 0;
			SET @MainFormID = 0;
			SELECT @MainMenuOrderMax = ISNULL(MAX(MainMenuOrder) + 1, 1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND (ISNULL(MainMenu1, '') = '' OR ISNULL(MainMenu1, 0) = 0) AND IsDeleted = 0;
			SET @MainMenuOrder = CASE WHEN ISNULL(@MainOrder, 0) = 0 THEN @MainMenuOrderMax ELSE ISNULL(@MainOrder, 0) END;
		END
		ELSE
		BEGIN
			IF ISNULL(@SubMenuOrder, 0) = 0
				SET @SubMenuOrder = 1;
		END

		SELECT @MainModuleID = CASE WHEN ISNULL(CFD.MainMenu1, 0) <> 0 THEN ISNULL((SELECT TOP 1 MM.MainMenuOrder FROM CmnFormDetails MM WHERE MM.FormID = CFD.MainMenu1), 999) ELSE ISNULL(CFD.MainMenuOrder, 0) END
		FROM CmnFormDetails CFD WHERE CFD.FormID = @MainFormID;

		IF ISNULL(@FormID, 0) = 0
			SET @FormID = @MainFormID + 1;
  
		INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon,
				IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
		SELECT 'StandardPage', CASE WHEN @MainMenuName = '' THEN @MainMenuOrder ELSE @MainModuleID END, @SubMenuOrder, @MainFormID, 6, @FormID, @Name, @Title, @ModuleID, 0, '', '', @FormIcon,
				0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime;
  
		SET @CodemasterID = ISNULL((SELECT (MAX(CodemasterID) + 1) FROM CmnCodeMaster WHERE Type = 'Menubutton'), 1);
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 6, 'Menubutton', @CodemasterID, 'Menubutton', 'Full', '', '', '', '', 1, '', 'fa-square', @FormID, @ModuleID, '', 'BCT.chartResize(''col-lg-12'')', 0, 6
			,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		SET @CodemasterID = @CodemasterID + 1;
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 6, 'Menubutton', @CodemasterID, 'Menubutton', 'Half', '', '', '', '', 2, '', 'fa-columns', @FormID, @ModuleID, '', 'BCT.chartResize(''col-lg-6'')', 0, 6
			,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		SET @CodemasterID = @CodemasterID + 1;
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 6, 'Menubutton', @CodemasterID, 'Menubutton', 'Medium', '', '', '', '', 3, '', 'fa-cubes', @FormID, @ModuleID, '', 'BCT.chartResize(''col-lg-4'')', 0, 6
			,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		SET @CodemasterID = @CodemasterID + 1;
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 6, 'Menubutton', @CodemasterID, 'Menubutton', 'Small', '', '', '', '', 4, '', 'fa-th-large', @FormID, @ModuleID, '', 'BCT.chartResize(''col-lg-3'')', 0, 6
			,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		SET @CodemasterID = @CodemasterID + 1;
		INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
		SELECT 6, 'Menubutton', @CodemasterID, 'Menubutton', 'Report', '', '', '', '', 5, '', 'fa-file-pdf-o', @FormID, @ModuleID, '', 'REPORT.printDashboard()', 0, 6
			,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		IF @PivotReport = 1
		BEGIN
			SET @CodemasterID = @CodemasterID + 1;
			INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, ButtonKeyColumn, Details, MenuCategory, ButtonType
			  ,Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT 1, 'Menubutton', @CodemasterID, 'Menubutton', 'Pivot Report', '', '', '', '', 4, '', 'fa-flag-checkered', @FormID, @ModuleID, '', 'CMNF.loadJs(''/assets/javascripts/PivotReport.js'', typeof PIVOT);setTimeout(function(){ PIVOT.openConfigurationPopup(); }, 1000);', 0, 6
			  ,1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

		END

		UPDATE DashboardConfiguration SET FormID = @FormID, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_DashboardID;    

		INSERT INTO CmnFormTabs (FormID, Name, TabOrder, IsMandatory, ModifiedDate, IsDeleted) VALUES (@FormID, @Name, 1, 1, @UTCTime, 0);

		SET @TabID = SCOPE_IDENTITY();

		INSERT INTO CmnGroupBoxes (TabID, Name, GroupOrder, CommonGroup, ModifiedDate, IsDeleted) VALUES (@TabID, @Name, 1, 1, @UTCTime, 0);

		SET @GroupBoxID = SCOPE_IDENTITY();

		INSERT INTO CmnFormControls (GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, MaxLength, Events, 
			ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsMobile,
			IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, BarLimitCount, FillEvent, FillType, ButtonID, FkOrder, ResultRoundOf, 
			BarColour, StartPoint, CustomPointValue, IsMyDashboard, CategoryDisplay, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ModifiedDate, IsDeleted)
		SELECT @GroupBoxID, CCC.AliasName, CCC.ColumnName, 26, 2, 1, 0, 0, -1, 'STP.search()', '', 0, 0, '', '', '', 0, 0, 0, 0, 0, 1, 0, 0, CCC.JoinFkType, CCC.JoinFkTable, 
			CCC.JoinFkColumn, CCC.XAxis, CCC.AdditionalConditions, CCC.BarLimitCount, '',
			0, 0, CCC.FkOrder, CCC.ResultRoundOf, CCC.BarColour, CCC.StartPoint, CCC.CustomPointValue, CCC.IsMyDashboard, CCC.CategoryDisplay, CCC.FkDelete, CCC.FkNotActive, CCC.FkVersion, 0, 0, CCC.ColumnOrder, @UTCTime, 0
		FROM ChartColumnConfig CCC
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'All Bar', 'TRUE', @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0 AND ISNULL(CCC.AllBarReq, 0) = 1
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Widget', 'TRUE', @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0 AND ISNULL(CCC.IsWidget, 0) = 1
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Result Column', ISNULL(CCC.ResultColumn, ''), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0 AND ISNULL(CCC.ResultColumn, '') <> ''
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Range End Column', ISNULL(CCC.RangeEndColumn, ''), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0 AND ISNULL(CCC.RangeEndColumn, '') <> ''
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Order Column', ISNULL(CCC.OrderColumn, ''), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.OrderColumn, '') <> ''
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Individual Chart', CAST(ISNULL(CCC.IndividualChart, 0) AS VARCHAR(50)), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Chart Source ID', CAST(ISNULL(CCC.ChartSourceID, 0) AS VARCHAR(50)), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Chart Object Name', ISNULL(CCC.ChartObjectName, ''), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Bar Colour', ISNULL(CCC.BarColour, ''), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0 AND ISNULL(CCC.ResultColumn, '') <> ''
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'My Dashboard', ISNULL(CCC.IsMyDashboard, 0), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnControlProperty
		SELECT CFC.ControlID, 'Category Display', ISNULL(CCC.CategoryDisplay, 0), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = CCC.ColumnName AND CFC.Name = CCC.AliasName AND CFC.IsDeleted = 0
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) = 0
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;
	
		SET @ControlID = (SELECT TOP 1 ControlID FROM CmnFormControls WHERE GroupID = @GroupBoxID AND IsDeleted = 0 ORDER BY ControlOrder);
		
		INSERT INTO CmnControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
			IsMandatory, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, IsMobile,
			UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion,
			FkShowActive, VersionCheck, ColumnOrder, ModifiedDate, IsDeleted)
		SELECT CFC.ControlID, RCC.ColumnName, '', '', RCC.AliasName, 26, 7, 1, 0, 0, -1, '', '', 0, 0, '', '', '', 0, 1,
			0, 0, RCC.JoinFkType, RCC.JoinFkTable, RCC.JoinFkColumn, RCC.XAxis, RCC.AdditionalConditions, RCC.FkOrder, RCC.FkDelete, RCC.FkNotActive, RCC.FkVersion, 0, 0, RCC.ColumnOrder, @UTCTime, 0
		FROM CmnFormControls CFC
			JOIN ChartColumnConfig RCC ON RCC.DashboardID = @IN_DashboardID AND RCC.ParentControl = CFC.TableColumn
				AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
			JOIN ChartColumnConfig CCC ON CCC.DashboardID = RCC.DashboardID AND CCC.ColumnName = CFC.TableColumn 
				AND CCC.AliasName = CFC.Name AND ISNULL(CCC.ReferenceID, 0) = ISNULL(RCC.ParentControlID, 0)
				AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		WHERE CFC.GroupID = @GroupBoxID AND CFC.IsDeleted = 0 AND ISNULL(RCC.ParentControlID, 0) <> 0
		ORDER BY CFC.ControlOrder, RCC.ColumnOrder;

		INSERT INTO CmnColumnProperty
		SELECT CC.ColumnID, 'Order Column', ISNULL(CCC.OrderColumn, ''), @UTCTime, 0
		FROM ChartColumnConfig CCC
			JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
			JOIN CmnGroupBoxes GB ON FT.TabID = GB.TabID AND GB.IsDeleted = 0
			JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0 AND CCC.ParentControl = CFC.TableColumn 
			JOIN ChartColumnConfig RCC ON RCC.DashboardID = CCC.DashboardID AND ISNULL(RCC.ReferenceID, 0) = ISNULL(CCC.ParentControlID, 0)
				AND RCC.IsDeleted = 0 AND RCC.NotActive = 0 AND RCC.IsCurrentVersion = 1
			JOIN CmnControlColumns CC ON CC.ControlID = CFC.ControlID AND CC.ColumnName = CCC.ColumnName AND CC.DisplayName = CCC.AliasName
		WHERE CCC.DashboardID = @IN_DashboardID AND ISNULL(CCC.ParentControlID, 0) <> 0 AND ISNULL(CCC.OrderColumn, '') <> ''
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY CCC.ColumnOrder;

		INSERT INTO CmnFormSearchControl (ControlID, FormID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory,
			MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, IsMobile,
			AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, SearchOrder, ModifiedDate, IsDeleted)
		SELECT @ControlID, @FormID, SCC.AliasName, SCC.ColumnName, SCC.ControlType, SCC.DataType, 1, 0, 0, -1, SCC.Event, SCC.ValidationEvent, 1, SCC.DefaultValue, SCC.MaxRange, SCC.FkType, 
			SCC.FkTable, SCC.FkColumn, SCC.FkData, ISNULL(SCC.IsMobile, 0), SCC.AdditionalConditions, ISNULL(SCC.FkOrder, 1), ISNULL(SCC.FkDelete, 1), ISNULL(SCC.FkNotActive, 1), 
			ISNULL(SCC.FkVersion, 1), SCC.SearchOrder, @UTCTime, 0
		FROM ChartSearchColumnConfig SCC
		WHERE SCC.DashboardID = @IN_DashboardID AND SCC.Search = 1
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

		INSERT INTO CmnSearchControlColumns (SearchID, DisplayName, ColumnName, ControlType, DataType, Visibility, Readonly, IsMandatory,
			Maxlength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData,
			AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, ColumnOrder, DependentType, IsDeleted, DateDifference)
		SELECT FSC.SearchID, SCC.Name, SCC.TableColumn, SCC.ControlType, SCC.DataType, SCC.Visibility, SCC.Readonly, SCC.IsMandatory, 
			SCC.Maxlength, SCC.Events, SCC.ValidationEvent, SCC.SelectApplicable, SCC.DefaultValue, SCC.MaxRange, SCC.FkType, SCC.FkTable, SCC.FkColumn, 
			SCC.FkData, SCC.AdditionalConditions, SCC.FkOrder, SCC.FkDelete, SCC.FkNotActive, SCC.FkVersion, 
			SCC.SearchOrder, SCC.DependentType, 0, ISNULL(SCC.DateDifference, NULL)
		FROM ChartDependentColumnConfig SCC
			JOIN ChartSearchColumnConfig SC ON SC.DashboardID = SCC.DashboardID AND SC.Search = 1
				AND SC.IsDeleted = 0 AND SC.NotActive = 0 AND SC.IsCurrentVersion = 1
			JOIN CmnFormSearchControl FSC ON FSC.FormID = @FormID AND FSC.TableColumn = SC.ColumnName
				AND FSC.Name = SC.AliasName AND FSC.IsDeleted = 0
		WHERE SCC.DashboardID = @IN_DashboardID
			AND SCC.IsDeleted = 0 AND SCC.NotActive = 0 AND SCC.IsCurrentVersion = 1
		ORDER BY SCC.SearchOrder;

		INSERT INTO CmnControlProperty 
		SELECT CFC.ControlID, 'ResultType', CM.TypeValues, @UTCTime, 0
		FROM CmnFormControls CFC
			JOIN ChartColumnConfig CCC ON CCC.DashboardID = @IN_DashboardID AND CCC.ColumnName = CFC.TableColumn AND CCC.AliasName = CFC.Name 
				AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CM ON CM.Type = 'Summary Types' AND CM.CodemasterID = CCC.YAxis 
				AND CM.IsDeleted = 0 AND CM.NotActive = 0 AND CM.IsCurrentVersion = 1
		WHERE CFC.GroupID = @GroupBoxID AND CFC.IsDeleted = 0
		ORDER BY CFC.ControlOrder;

		INSERT INTO CmnControlProperty 
		SELECT CFC.ControlID, 'ChartType', CASE WHEN CCC.IsStackedBar = 1 THEN 'stackedColumn' ELSE CM.Description END, @UTCTime, 0
		FROM CmnFormControls CFC
			JOIN ChartColumnConfig CCC ON CCC.DashboardID = @IN_DashboardID AND CCC.ColumnName = CFC.TableColumn AND CCC.AliasName = CFC.Name 
				AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CM ON CM.Type = 'Chart Type' AND CM.CodemasterID = CCC.ChartType
				AND CM.IsDeleted = 0 AND CM.NotActive = 0 AND CM.IsCurrentVersion = 1
		WHERE CFC.GroupID = @GroupBoxID AND CFC.IsDeleted = 0
		ORDER BY CFC.ControlOrder;

		INSERT INTO CmnGeneralProperty VALUES('Form', @FormID, 'Footer', 0, @UTCTime, 0);

		SET @Role = 'Admin'
		SET @HasReadPermission = 1
		SET @IsFavourite = 0
		SET @FavouriteOrder = '0'
		SET @SubAudit = 0
		SET @Audit = 1
		SET @ValidateChecksum = 1
		SET @RoleID = 0
		SET @TabList = ''
		SET @ButtonList = ''
		SET @SubMenuOrder = 0

		SET @RoleID = ISNULL((SELECT CodemasterID FROM CmnCodeMaster WHERE Type = 'Roles' AND TypeValues = @Role), 0);
		SET @ButtonList = '';
		SET @TabList = ISNULL(SUBSTRING((SELECT ',' + CAST(TabID AS VARCHAR(MAX)) FROM CmnFormTabs WHERE FormID = @FormID
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
		SET @ButtonList = ISNULL(SUBSTRING((SELECT ',' + CAST(CodemasterID AS VARCHAR(MAX)) FROM CmnCodeMaster WHERE MenuID = @FormID AND Type = 'Menubutton' AND IsDeleted = 0 AND NotActive = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
		SELECT @MainMenuOrder = MainMenuOrder, @SubMenuOrder = SubMenuOrder FROM CmnFormDetails WHERE FormID = @FormID;

		IF ISNULL(@ExistingFormID, 0) <> 0 AND ISNULL(@ExistingCount, 0) > 0 
		BEGIN			
			INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.RoleID, ISNULL(SUBSTRING((SELECT ',' + CAST(FT.TabID AS VARCHAR(50)) FROM CmnFormTabs FT WHERE FT.FormID = @FormID AND PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + CAST(E.Tabs AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 				
					ISNULL(SUBSTRING((SELECT ',' + CAST(CM.CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster CM WHERE MenuID = @FormID AND CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + CAST(E.Buttons AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					E.MainMenuOrder, E.SubMenuOrder, @FormID, E.HasReadPermission, E.IsFavourite, E.FavouriteOrder, 0, E.Audit, E.ValidateChecksum, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
			FROM #tempRoleList E;
			
			INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.UserID, ISNULL(SUBSTRING((SELECT ',' + CAST(FT.TabID AS VARCHAR(50)) FROM CmnFormTabs FT WHERE FT.FormID = @FormID AND PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + CAST(TU.Tabs AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 				
					ISNULL(SUBSTRING((SELECT ',' + CAST(CM.CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster CM WHERE MenuID = @FormID AND CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + CAST(TU.Buttons AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					TU.MainMenuOrder, TU.SubMenuOrder, @FormID, TU.HasReadPermission, TU.IsFavourite, TU.FavouriteOrder, 0, TU.Audit, TU.ValidateChecksum, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
			FROM CmnUserDetails E 
				JOIN #tempUserList TU ON TU.UserID = E.UserID
			WHERE E.IsDeleted = 0;
		END
		ELSE
		BEGIN
			INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
			, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT @RoleID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
			@FormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
			, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0;

			INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
				FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
			, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
			SELECT E.UserID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
			@FormID, @HasReadPermission, @IsFavourite, @FavouriteOrder, @SubAudit, @Audit, @ValidateChecksum
			, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
			FROM CmnUserDetails E WHERE PATINDEX(CONCAT('%,', CAST(E.RoleID AS VARCHAR(50)), ',%'), CONCAT(',', CAST(@RoleID AS VARCHAR(50)), ',')) > 0;
		END

		INSERT INTO CmnGeneralProperty VALUES ('Form', @FormID, 'Layout Type', @LayoutClass, @UTCTime, 0);

		IF OBJECT_ID('tempdb..#tempUserList') IS NOT NULL
			DROP TABLE #tempUserList

		IF OBJECT_ID('tempdb..#tempRoleList') IS NOT NULL
			DROP TABLE #tempRoleList

		UPDATE MB SET ButtonType = 6,
			ModifiedBy = @IN_UserID, 
			ModifiedDate = @UTCTime,
			ModifiedDateGMT = @GMTTime
		FROM CmnCodeMaster MB 
		WHERE MB.Type = 'Menubutton' AND ISNULL(MB.ButtonType, 0) = 0 AND ModuleID = @ModuleID AND MenuID = @FormID
			AND ISNULL(MB.IsDeleted, 0) = 0 AND ISNULL(MB.NotActive, 0) = 0 AND ISNULL(MB.IsCurrentVersion, 0) = 1;

		IF EXISTS (SELECT 1 FROM DashboardConfiguration DC
						JOIN CmnFormDetails FD ON FD.FormID = DC.FormID AND ISNULL(FD.IsDeleted, 0) = 0
						JOIN CmnFormTabs FT ON FT.FormID = FD.FormID AND FT.IsDeleted = 0
						JOIN CmnGroupBoxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
					 WHERE DC.ReferenceID = @IN_DashboardID AND ISNULL(DC.IsMainPage, 0) = 1 AND ISNULL(DC.IsDeleted, 0) = 0
						AND ISNULL(DC.NotActive, 0) = 0 AND ISNULL(DC.IsCurrentVersion, 0) = 1
						AND EXISTS (SELECT 1 FROM CmnFormControls FCC WHERE FCC.GroupID = GB.GroupID AND ISNULL(FCC.IsMyDashboard, 0) = 1 AND ISNULL(FCC.IsDeleted, 0) = 0))
		BEGIN
			UPDATE CmnFormDetails SET IsMainPage = 1 WHERE FormID = @FormID AND IsDeleted = 0;
		END;

		UPDATE DashboardConfiguration SET Status = 4, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_DashboardID;    

		SELECT @ModuleMenuCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND IsDeleted = 0;		
		SELECT @FormID, @ModuleMenuCount;

		COMMIT TRANSACTION tran_DashboardPublish

	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_DashboardPublish
		
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END;
GO
PRINT N'Creating [dbo].[spDashboardReportData]'
GO

CREATE PROCEDURE [dbo].[spDashboardReportData] (	
	@IN_FormID INT,
	@IN_UserID INT
)
AS
BEGIN
	SET NOCOUNT ON
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000), @ErrorSeverity NVARCHAR(50), @ErrorState NVARCHAR(50),
			@ReportTitle NVARCHAR(500), @BranchID INT, @PrintedBy NVARCHAR(200);

		SELECT @ReportTitle = ISNULL(DC.Name, '') + ' Report' FROM DashboardConfiguration DC WHERE DC.FormID = @IN_FormID;

		SELECT  @PrintedBy = COALESCE(ED.Nickname, UD.UserName, ''), 
				@BranchID = COALESCE(ED.CompanyID, UD.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON ED.ReferenceID = UD.TypeID AND UD.Type = 1
		WHERE UD.UserID = @IN_UserID;

		IF ISNULL(@BranchID, 0) = 0
		BEGIN
			SET @BranchID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ISNULL(ParentCompanyID, 0) = 0
									AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), 0);
		END		
		
		SELECT @ReportTitle AS ReportTitle,
			@PrintedBy AS PrintedBy,
			FORMAT(GETDATE(), 'dd-MMM-yyyy') AS PrintedDate,			
			ISNULL(FUH.OriginalFileName, '') AS BranchHeaderFileName,	
			ISNULL(MD.Header, '') AS BranchHeaderID,
			ISNULL(FUF.OriginalFileName, '') AS BranchFooterFileName,
			ISNULL(MD.Footer, '') AS BranchFooterID,
			ISNULL(MD.Name, '') AS BranchName,
			ISNULL(FUL.OriginalFileName, '') AS LogoFileName,
			ISNULL(MD.Logo, '') AS LogoId
		FROM MstCompanyDetails MD (NOLOCK)
			LEFT JOIN CmnFileUpload FUH (NOLOCK) ON FUH.ReferenceID = ISNULL(MD.Header, 0) AND FUH.IsDeleted = 0
			LEFT JOIN CmnFileUpload FUF (NOLOCK) ON FUF.ReferenceID = ISNULL(MD.Footer, 0) AND FUF.IsDeleted = 0
			LEFT JOIN CmnFileUpload FUL (NOLOCK) ON FUL.ReferenceID = ISNULL(MD.Logo, 0) AND FUL.IsDeleted = 0
		WHERE MD.ReferenceID = @BranchID;
		
		
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spDashboardValidate]'
GO

CREATE PROCEDURE [dbo].[spDashboardValidate](
	@IN_Event VARCHAR(10), 
	@IN_DashboardID INT,
	@IN_Query NVARCHAR(MAX), 
	@IN_FormID INT, 
	@IN_UserID INT
)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  DECLARE @UTCTime DATETIME = GETUTCDATE(),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@RQuery NVARCHAR(MAX) = '',
			@ReportQuery NVARCHAR(MAX) = '',
			@Query NVARCHAR(MAX) = '',
			@SourceID INT = 0,
			@StoredProcedure VARCHAR(100) = '',
			@ViewName VARCHAR(100) = '',
			@TableName VARCHAR(100) = '',
			@checkQuery NVARCHAR(MAX) = '',
			@DBConnection INT = 0
			        
		IF @IN_Event = 'Update'
		BEGIN
			UPDATE DashboardConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_DashboardID;
		END
		ELSE
		BEGIN
			SET @RQuery = '';
      
			IF @IN_Query <> ''
				SET @RQuery = @IN_Query;
			ELSE
			BEGIN
				SELECT @SourceID = Source, @StoredProcedure = SpName, @ViewName = ViewName, @TableName = TableName, @Query = Query, @DBConnection = ISNULL(DBConnection, 0)
				FROM DashboardConfiguration WHERE ReferenceID = @IN_DashboardID;
  
				IF @SourceID = 1
				  SET @RQuery = 'EXEC '+ @StoredProcedure + ' 1, ''''';
				ELSE IF @SourceID = 2
				  SET @RQuery = 'SELECT * FROM '+ @ViewName;
				ELSE IF @SourceID = 3
				  SET @RQuery = 'SELECT * FROM '+ @TableName;
				ELSE IF @SourceID = 4
				  SET @RQuery = @Query;	
				  
				IF CHARINDEX(' insert ', LOWER(@Query)) > 0 OR CHARINDEX(' update', LOWER(@Query)) > 0 OR CHARINDEX(' delete ', LOWER(@Query)) > 0 OR CHARINDEX(' drop ', LOWER(@Query)) > 0 OR 
					  CHARINDEX(' truncate ', LOWER(@Query)) > 0 OR CHARINDEX(' alter ', LOWER(@Query)) > 0
				BEGIN
					  SET @checkQuery = 'DML';
				END		
			END

			SELECT @SourceID = ISNULL(ReportSource, 0), @StoredProcedure = ISNULL(ReportSpName, ''), @ViewName = ISNULL(ReportViewName, ''), @TableName = ISNULL(ReportTableName, '')
			FROM DashboardConfiguration WHERE ReferenceID = @IN_DashboardID;

			IF @IN_Query = '' AND @checkQuery = '' AND @SourceID  <> 0
			BEGIN
				IF @SourceID = 1
				  SET @ReportQuery = 'EXEC '+ @StoredProcedure + ' 1, ''''';
				ELSE IF @SourceID = 2
				  SET @ReportQuery = 'SELECT * FROM '+ @ViewName;
				ELSE IF @SourceID = 3
				  SET @ReportQuery = 'SELECT * FROM '+ @TableName;
			END

			SELECT @checkQuery;

			SELECT @RQuery AS Query, @ReportQuery AS ReportQuery, @DBConnection AS DBConnection;
			
		END
		  
	END TRY
	BEGIN CATCH

		--EXEC [Fn_ErrorFetch] @@SPID

		--INSERT INTO tbl_StoredProcedure_Error(MenuID, App_User, SQL_User, Server_Name, [Procedure_Name],
		--	Error_Code, Line_Number, [Error_Message], [Error_State], Logged_Date, [INPUT_PARAMS]) 
		--SELECT @IN_FormID, @IN_UserID, USER_NAME(), @@SERVERNAME, ERROR_PROCEDURE(), ERROR_NUMBER(),
		--	ERROR_LINE(), ERROR_MESSAGE(), ERROR_STATE(), GETUTCDATE(), (SELECT PIN FROM TBL_ERRORFETCH);

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END;
GO
PRINT N'Creating [dbo].[spCmnFormUpdatePostSave]'
GO

CREATE PROCEDURE [dbo].[spCmnFormUpdatePostSave](
	@IN_UserID INT,
    @IN_ReferenceID BIGINT,
    @IN_DmlType VARCHAR(1000)
)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
		DECLARE @FormID INT = @IN_ReferenceID,
			@MainMenu1 INT,
			@MainMenuOrder INT,
			@SubMenuOrder INT,
			@FormIcon VARCHAR(200),
			@IsAuditTrail BIT,
			@IsMobileMenu BIT,
			@IsOfflineSave BIT,	
			@IsParentMenu BIT,
			@IsMainMenu BIT,
			@ParentMenuName VARCHAR(100),
			@ModuleID INT,
			@IsFooter BIT,
			@ErrorMessage NVARCHAR(2000), 
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@UTCTime DATETIME = GETUTCDATE(),
			@ParentMenuFormID INT = 0;

		SET @ParentMenuFormID =  ISNULL((SELECT TOP 1 MM.MainMenu1 FROM CmnFormDetails MM WHERE MM.FormID = @FormID), 0);

		IF (@ParentMenuFormID = 0)
		BEGIN
			SET @ParentMenuFormID = @FormID;
		END

		SELECT 
			@MainMenuOrder = ISNULL((SELECT TOP 1 MM.MainMenuOrder FROM CmnFormDetails MM WHERE MM.FormID = @ParentMenuFormID), 999),
			@SubMenuOrder = ISNULL(CFD.SubMenuOrder, 0),
			@IsParentMenu = CASE WHEN ISNULL(CFD.MainMenu1, 0) <> 0 THEN 0 ELSE 1 END,
			@IsMainMenu = CASE WHEN ISNULL(FC.ReferenceID, 0) <> 0 THEN 0 ELSE 1 END,
			@ParentMenuName = CASE WHEN ISNULL(CFD.MainMenu1, 0) <> 0
									THEN ISNULL(FC.ParentMenu, '')
									ELSE ISNULL(CFD.Name, '') END,
			@ModuleID = ISNULL(CFD.ModuleID, 0),
			@FormIcon = ISNULL(CFD.FormIcon, ''),
			@IsAuditTrail = ISNULL(CFD.AuditTrail, 0),
			@IsMobileMenu = ISNULL(CFD.IsMobileMenu, 0),
			@IsOfflineSave = ISNULL(CFD.IsOfflineSave, 0),
			@IsFooter = ISNULL(CFD.IsFooter, 0)
		FROM CmnFormDetails CFD
			LEFT JOIN FormConfiguration FC ON CFD.FormID = FC.FormID AND FC.IsDeleted = 0 AND FC.IsCurrentVersion = 1
		WHERE CFD.FormID = @FormID; 

		IF(@IsParentMenu <> 1)
		BEGIN
			UPDATE FormConfiguration
			SET MenuOrder = @SubMenuOrder,
				ParentMenuOrder = @MainMenuOrder, 				
				FormIcon = @FormIcon, 
				AuditTrail = @IsAuditTrail,
				Footer = @IsFooter,
				IsMobileMenu = @IsMobileMenu, 
				IsOfflineSave = @IsOfflineSave,
				ModifiedBy = @IN_UserID,
				ModifiedDate = @UTCTime,
				ModifiedDateGMT = @GMTTime
			WHERE FormID = @FormID AND IsDeleted = 0 AND IsCurrentVersion = 1;

			UPDATE CmnFormDetails
			SET MainMenuOrder = @MainMenuOrder,
				SubMenuOrder = @SubMenuOrder,
				ModifiedBy = @IN_UserID,
				ModifiedDate = @UTCTime,
				ModifiedDateGMT = @GMTTime
			WHERE FormID = @FormID;
			
			UPDATE CmnFormDetails
			SET MainMenuOrder = @MainMenuOrder
			WHERE MainMenu1 = @ParentMenuFormID;

			UPDATE FormConfiguration
			SET ParentMenuOrder = @MainMenuOrder
			WHERE FormID = @FormID;
		END
		ELSE
		BEGIN
			IF(@IsMainMenu = 1)
			BEGIN
				UPDATE CmnFormDetails
				SET MainMenuOrder = @MainMenuOrder,
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @GMTTime
				WHERE MainMenu1 = @FormID;

				UPDATE FormConfiguration
				SET ParentMenuOrder = @MainMenuOrder,
					FormIcon = @FormIcon, 
					AuditTrail = @IsAuditTrail,
					Footer = @IsFooter,
					IsMobileMenu = @IsMobileMenu, 
					IsOfflineSave = @IsOfflineSave,
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @GMTTime
				WHERE ParentMenu = @ParentMenuName AND ModuleID = @ModuleID AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END 
			ELSE
			BEGIN
				UPDATE FormConfiguration
				SET MenuOrder = @MainMenuOrder,
					FormIcon = @FormIcon, 
					AuditTrail = @IsAuditTrail,
					Footer = @IsFooter,
					IsMobileMenu = @IsMobileMenu, 
					IsOfflineSave = @IsOfflineSave,
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @GMTTime
				WHERE FormID = @FormID AND IsDeleted = 0 AND IsCurrentVersion = 1;
			END
		END

	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spCreateTablesForFormConfig]'
GO

CREATE PROCEDURE [dbo].[spCreateTablesForFormConfig](
	@IN_FormName VARCHAR(200), 
	@IN_ModuleName VARCHAR(200), 
	@IN_UserID INT
)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY		
	
		BEGIN TRANSACTION tran_CreateTablesForFormConfig;
	
		DECLARE @GMTTime DATETIME,
				@UTCTime DATETIME = GETUTCDATE(),
				@ModuleID INT = 0,
				@FormConfigID INT = 0,
				@FormID INT = 0,
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@FormTableName NVARCHAR(255),
				@FormKeyColumn NVARCHAR(255),
				@TableName NVARCHAR(255),
				@KeyColumn NVARCHAR(255),
				@TabTableName NVARCHAR(255),
				@TabKeyColumn NVARCHAR(255),
				@ParentTable NVARCHAR(255),
				@ParentKey NVARCHAR(255),					
				@DataType VARCHAR(50),
				@CreateTableQuery NVARCHAR(MAX),
				@AlterTableQuery NVARCHAR(MAX),
				@PrimaryKey VARCHAR(100),
				@TableCount INT,
				@ColumnCount INT,
				@TabID INT,
				@KeyPrimaryCount INT,
				@RowCount INT, 
				@RowIndex INT
				;

		IF (@IN_UserID = 0)
		BEGIN
			SET @IN_UserID = ISNULL((SELECT UserID FROM CmnUserDetails WHERE Username = 'Revol'), 1);
		END
		SET @GMTTime = dbo.fn_GMTCalculation(@IN_UserID);
		
		SELECT @FormConfigID = ISNULL(ReferenceID, 0), @FormTableName = ISNULL(TableName, ''), @FormKeyColumn = ISNULL(KeyColumn, 0),
				@FormID = ISNULL(FormID, 0)
		FROM FormConfiguration
		WHERE Name = @IN_FormName AND ModuleID = (CASE WHEN @ModuleID > 0 THEN @ModuleID ELSE ModuleID END)
			AND IsDeleted = 0 AND NotActive = 0;
		
		IF (@FormConfigID = 0)
		BEGIN
			RAISERROR ('Form not found', 16, 1);
			RETURN;
		END

		-- Create Table for Form Config
		SELECT @TableCount = COUNT(1) FROM sys.objects WHERE TYPE IN (N'U') AND Name = @FormTableName;
		IF @TableCount = 0
		BEGIN    
			SET @CreateTableQuery = 'CREATE TABLE ' + @FormTableName + '(' + @FormKeyColumn + ' BIGINT IDENTITY(1,1) NOT NULL, CompanyID INT NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL,' + 
									'ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,' +
									'NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0,' +
									'DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1,' +
									'[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_' + @FormTableName + '] PRIMARY KEY CLUSTERED ('+ @FormKeyColumn + ' ASC))';
			EXEC (@CreateTableQuery);
		END 
		ELSE
		BEGIN
			SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FormTableName AND COLUMN_NAME = @FormKeyColumn;
			IF @ColumnCount = 0
			BEGIN
				SET @AlterTableQuery = ('ALTER TABLE ' + @FormTableName + ' ADD ' + @FormKeyColumn + ' INT NOT NULL');
				EXEC (@AlterTableQuery);
			END
		END
		
		IF OBJECT_ID('tempdb..#tempTabTableList') IS NOT NULL
			DROP TABLE #tempTabTableList;
		CREATE TABLE #tempTabTableList (RecID INT IDENTITY(1,1) NOT NULL, TableName NVARCHAR(255) NOT NULL, KeyColumn NVARCHAR(255) NOT NULL);
		
		-- Create Tables for Tab Config
		INSERT INTO #tempTabTableList (TableName, KeyColumn)
		SELECT ISNULL(TableName, ''), ISNULL(KeyColumn, '') FROM FormTabConfig 
		WHERE FormID = @FormConfigID AND ISNULL(TableName, '') <> '' AND IsDeleted = 0 AND NotActive = 0;
				
		SELECT @RowCount = COUNT(1) FROM #tempTabTableList;
		SET @RowIndex = 0;
		WHILE @RowIndex < @RowCount
		BEGIN
			SET @RowIndex = @RowIndex + 1;
			SELECT @TableName = ISNULL(TableName, ''), @KeyColumn = ISNULL(KeyColumn, 0)
			FROM #tempTabTableList WHERE RecID = @RowIndex;
			
			SELECT @TableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @TableName;
			IF (@TableName = @FormTableName AND @KeyColumn <> @FormKeyColumn AND @KeyColumn <> 'ReferenceID')
			BEGIN
				SET @KeyColumn = @FormKeyColumn;
			END
			SELECT @DataType = DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FormTableName AND COLUMN_NAME = @FormKeyColumn;
			
			IF (@TableCount = 0)
			BEGIN
				IF @KeyColumn = 'ReferenceID' 
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE ' + @TableName + '(' + @KeyColumn + ' BIGINT IDENTITY(1,1) NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT PK_' + @TableName + ' PRIMARY KEY (' + @KeyColumn + ' ASC)'
									+ ')';
				END
				ELSE
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE ' + @TableName + '(ReferenceID BIGINT IDENTITY(1,1) NOT NULL, ' + @KeyColumn + ' ' + @DataType + ' NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NNotActiveReason VARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, NDeleteReason VARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT PK_' + @TableName + ' PRIMARY KEY (ReferenceID ASC)'
									+ ')';
				END
				EXEC (@CreateTableQuery);
			END
			ELSE IF (@TableName <> @FormTableName)
			BEGIN
				-- SET @ExistingKeyColumn = ISNULL((SELECT TOP 1 KeyColumn FROM FormGroupboxConfig WHERE FormID = @FormConfigID AND ReferenceID = @IN_ReferenceID AND IsDeleted = 0), '');
				SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @KeyColumn;
				IF @ColumnCount = 0
				BEGIN
					SET @AlterTableQuery = 'ALTER TABLE ' + @TableName + ' ADD ' + @KeyColumn + '  ' + @DataType + ' NULL;'
					EXEC (@AlterTableQuery);
				END
				/*ELSE IF (@ExistingKeyColumn <> '' AND @ColumnCount = 0)
				BEGIN
					SELECT @KeyPrimaryCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @KeyColumn;
					IF @KeyPrimaryCount > 0
					BEGIN 
						SET @AlterTableQuery = ('ALTER TABLE ' + @TableName + ' DROP COLUMN ' + @KeyColumn);
						EXEC (@AlterTableQuery);
					END

					SET @AlterTableQuery = ('EXEC sp_rename ''' + @TableName + '.' + @ExistingKeyColumn + ''', ''' + @KeyColumn + ''', ''COLUMN''');
					EXEC (@AlterTableQuery);
				END*/
			END
		END	--WHILE
		IF OBJECT_ID('tempdb..#tempTabTableList') IS NOT NULL
			DROP TABLE #tempTabTableList;	
		
		-- Create Tables for Group Config
		IF OBJECT_ID('tempdb..#tempGroupTableList') IS NOT NULL
			DROP TABLE #tempGroupTableList;		
		CREATE TABLE #tempGroupTableList (RecID INT IDENTITY(1,1) NOT NULL, TabID INT NOT NULL, TableName NVARCHAR(255) NOT NULL, KeyColumn NVARCHAR(255) NOT NULL);
		
		INSERT INTO #tempGroupTableList (TabID, TableName, KeyColumn)
		SELECT ISNULL(TabID, 0), ISNULL(TableName, ''), ISNULL(KeyColumn, '') FROM FormGroupboxConfig 
		WHERE FormID = @FormConfigID AND ISNULL(TableName, '') <> '' AND IsDeleted = 0 AND NotActive = 0;
		SELECT @RowCount = COUNT(1) FROM #tempGroupTableList;
		SET @RowIndex = 0;
		WHILE @RowIndex < @RowCount
		BEGIN
			SET @RowIndex = @RowIndex + 1;
			SELECT @TabID = ISNULL(TabID, 0), @TableName = ISNULL(TableName, ''), @KeyColumn = ISNULL(KeyColumn, 0)
			FROM #tempGroupTableList WHERE RecID = @RowIndex;
			
			SELECT TOP 1 @TabTableName = TableName, @TabKeyColumn = KeyColumn FROM FormTabConfig 
			WHERE Name = @TableName AND FormID = @FormConfigID AND IsDeleted = 0;
			
			SELECT @TableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @TableName;
			
			SET @ParentTable = '';
			SET @ParentKey = '';
			IF ISNULL(@TabTableName, '') <> ''
			BEGIN
				SET @ParentTable = @TabTableName;
			END
			ELSE 
			BEGIN
				SET @ParentTable = @FormTableName;
			END
			IF ISNULL(@ParentTable, '') <> ''
			BEGIN
			  SELECT @ParentKey = Col.Column_Name FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
									AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @ParentTable
			END

			IF @TableName = @ParentTable AND @KeyColumn <> @ParentKey AND @KeyColumn <> 'ReferenceID'
			BEGIN
				SET @KeyColumn = @ParentKey;
			END

			SELECT @DataType = DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @ParentTable AND COLUMN_NAME = @ParentKey;
			
			IF @TableCount = 0
			BEGIN
				IF @KeyColumn = 'ReferenceID'
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE ' + @TableName + '(' + @KeyColumn + ' BIGINT IDENTITY(1,1) NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_' + @TableName + '] PRIMARY KEY (' + @KeyColumn + ' ASC)'
									+ ')';
				END
				ELSE
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE ' + @TableName + '(ReferenceID BIGINT IDENTITY(1,1) NOT NULL, ' + @KeyColumn + ' ' + @DataType + ' NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_' + @TableName + '] PRIMARY KEY (ReferenceID ASC)'
									+ ')';
				END
				EXEC (@CreateTableQuery);
			END
			BEGIN
				SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @KeyColumn;
				IF @ColumnCount = 0
				BEGIN
					SET @AlterTableQuery = 'ALTER TABLE ' + @TableName + ' ADD ' + @KeyColumn + '  ' + @DataType + ' NULL;'
					EXEC (@AlterTableQuery);
				END
			END
		END	-- WHILE
		
		IF OBJECT_ID('tempdb..#tempGroupTableList') IS NOT NULL
			DROP TABLE #tempGroupTableList;
			
		-- Update Table for Buttons
		IF OBJECT_ID('tempdb..#tempButtonTableList') IS NOT NULL
			DROP TABLE #tempButtonTableList;
		CREATE TABLE #tempButtonTableList (RecID INT IDENTITY(1,1) NOT NULL, KeyColumn NVARCHAR(255) NOT NULL);
		
		INSERT INTO #tempButtonTableList (KeyColumn)
		SELECT ISNULL(ButtonKeyColumn, '') FROM FormButtonConfig 
		WHERE FormID = @FormConfigID AND ISNULL(ButtonKeyColumn, '') <> '' AND IsDeleted = 0 AND NotActive = 0;
		SELECT @RowCount = COUNT(1) FROM #tempButtonTableList;
		SET @RowIndex = 0;
		WHILE @RowIndex < @RowCount
		BEGIN
			SET @RowIndex = @RowIndex + 1;
			SELECT @KeyColumn = ISNULL(KeyColumn, '') FROM #tempButtonTableList WHERE RecID = @RowIndex;
			SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FormTableName AND COLUMN_NAME = @KeyColumn;
			IF @ColumnCount = 0
			BEGIN
				SET @AlterTableQuery = ('ALTER TABLE ' + @FormTableName + ' ADD ' + @KeyColumn + ' INT NOT NULL DEFAULT 0');
				EXEC (@AlterTableQuery);
			END
		END
			
		IF OBJECT_ID('tempdb..#tempButtonTableList') IS NOT NULL
			DROP TABLE #tempButtonTableList;
		
		SELECT @FormConfigID, @FormID;

		COMMIT TRANSACTION tran_CreateTablesForFormConfig;

	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_CreateTablesForFormConfig;
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE();
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spFormAdditionalProperties]'
GO

CREATE PROCEDURE [dbo].[spFormAdditionalProperties] (@IN_Type VARCHAR(10), @IN_ControlID BIGINT, @IN_ConfigID BIGINT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50)

		IF @IN_Type = 'Control'
		BEGIN
			SELECT FAP.ControlID, FAP.ReferenceID AS PropertyID, FAP.PropertyName, FAP.PropertyValue
			FROM FormAdditionalPropertyConfig FAP
			WHERE FAP.FormID = @IN_ConfigID AND FAP.ControlID = @IN_ControlID AND FAP.Type = 'Control'
				AND FAP.IsDeleted = 0 AND FAP.NotActive = 0 AND FAP.IsCurrentVersion = 1;

		END
		ELSE IF @IN_Type = 'Column'
		BEGIN
			SELECT FAP.ControlID, FAP.ReferenceID AS PropertyID, FAP.PropertyName, FAP.PropertyValue
			FROM FormAdditionalPropertyConfig FAP
			WHERE FAP.FormID = @IN_ConfigID AND FAP.ControlID = @IN_ControlID AND FAP.Type = 'Column'
				AND FAP.IsDeleted = 0 AND FAP.NotActive = 0 AND FAP.IsCurrentVersion = 1;

		END

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormClearControlProcess]'
GO

CREATE PROCEDURE [dbo].[spFormClearControlProcess] (@IN_FormConfigID BIGINT, @IN_ID BIGINT, @IN_Type VARCHAR(100), @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_ClearControlProcess

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50)

			IF @IN_Type = 'FormControls'
				DELETE FROM FormControlsProcess WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'ControlColumns'
				DELETE FROM FormControlColumnsProcess WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'GridControlColumns'
				DELETE FROM FormGridControlColumnsProcess WHERE FormID = @IN_FormConfigID AND GridColumnID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'Filters'
				DELETE FROM FormSearchControlsProcess WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'FilterColumns'
				DELETE FROM FormSearchColumnsProcess WHERE FormID = @IN_FormConfigID AND SearchID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'DashboardDependent'
				DELETE FROM ChartDependentColumnProcess WHERE DashboardID = @IN_FormConfigID AND ControlID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'ReportDependent'
				DELETE FROM RepDependentColumnProcess WHERE ReportID = @IN_FormConfigID AND ControlID = @IN_ID AND UserID = @IN_UserID;

		COMMIT TRANSACTION tran_ClearControlProcess
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ClearControlProcess

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormConfigDataSources]'
GO

CREATE PROCEDURE [dbo].[spFormConfigDataSources] (@IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50)

		SELECT CT.CodemasterID AS ControlTypeID, ISNULL(CT.TypeValues, '') AS ControlType, 
			ISNULL(CT.Description, '') AS ControlObject, ISNULL(CT.ImagePath, '') ControlIcon
		FROM CmnCodeMaster CT
		WHERE CT.Type = 'Control Type' AND ISNULL(CT.Description, '') <> ''
			AND ISNULL(CT.IsDeleted, 0) = 0 AND ISNULL(CT.NotActive, 0) = 0 AND ISNULL(CT.IsCurrentVersion, 1) = 1
		ORDER BY CT.OrderBy;

		SELECT CT.CodemasterID AS ID, ISNULL(CT.TypeValues, '') AS Text
		FROM CmnCodeMaster CT
		WHERE CT.Type = 'Data Type'
			AND ISNULL(CT.IsDeleted, 0) = 0 AND ISNULL(CT.NotActive, 0) = 0 AND ISNULL(CT.IsCurrentVersion, 1) = 1
		ORDER BY CT.OrderBy;

		SELECT CT.CodemasterID AS ID, ISNULL(CT.TypeValues, '') AS Text
		FROM CmnCodeMaster CT
		WHERE CT.Type = 'Order Type'
			AND ISNULL(CT.IsDeleted, 0) = 0 AND ISNULL(CT.NotActive, 0) = 0 AND ISNULL(CT.IsCurrentVersion, 1) = 1
		ORDER BY CT.OrderBy;

		SELECT ECD.ReferenceID AS EventID, ECD.EventTypeID, ECD.EventName, ECD.Description, ECD.EventDetails, ECD.ApplicableControls
		FROM FormEventConfigurationDetails ECD
		WHERE ECD.EventTypeID = 1 AND ECD.IsDeleted = 0 AND ECD.NotActive = 0 AND ECD.IsCurrentVersion = 1;

		SELECT ECD.ReferenceID AS EventID, ECD.EventTypeID, ECD.EventName, ECD.Description, ECD.EventDetails, ECD.ApplicableControls
		FROM FormEventConfigurationDetails ECD
		WHERE ECD.EventTypeID = 2 AND ECD.IsDeleted = 0 AND ECD.NotActive = 0 AND ECD.IsCurrentVersion = 1;

		SELECT ECD.ReferenceID AS EventID, ECD.EventTypeID, ECD.EventName, ECD.Description, ECD.EventDetails, ECD.ApplicableControls
		FROM FormEventConfigurationDetails ECD
		WHERE ECD.EventTypeID = 3 AND ECD.IsDeleted = 0 AND ECD.NotActive = 0 AND ECD.IsCurrentVersion = 1;

		SELECT CT.CodemasterID AS ID, ISNULL(CT.TypeValues, '') AS Text
		FROM CmnCodeMaster CT
		WHERE CT.Type = 'Languages'
			AND ISNULL(CT.IsDeleted, 0) = 0 AND ISNULL(CT.NotActive, 0) = 0 AND ISNULL(CT.IsCurrentVersion, 1) = 1
		ORDER BY CT.OrderBy;

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormControlProcessEntry]'
GO

CREATE PROCEDURE [dbo].[spFormControlProcessEntry] (@IN_UserID INT, @IN_Type VARCHAR(100), @IN_FormID BIGINT, @IN_TabID BIGINT, @IN_GroupID BIGINT, @IN_ControlID BIGINT, @IN_ColumnID BIGINT,
	@IN_Name NVARCHAR(100), @IN_TableColumn VARCHAR(255), @IN_ColumnName1 VARCHAR(255), @IN_ColumnName2 VARCHAR(255), @IN_ControlType INT, @IN_DataType INT, 
	@IN_IsMandatory BIT, @IN_Visibility BIT, @IN_Readonly BIT, @IN_IsMobile BIT, @IN_IsWizard BIT,
	@IN_DataBaseDecimalLength INT, @IN_DecimalLength INT, @IN_MaxLength INT, @IN_UniqueGroup VARCHAR(100), @IN_IsEncrypt BIT, @IN_VersionCheck BIT, @IN_IsIdentity BIT, @IN_IsDmlControl BIT, @IN_IsReturnFill BIT,
	@IN_IsNoAdd BIT, @IN_IsNoUpdate BIT, @IN_FkType INT, @IN_FkTable VARCHAR(255), @IN_FkColumn VARCHAR(255), @IN_FkData VARCHAR(255), @IN_FkData1 VARCHAR(255), @IN_FkData2 VARCHAR(255),
	@IN_AdditionalConditions NVARCHAR(1000), @IN_FkOrder INT, @IN_FkDelete BIT, @IN_FkNotActive BIT, @IN_FkVersion BIT,
	@IN_FkShowActive BIT, @IN_DefaultValue NVARCHAR(2000), @IN_MaxRange NVARCHAR(2000), @IN_IsUpload BIT, @IN_IsDownload BIT, @IN_IsView BIT, @IN_IsDelete BIT, @IN_SelectApplicable BIT, @IN_SearchApplicable BIT, @IN_Events NVARCHAR(MAX),
	@IN_ValidationEvent NVARCHAR(MAX), @IN_FillEvent NVARCHAR(MAX), @IN_ControlEventType INT, @IN_ValidationEventType INT, @IN_FillEventType INT,
	@IN_AttachmentPath NVARCHAR(255), @IN_ControlOrder INT, @IN_DependentFlag BIT, @IN_ButtonID VARCHAR(100), @IN_IsDefaultControl BIT, @IN_IsSelectAll BIT, 
	@IN_IsGridDataSource BIT, @IN_ColumnWidth VARCHAR(255), @IN_DataTreeCondition VARCHAR(1000), @IN_IsUTC BIT, @IN_IsCurrency BIT, @IN_CurrencyColumn VARCHAR(100), @IN_IsIndex BIT,
	@IN_IsPrimary BIT, @IN_IsFixed BIT, @IN_FilterConditions NVARCHAR(1000), @IN_GridHeader VARCHAR(500), @IN_GridType BIT, @IN_OrderBy VARCHAR(10), 
	@IN_OrderByColumn VARCHAR(100), @IN_PageSize INT, @IN_DependentType INT, @IN_ApplicableProcess VARCHAR(1000), @IN_GridParentControl VARCHAR(100),
	@IN_ProcessType VARCHAR(15), @IN_DateFilterType INT, @IN_ColumnCreation BIT, @IN_DataVariable BIT, @IN_IsAutoGenerate BIT, @IN_DateDifference NVARCHAR(100), 
	@IN_Description NVARCHAR(MAX), @IN_AttachmentMaxSize INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_FormControlProcessEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@CompanyID INT = 0,
					@ParentColumn NVARCHAR(MAX) = '',
					@PropCount INT = 0,
					@GridControlID BIGINT = 0,
					@UTCCount INT = 0, 
					@LengthCount INT = 0,
					@CurrencyCount INT = 0,
					@CurrencyColumnCount INT = 0,
					@UploadCount INT = 0,
					@DownloadCount INT = 0,
					@ViewCount INT = 0,
					@DeleteCount INT = 0,
					@GridCount INT = 0, 
					@PrimaryCount INT = 0,
					@FixedCount INT = 0,
					@GridPropCount INT = 0,
					@OrderByCount INT = 0,
					@OrderByColumnCount INT = 0,
					@DBLengthCount INT = 0

			SET @CompanyID = ISNULL((SELECT CompanyID FROM FormConfiguration WHERE ReferenceID = @IN_FormID), 0);
			
			IF ISNULL(@IN_DateDifference, '') = ''
				SET @IN_DateDifference = NULL;

			IF @IN_Type = 'FormControls'
			BEGIN
				INSERT INTO FormControlsProcess (UserID, FormID, TabID, GroupID, ColumnID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					DataBaseDecimalLength, DecimalLength, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
					IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, DataTreeCondition, IsUTC, IsCurrency, CurrencyColumn, IsIndex,
					IsUpload, IsDownload, IsView, IsDelete, IsFixed, FilterConditions, ColumnCreation, DataVariable, IsAutoGenerate, IsSelectAll, DateDifference, Description, AttachmentMaxSize)
				VALUES (@IN_UserID, @IN_FormID, @IN_TabID, @IN_GroupID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory,
					@IN_IsMobile, @IN_IsWizard, @IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, 0, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_IsDmlControl,
					@IN_IsEncrypt, @IN_IsReturnFill, @IN_IsNoAdd, @IN_IsNoUpdate, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_FkData1, @IN_FkData2, @IN_AdditionalConditions, @IN_FillEvent, @IN_ControlEventType, @IN_ValidationEventType, @IN_FillEventType,
					@IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, @IN_ControlOrder, @IN_DependentFlag, @IN_ButtonID, @IN_IsDefaultControl, @IN_DataTreeCondition, @IN_IsUTC, @IN_IsCurrency, 
					@IN_CurrencyColumn, @IN_IsIndex, @IN_IsUpload, @IN_IsDownload, @IN_IsView, @IN_IsDelete, @IN_IsFixed, @IN_FilterConditions, @IN_ColumnCreation, 
					@IN_DataVariable, @IN_IsAutoGenerate, @IN_IsSelectAll, @IN_DateDifference, @IN_Description, @IN_AttachmentMaxSize);

				IF @IN_ControlType = 19 AND @IN_IsDefaultControl = 0
				BEGIN
					SELECT @GridControlID = ReferenceID FROM FormControlConfig WHERE Name = @IN_Name AND TableColumn = @IN_TableColumn AND FormID = @IN_FormID AND GroupID = @IN_GroupID AND IsDeleted = 0;

					IF ISNULL(@GridControlID, '') <> ''
					BEGIN
						SELECT @ParentColumn = FC.AdditionalConditions 
						FROM FormControlConfig FC
						--	JOIN FormGroupboxConfig GB ON GB.ReferenceID = FC.GroupID AND GB.DefaultGroupbox = 0
						WHERE FC.FormID = @IN_FormID AND FC.ReferenceID = @GridControlID AND FC.IsDeleted = 0;
 
						IF @ParentColumn <> ''
						BEGIN
							SELECT @PropCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @GridControlID AND PropertyName = 'Fk Parent Column' AND Type = 'Control';
							IF @PropCount > 0
							BEGIN
								UPDATE FormControlPropertyConfig SET PropertyValue = @ParentColumn WHERE FormID = @IN_FormID AND ControlID = @GridControlID AND PropertyName = 'Fk Parent Column' AND Type = 'Control';
							END
							ELSE
							BEGIN
								INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
								VALUES (@IN_FormID, @GridControlID, 'Control', 'Fk Parent Column', @ParentColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
							END
						END
					END
				END

				IF @IN_DataType = 5 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @UTCCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'UTC' AND Type = 'Control' AND IsDeleted = 0;

					IF @UTCCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Control', 'UTC', @IN_IsUTC, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsUTC WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'UTC' AND Type = 'Control' AND IsDeleted = 0; 
					END
				END

				IF @IN_DataType = 8 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @LengthCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Length' AND Type = 'Control' AND IsDeleted = 0;

					IF @LengthCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Control', 'Decimal Length', @IN_DecimalLength, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_DecimalLength WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Length' AND Type = 'Control' AND IsDeleted = 0; 
					END

					SELECT @DBLengthCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'DataBase Decimal Length' AND Type = 'Control' AND IsDeleted = 0;

					IF @DBLengthCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Control', 'DataBase Decimal Length', @IN_DataBaseDecimalLength, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_DataBaseDecimalLength WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'DataBase Decimal Length' AND Type = 'Control' AND IsDeleted = 0; 
					END

					SELECT @CurrencyCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Currency' AND Type = 'Control' AND IsDeleted = 0;

					IF @CurrencyCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Control', 'Decimal Currency', @IN_IsCurrency, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsCurrency WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Currency' AND Type = 'Control' AND IsDeleted = 0; 
					END
				
					SELECT @CurrencyColumnCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Currency Column' AND Type = 'Control' AND IsDeleted = 0;

					IF @CurrencyColumnCount = 0 AND @IN_CurrencyColumn <> ''
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Control', 'Currency Column', @IN_CurrencyColumn, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_CurrencyColumn WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Currency Column' AND Type = 'Control' AND IsDeleted = 0; 
					END
				END

				IF @IN_ControlType = 16 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @UploadCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Upload' AND Type = 'Control' AND IsDeleted = 0;
					SELECT @DownloadCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Download' AND Type = 'Control' AND IsDeleted = 0;
					SELECT @ViewCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File View' AND Type = 'Control' AND IsDeleted = 0;
					SELECT @DeleteCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Delete' AND Type = 'Control' AND IsDeleted = 0;

				IF @UploadCount = 0
				 BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						 VALUES (@IN_FormID, @IN_ControlID, 'Control', 'File Upload', @IN_IsUpload, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsUpload WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Upload' AND Type = 'Control' AND IsDeleted = 0; 
				END

				IF @DownloadCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Control', 'File Download', @IN_IsDownload, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsDownload WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Download' AND Type = 'Control' AND IsDeleted = 0; 
				 END

				IF @ViewCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Control', 'File View', @IN_IsView, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsView WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File View' AND Type = 'Control' AND IsDeleted = 0; 
				END

				IF @DeleteCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Control', 'File Delete', @IN_IsDelete, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsDelete WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Delete' AND Type = 'Control' AND IsDeleted = 0; 
				END
				END

				IF @IN_ControlType = 8 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @FixedCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Type' AND Type = 'Control' AND IsDeleted = 0;
				 
				IF @FixedCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Control', 'Type', @IN_IsFixed, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsFixed WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Type' AND Type = 'Control' AND IsDeleted = 0; 
				END
				END
			END 
			ELSE IF @IN_Type = 'ControlColumns'
			BEGIN
				INSERT INTO FormControlColumnsProcess (UserID, FormID, TabID, GroupID, ControlID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					DataBaseDecimalLength, DecimalLength, MaxLength, Events, ValidationEvent, FillEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, IsUTC, IsCurrency, CurrencyColumn, IsIndex,
					IsUpload, IsDownload, IsView, IsDelete, IsPrimary, GridHeader, GridType,PageSize, OrderBy, OrderByColumn, ApplicableProcess, GridParentControl, 
					DependentType, ColumnCreation, DataVariable, IsAutoGenerate, DateDifference, Description, AttachmentMaxSize, IsNoUpdate)
				VALUES (@IN_UserID, @IN_FormID, @IN_TabID, @IN_GroupID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ColumnName1, @IN_ColumnName2, @IN_ControlType, 
					@IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory, @IN_IsMobile, @IN_IsWizard, 
					@IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_FillEvent, @IN_SearchApplicable, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_IsDmlControl,
					@IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_FkData1, @IN_FkData2, @IN_AdditionalConditions,@IN_ControlEventType, @IN_ValidationEventType,
					@IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, @IN_ControlOrder, @IN_DependentFlag, @IN_IsSelectAll, @IN_ColumnWidth, @IN_IsUTC, @IN_IsCurrency, 
					@IN_CurrencyColumn, @IN_IsIndex, @IN_IsUpload, @IN_IsDownload, @IN_IsView, @IN_IsDelete, @IN_IsPrimary, @IN_GridHeader, @IN_GridType, @IN_PageSize, 
					@IN_OrderBy, @IN_OrderByColumn, @IN_ApplicableProcess, @IN_GridParentControl, @IN_DependentType, @IN_ColumnCreation, @IN_DataVariable, @IN_IsAutoGenerate, @IN_DateDifference, @IN_Description, @IN_AttachmentMaxSize, @IN_IsNoUpdate);
									
				SELECT @ParentColumn = FC.AdditionalConditions
				FROM FormControlConfig FC
					--JOIN FormGroupboxConfig GB ON GB.ReferenceID = FC.GroupID AND GB.DefaultGroupbox = 0
				WHERE FC.FormID = @IN_FormID AND FC.ReferenceID = @IN_ControlID AND FC.ControlType = 19 AND FC.IsDeleted = 0;

				IF @ParentColumn <> ''
				BEGIN
					SELECT @PropCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ControlID AND PropertyName = 'Fk Parent Column' AND Type = 'Control';
					IF @PropCount > 0
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @ParentColumn WHERE FormID = @IN_FormID AND ControlID = @IN_ControlID AND PropertyName = 'Fk Parent Column' AND Type = 'Control';
					END
					ELSE
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Control', 'Fk Parent Column', @ParentColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
				END

				IF @IN_DataType = 5 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @UTCCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'UTC' AND Type = 'Column' AND IsDeleted = 0;

					IF @UTCCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ColumnID, 'Column', 'UTC', @IN_IsUTC, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsUTC WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'UTC' AND Type = 'Column' AND IsDeleted = 0; 
					END
				END

				IF @IN_DataType = 8 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @LengthCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Length' AND Type = 'Column' AND IsDeleted = 0;

					IF @LengthCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Decimal Length', @IN_DecimalLength, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_DecimalLength WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Length' AND Type = 'Column' AND IsDeleted = 0; 
					END

					SELECT @DBLengthCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'DataBase Decimal Length' AND Type = 'Column' AND IsDeleted = 0;

					IF @DBLengthCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'DataBase Decimal Length', @IN_DataBaseDecimalLength, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_DataBaseDecimalLength WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'DataBase Decimal Length' AND Type = 'Column' AND IsDeleted = 0; 
					END

					SELECT @CurrencyCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Currency' AND Type = 'Column' AND IsDeleted = 0;

					IF @CurrencyCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Decimal Currency', @IN_IsCurrency, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsCurrency WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Decimal Currency' AND Type = 'Column' AND IsDeleted = 0; 
					END

					SELECT @CurrencyColumnCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Currency Column' AND Type = 'Column' AND IsDeleted = 0;

					IF @CurrencyColumnCount = 0 AND @IN_CurrencyColumn <> ''
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Currency Column', @IN_CurrencyColumn, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_CurrencyColumn WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Currency Column' AND Type = 'Column' AND IsDeleted = 0; 
					END
				 END

				SET @GridCount = ISNULL((SELECT COUNT(1) FROM FormControlConfig FC WHERE FC.FormID = @IN_FormID AND FC.ReferenceID = @IN_ControlID AND FC.ControlType = 19 AND FC.IsDeleted = 0), 0);
				IF @IN_ControlType = 16 AND @IN_ColumnID <> 0 AND @GridCount > 0
				BEGIN
					SELECT @UploadCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Upload' AND Type = 'Column' AND IsDeleted = 0;
					SELECT @DownloadCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Download' AND Type = 'Column' AND IsDeleted = 0;
					SELECT @ViewCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File View' AND Type = 'Column' AND IsDeleted = 0;
					SELECT @DeleteCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Delete' AND Type = 'Column' AND IsDeleted = 0;

				IF @UploadCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Column', 'File Upload', @IN_IsUpload, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsUpload WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Upload' AND Type = 'Column' AND IsDeleted = 0; 
				END

				IF @DownloadCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Column', 'File Download', @IN_IsDownload, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsDownload WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Download' AND Type = 'Column' AND IsDeleted = 0; 
				END

				IF @ViewCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormID, @IN_ControlID, 'Column', 'File View', @IN_IsView, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsView WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File View' AND Type = 'Column' AND IsDeleted = 0; 
				END

				IF @DeleteCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'File Delete', @IN_IsDelete, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsDelete WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'File Delete' AND Type = 'Column' AND IsDeleted = 0; 
				 END
				END

				IF @IN_DataType = 3 AND @IN_ColumnID <> 0
				BEGIN
					SELECT @PrimaryCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Primary Checkbox' AND Type = 'Column' AND IsDeleted = 0;

					IF @PrimaryCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ColumnID, 'Column', 'Primary Checkbox', @IN_IsPrimary, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_IsPrimary WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Primary Checkbox' AND Type = 'Column' AND IsDeleted = 0; 
					END
				END
				
				IF (@IN_ControlType = 24 OR @IN_ControlType = 25) AND @IN_ColumnID <> 0
				BEGIN
					SELECT @GridPropCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Grid Header' AND Type = 'Column' AND IsDeleted = 0;
					SELECT @OrderByCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Order By' AND Type = 'Column' AND IsDeleted = 0;
					SELECT @OrderByColumnCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Order By Column' AND Type = 'Column' AND IsDeleted = 0;

					IF @GridPropCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Grid Header', @IN_GridHeader, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Grid Type', @IN_GridType, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Page Size', @IN_PageSize, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Row Event', 'CMNF.setPopupGridValues(gridID, rowData, rowID)', 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ControlID, 'Column', 'Grid Access Type', 1, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_GridHeader WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Grid Header' AND Type = 'Column' AND IsDeleted = 0; 
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_GridType WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Grid Type' AND Type = 'Column' AND IsDeleted = 0; 
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_PageSize WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Page Size' AND Type = 'Column' AND IsDeleted = 0; 
					END

					IF @OrderByCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ColumnID, 'Column', 'Order By', @IN_OrderBy, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_OrderBy WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Order By' AND Type = 'Column' AND IsDeleted = 0; 
					END

					IF @OrderByColumnCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
							VALUES (@IN_FormID, @IN_ColumnID, 'Column', 'Order By Column', @IN_OrderByColumn, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
					ELSE
					BEGIN
						UPDATE FormControlPropertyConfig SET PropertyValue = @IN_OrderByColumn WHERE FormID = @IN_FormID AND ControlID = @IN_ColumnID AND PropertyName = 'Order By Column' AND Type = 'Column' AND IsDeleted = 0; 
					END

				 END
			END
			ELSE IF @IN_Type = 'GridControlColumns'
			BEGIN
				INSERT INTO FormGridControlColumnsProcess (UserID, FormID, TabID, GroupID, GridColumnID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					DataBaseDecimalLength, DecimalLength, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete,FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll,
					ControlEventType, ValidationEventType, IsDataSource, IsCurrency, CurrencyColumn, DependentFlag, DependentType, DateDifference, Description, AttachmentMaxSize)
				VALUES (@IN_UserID, @IN_FormID, @IN_TabID, @IN_GroupID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ColumnName1, @IN_ColumnName2, @IN_ControlType, 
					@IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory, @IN_IsMobile, @IN_IsWizard,
					@IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SearchApplicable, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_ColumnWidth, @IN_IsDmlControl,
					@IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_AdditionalConditions, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, 
					@IN_ControlOrder, @IN_IsSelectAll, @IN_ControlEventType, @IN_ValidationEventType, @IN_IsGridDataSource, @IN_IsCurrency, @IN_CurrencyColumn, @IN_DependentFlag, @IN_DependentType, @IN_DateDifference,
					@IN_Description, @IN_AttachmentMaxSize);
			END

			ELSE IF @IN_Type = 'GridControlColumns'
			BEGIN
				INSERT INTO FormGridControlColumnsProcess (UserID, FormID, TabID, GroupID, GridColumnID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					DataBaseDecimalLength, DecimalLength, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete,FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll,
					ControlEventType, ValidationEventType, IsDataSource, DateDifference, Description, AttachmentMaxSize)
				VALUES (@IN_UserID, @IN_FormID, @IN_TabID, @IN_GroupID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ColumnName1, @IN_ColumnName2, @IN_ControlType, 
					@IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory, @IN_IsMobile, @IN_IsWizard,
					@IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SearchApplicable, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_ColumnWidth, @IN_IsDmlControl,
					@IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_AdditionalConditions, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, 
					@IN_ControlOrder, @IN_IsSelectAll, @IN_ControlEventType, @IN_ValidationEventType, @IN_IsGridDataSource, @IN_DateDifference, @IN_Description, @IN_AttachmentMaxSize);
			END
			ELSE IF @IN_Type = 'Filters'
			BEGIN
				INSERT INTO FormSearchControlsProcess (UserID, FormID, ControlID, ColumnID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile,
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, SearchOrder, DependentFlag, ButtonID, Type, DateFilterType, FillEvent, FillEventType, DataVariable, DateDifference, Description)
				VALUES (@IN_UserID, @IN_FormID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory,
					@IN_IsMobile, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, 
					@IN_AdditionalConditions, @IN_ControlEventType, @IN_ValidationEventType, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_ControlOrder, @IN_DependentFlag,
					@IN_ButtonID, @IN_ProcessType, @IN_DateFilterType, @IN_FillEvent, @IN_FillEventType, @IN_DataVariable, @IN_DateDifference, @IN_Description);
			END
			ELSE IF @IN_Type = 'FilterColumns'
			BEGIN
				INSERT INTO FormSearchColumnsProcess (UserID, FormID, SearchID, ColumnID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
				FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, DateDifference, Description)
				VALUES (@IN_UserID, @IN_FormID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory,
					@IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, 
					@IN_AdditionalConditions, @IN_ControlEventType, @IN_ValidationEventType, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, 
				@IN_ControlOrder, @IN_DependentFlag, @IN_DependentType, @IN_DateDifference, @IN_Description);
			END
			ELSE IF @IN_Type = 'DashboardDependent'
			BEGIN
				INSERT INTO ChartDependentColumnProcess (UserID, DashboardID, ControlID, ColumnID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, DateDifference)
				VALUES (@IN_UserID, @IN_FormID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory,
					@IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, 
					@IN_AdditionalConditions, @IN_ControlEventType, @IN_ValidationEventType, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, 
					@IN_ControlOrder, @IN_DependentFlag, @IN_DependentType, @IN_DateDifference);
			END
			ELSE IF @IN_Type = 'ReportDependent'
			BEGIN
				INSERT INTO RepDependentColumnProcess (UserID, ReportID, ControlID, ColumnID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, DateDifference)
				VALUES (@IN_UserID, @IN_FormID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory,
					@IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, 
					@IN_AdditionalConditions, @IN_ControlEventType, @IN_ValidationEventType, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, 
					@IN_ControlOrder, @IN_DependentFlag, @IN_DependentType, @IN_DateDifference);
			END

		COMMIT TRANSACTION tran_FormControlProcessEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_FormControlProcessEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormDeleteProperty]'
GO

CREATE PROCEDURE [dbo].[spFormDeleteProperty](@IN_ConfigID BIGINT, @IN_PropertyID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_PropertyConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50)

		UPDATE FormAdditionalPropertyConfig SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime WHERE ReferenceID = @IN_PropertyID AND FormID = @IN_ConfigID;
		
		COMMIT TRANSACTION tran_PropertyConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_PropertyConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spFormDropTableColumn]'
GO

CREATE PROCEDURE [dbo].[spFormDropTableColumn](@IN_FormConfigID INT, @IN_TableColumnID BIGINT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  BEGIN TRANSACTION tran_FormDropTableColumn

			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
							@UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@TableName VARCHAR(255) = '',
							@TableColumn VARCHAR(255) = '',
							@FormTableID BIGINT = 0,
							@ResponseMessage NVARCHAR(1000) = '',
							@DropColumnQuery NVARCHAR(2000) = '',
							@ConstraintName VARCHAR(1000) = '',
							@DropConstraintQuery NVARCHAR(2000) = ''

			SET @TableColumn = ISNULL((SELECT TableColumn FROM FormTableColumnList WHERE ReferenceID = @IN_TableColumnID AND FormConfigID = @IN_FormConfigID
                        AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), '');
			SET @FormTableID = ISNULL((SELECT FormTableID FROM FormTableColumnList WHERE ReferenceID = @IN_TableColumnID AND FormConfigID = @IN_FormConfigID
														AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), '');
			SET @TableName = ISNULL((SELECT TableName FROM FormTableList WHERE ReferenceID = @FormTableID AND FormConfigID = @IN_FormConfigID
														AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), '');

			IF @TableColumn IS NULL OR @TableColumn = ''
				SET @ResponseMessage = 'Table column not available';
			ELSE IF @TableName IS NULL OR @TableName = ''
				SET @ResponseMessage = 'Table not available';
			ELSE IF @TableColumn IN ('ReferenceID', 'CompanyID', 'CreatedBy', 'CreatedDate', 'CreatedDateGMT', 'ModifiedBy', 'ModifiedDate', 'ModifiedDateGMT',
				'NotActive', 'NotActiveDate', 'NotActiveDateGMT', 'NotActiveReason', 'IsDeleted', 'DeletedBy', 'DeletedDate', 'DeletedDateGMT', 
				'DeleteReason', 'IsCurrentVersion', 'Version', 'VersionID', 'OrderBy', 'ERPID')
				SET @ResponseMessage = 'Can not drop this column';
			ELSE
			BEGIN
				SELECT @ConstraintName = obj_Constraint.NAME
				FROM sys.objects obj_table 
					JOIN sys.objects obj_Constraint  ON obj_table.object_id = obj_Constraint.parent_object_id 
					JOIN sys.sysconstraints constraints ON constraints.constid = obj_Constraint.object_id 
					JOIN sys.columns columns ON columns.object_id = obj_table.object_id AND columns.column_id = constraints.colid 
				WHERE obj_table.NAME = @TableName AND columns.NAME  = @TableColumn AND obj_Constraint.type = 'D';

				IF ISNULL(@ConstraintName, '') <> ''
				BEGIN
					SET @DropConstraintQuery = CONCAT('ALTER TABLE ', @TableName, ' DROP CONSTRAINT ', @ConstraintName);
  
					EXEC (@DropConstraintQuery);
				END

				IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @TableColumn)
				BEGIN
					SET @DropColumnQuery = CONCAT('ALTER TABLE ', @TableName, ' DROP COLUMN ', @TableColumn);
  
					EXEC (@DropColumnQuery);
				END

				UPDATE FormTableColumnList 
				SET IsDeleted = 1,
					DeletedBy = @IN_UserID,
					DeletedDate = @UTCTime,
					DeletedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_TableColumnID AND FormConfigID = @IN_FormConfigID
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
			END

			SELECT @ResponseMessage AS Message;

		COMMIT TRANSACTION tran_FormDropTableColumn

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_FormDropTableColumn

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spFormGetControlList]'
GO

CREATE PROCEDURE [dbo].[spFormGetControlList] (@IN_FormConfigID BIGINT, @IN_ID BIGINT, @IN_Type VARCHAR(100), @IN_IsEventFlag BIT, @IN_LanguageID INT, @IN_ProcessType VARCHAR(15), @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50),
						@MainTableName VARCHAR(100),
						@ControlID BIGINT,
						@ControlType INT,
						@FkType INT,
						@FkTable VARCHAR(100),
						@Count INT,
						@TableName VARCHAR(100),
						@Type VARCHAR(10),
						@Name NVARCHAR(100),
						@RID BIGINT,
						@SCount INT

		IF @IN_Type = 'FormControls'
		BEGIN
			SELECT FCC.FormID, FCC.TabID, FCC.GroupID, FCC.ReferenceID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, 
				FCC.TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup, FCC.IsDmlControl, 
				FCC.IsEncrypt, FCC.IsReturnFill, FCC.IsNoAdd, FCC.IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, ISNULL(FCC.FkData1, '') AS FkData1, ISNULL(FCC.FkData2, '') AS FkData2,  FCC.AdditionalConditions,
				FCC.FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, FCC.ControlOrder, FCC.DefaultControl, 
				FCC.ButtonID, FCC.DependentFlag, ISNULL(FCC.IsSelectAll, 0) AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, FCC.FillEventType, 0 AS IsDataSource, 0 AS ColumnWidth,
				ISNULL(FCC.DataTreeCondition, '') AS DataTreeCondition, ISNULL(CP.PropertyValue, CASE WHEN FCC.DataType = 5 THEN 1 ELSE 0 END) AS IsUTC, 0 AS DependentType,
				ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, ISNULL(FCC.IsCurrency, 0) AS IsCurrency, ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, ISNULL(FCC.IsIndex, 0) AS IsIndex,
				ISNULL((SELECT TOP 1 FU.PropertyValue FROM FormControlPropertyConfig FU WHERE FU.FormID = @IN_FormConfigID AND FU.ControlID = FCC.ReferenceID AND FU.PropertyName = 'File Upload' AND FU.Type = 'Control' AND FU.PropertyType = 'Control' AND FU.IsDeleted = 0), 0) AS IsUpload, 
				ISNULL((SELECT TOP 1 FD.PropertyValue FROM FormControlPropertyConfig FD WHERE FD.FormID = @IN_FormConfigID AND FD.ControlID = FCC.ReferenceID AND FD.PropertyName = 'File Download' AND FD.Type = 'Control' AND FD.PropertyType = 'Control' AND FD.IsDeleted = 0), 0) AS IsDownload, 
				ISNULL((SELECT TOP 1 FV.PropertyValue FROM FormControlPropertyConfig FV WHERE FV.FormID = @IN_FormConfigID AND FV.ControlID = FCC.ReferenceID AND FV.PropertyName = 'File View' AND FV.Type = 'Control' AND FV.PropertyType = 'Control' AND FV.IsDeleted = 0), 0) AS IsView, 
				ISNULL((SELECT TOP 1 FDE.PropertyValue FROM FormControlPropertyConfig FDE WHERE FDE.FormID = @IN_FormConfigID AND FDE.ControlID = FCC.ReferenceID AND FDE.PropertyName = 'File Delete' AND FDE.Type = 'Control' AND FDE.PropertyType = 'Control' AND FDE.IsDeleted = 0), 0) AS IsDelete,
				0 AS IsPrimary, ISNULL(FP.PropertyValue, 0) AS IsFixed, ISNULL(FCC.FilterConditions, '') AS FilterConditions, 
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 0 AS DateFilterType,
				ISNULL(FCC.ColumnCreation, 0) AS ColumnCreation, ISNULL(FCC.DataVariable, 1) AS DataVariable,
				ISNULL(FCC.IsAutoGenerate, 0) AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference, ISNULL(FCC.Description, '') AS Description, ISNULL(FCC.AttachmentMaxSize, 0) AS AttachmentMaxSize
			FROM FormControlConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FormControls' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
				LEFT JOIN FormControlPropertyConfig CP ON CP.FormID = @IN_FormConfigID AND CP.ControlID = FCC.ReferenceID AND CP.PropertyName = 'UTC' AND CP.Type = 'Control' AND CP.PropertyType = 'Control' AND CP.IsDeleted = 0
				LEFT JOIN FormControlPropertyConfig FP ON FP.FormID = @IN_FormConfigID AND FP.ControlID = FCC.ReferenceID AND FP.PropertyName = 'Type' AND FP.Type = 'Control' AND FP.PropertyType = 'Control' AND FP.IsDeleted = 0
			WHERE FCC.FormID = @IN_FormConfigID AND FCC.GroupID = @IN_ID
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.ControlOrder;
		
		END 
		ELSE IF @IN_Type = 'ControlColumns'
		BEGIN
			SELECT FCC.FormID, FCC.TabID, FCC.GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.DisplayName, '') AS ControlName, 
				FCC.ColumnName AS TableColumn, FCC.ColumnName1 AS ColumnName1, FCC.ColumnName2 AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup, FCC.IsDmlControl, 
				0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, FCC.IsNoUpdate AS IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, ISNULL(FCC.FkData1, '') AS FkData1, ISNULL(FCC.FkData2, '') AS FkData2, FCC.AdditionalConditions,
				ISNULL(FCC.FillEvent, '') AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, FCC.ColumnOrder AS ControlOrder, 
				0 AS DefaultControl, 0 AS ButtonID, CASE WHEN FC.ControlType = 19 THEN ISNULL(FCC.DependentFlag, 0) ELSE 0 END AS DependentFlag, FCC.SelectAll AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, 
				0 AS IsDataSource, FCC.ColumnWidth AS ColumnWidth, '' AS DataTreeCondition, ISNULL(CP.PropertyValue, CASE WHEN FCC.DataType = 5 THEN 1 ELSE 0 END) AS IsUTC, FCC.DependentType AS DependentType,
				ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, ISNULL(FCC.IsCurrency, 0) AS IsCurrency, ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, ISNULL(FCC.IsIndex, 0) AS IsIndex,
				ISNULL((SELECT TOP 1 FU.PropertyValue FROM FormControlPropertyConfig FU WHERE FU.FormID = @IN_FormConfigID AND FU.ControlID = FCC.ReferenceID AND FU.PropertyName = 'File Upload' AND FU.Type = 'Column' AND FU.PropertyType = 'Column' AND FU.IsDeleted = 0), 0) AS IsUpload, 
				ISNULL((SELECT TOP 1 FD.PropertyValue FROM FormControlPropertyConfig FD WHERE FD.FormID = @IN_FormConfigID AND FD.ControlID = FCC.ReferenceID AND FD.PropertyName = 'File Download' AND FD.Type = 'Column' AND FD.PropertyType = 'Column' AND FD.IsDeleted = 0), 0) AS IsDownload, 
				ISNULL((SELECT TOP 1 FV.PropertyValue FROM FormControlPropertyConfig FV WHERE FV.FormID = @IN_FormConfigID AND FV.ControlID = FCC.ReferenceID AND FV.PropertyName = 'File View' AND FV.Type = 'Column' AND FV.PropertyType = 'Column' AND FV.IsDeleted = 0), 0) AS IsView, 
				ISNULL((SELECT TOP 1 FDE.PropertyValue FROM FormControlPropertyConfig FDE WHERE FDE.FormID = @IN_FormConfigID AND FDE.ControlID = FCC.ReferenceID AND FDE.PropertyName = 'File Delete' AND FDE.Type = 'Column' AND FDE.PropertyType = 'Column' AND FDE.IsDeleted = 0), 0) AS IsDelete,
				ISNULL(PC.PropertyValue, 0) AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions,
				ISNULL((SELECT TOP 1 GH.PropertyValue FROM FormControlPropertyConfig GH WHERE GH.FormID = @IN_FormConfigID AND GH.ControlID = FCC.ReferenceID AND GH.PropertyName = 'Grid Header' AND GH.Type = 'Column' AND GH.PropertyType = 'Column' AND GH.IsDeleted = 0), '') AS GridHeader, 
				ISNULL((SELECT TOP 1 GT.PropertyValue FROM FormControlPropertyConfig GT WHERE GT.FormID = @IN_FormConfigID AND GT.ControlID = FCC.ReferenceID AND GT.PropertyName = 'Grid Type' AND GT.Type = 'Column' AND GT.PropertyType = 'Column' AND GT.IsDeleted = 0), 0) AS GridType, 
				ISNULL((SELECT TOP 1 OB.PropertyValue FROM FormControlPropertyConfig OB WHERE OB.FormID = @IN_FormConfigID AND OB.ControlID = FCC.ReferenceID AND OB.PropertyName = 'Order By' AND OB.Type = 'Column' AND OB.PropertyType = 'Column' AND OB.IsDeleted = 0), 'ASC') AS OrderBy, 
				ISNULL((SELECT TOP 1 OBC.PropertyValue FROM FormControlPropertyConfig OBC WHERE OBC.FormID = @IN_FormConfigID AND OBC.ControlID = FCC.ReferenceID AND OBC.PropertyName = 'Order By Column' AND OBC.Type = 'Column' AND OBC.PropertyType = 'Column' AND OBC.IsDeleted = 0), '') AS OrderByColumn, 
				ISNULL((SELECT TOP 1 PS.PropertyValue FROM FormControlPropertyConfig PS WHERE PS.FormID = @IN_FormConfigID AND PS.ControlID = FCC.ReferenceID AND PS.PropertyName = 'Page Size' AND PS.Type = 'Column' AND PS.PropertyType = 'Column' AND PS.IsDeleted = 0), 0) AS PageSize,
				ISNULL((SELECT TOP 1 PS.PropertyValue FROM FormControlPropertyConfig PS WHERE PS.FormID = @IN_FormConfigID AND PS.ControlID = FCC.ReferenceID AND PS.PropertyName = 'Applicable Process' AND PS.Type = 'Column' AND PS.PropertyType = 'Column' AND PS.IsDeleted = 0), 0) AS ApplicableProcess,
				ISNULL(FCC.GridParentControl, '') AS GridParentControl, 0 AS DateFilterType, ISNULL(FCC.ColumnCreation, 0) AS ColumnCreation, 
				ISNULL(FCC.DataVariable, 1) AS DataVariable, ISNULL(FCC.IsAutoGenerate, 0) AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference, 
				ISNULL(FCC.Description, '') AS Description, ISNULL(FCC.AttachmentMaxSize, 0) AS AttachmentMaxSize
			FROM FormControlColumnsConfig FCC
				JOIN FormControlConfig FC ON FC.ReferenceID = FCC.ControlID AND FC.IsDeleted = 0
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'ControlColumns' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
				LEFT JOIN FormControlPropertyConfig CP ON CP.FormID = @IN_FormConfigID AND CP.ControlID = FCC.ReferenceID AND CP.PropertyName = 'UTC' AND CP.Type = 'Column' AND CP.PropertyType = 'Column' AND CP.IsDeleted = 0
				LEFT JOIN FormControlPropertyConfig PC ON PC.FormID = @IN_FormConfigID AND PC.ControlID = FCC.ReferenceID AND PC.PropertyName = 'Primary Checkbox' AND PC.Type = 'Column' AND PC.PropertyType = 'Column' AND PC.IsDeleted = 0
			WHERE FCC.FormID = @IN_FormConfigID AND FCC.ControlID = @IN_ID AND (FCC.DependentFlag = @IN_IsEventFlag OR FC.ControlType = 19)
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.ColumnOrder;
		
		END
		ELSE IF @IN_Type = 'GridControlColumns'
		BEGIN
			SELECT FCC.FormID, FCC.TabID, FCC.GroupID, FCC.ColumnID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.DisplayName, '') AS ControlName, 
				FCC.ColumnName AS TableColumn, FCC.ColumnName1 AS ColumnName1, FCC.ColumnName2 AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup, FCC.IsDmlControl, 
				0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, '' AS FkData1, '' AS FkData2, FCC.AdditionalConditions, 
				'' AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, FCC.ColumnOrder AS ControlOrder, 
				0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag AS DependentFlag, FCC.SelectAll AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, 
				FCC.IsDataSource AS IsDataSource, FCC.ColumnWidth AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, FCC.DependentType AS DependentType,
				ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, ISNULL(FCC.IsCurrency, 0) AS IsCurrency, ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, 0 AS IsIndex,
				0 AS IsUpload, 0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions,
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 
				0 AS DateFilterType, 0 AS ColumnCreation, 0 AS DataVariable, 0 AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference,
				ISNULL(FCC.Description, '') AS Description, ISNULL(FCC.AttachmentMaxSize, 0) AS AttachmentMaxSize
			FROM FormGridControlColumnsConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'GridControlColumns' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_FormConfigID AND FCC.ColumnID = @IN_ID AND ISNULL(FCC.DependentFlag, 0) = @IN_IsEventFlag
			  AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.ColumnOrder;
		END
		ELSE IF @IN_Type = 'Filters'
		BEGIN
			SELECT FCC.FormID, 0 AS TabID, 0 AS GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, 
				FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, 0 AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, 0 AS SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, '' AS AttachmentPath, 0 AS IsIdentity, 0 AS UniqueGroup, 0 AS IsDmlControl, 
				0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, '' AS FkData1, '' AS FkData2, FCC.AdditionalConditions,
				ISNULL(FCC.FillEvent, '') AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, 0 AS FkShowActive, 0 AS VersionCheck, FCC.SearchOrder AS ControlOrder, 
				0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag, 0 AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, ISNULL(FCC.FillEventType, 0) AS FillEventType, 0 AS IsDataSource, 
				0 AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, 0 AS DependentType, 0 AS DataBaseDecimalLength, 0 AS DecimalLength, 0 AS IsCurrency, '' AS CurrencyColumn, 0 AS IsIndex,
				0 AS IsUpload, 0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions, 
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 
				ISNULL(FCC.DateFilterType, 0) AS DateFilterType, 0 AS ColumnCreation, ISNULL(FCC.DataVariable, 1) AS DataVariable, 0 AS IsAutoGenerate,
				ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference, ISNULL(FCC.Description, '') AS Description, 0 AS AttachmentMaxSize
			FROM FormSearchControlsConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'Filters' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_FormConfigID AND ((@IN_ProcessType = '' AND FCC.ControlID = @IN_ID AND ISNULL(FCC.Type, '') = '') OR (@IN_ProcessType = 'Button' AND FCC.ButtonID = @IN_ID))
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.SearchOrder;
		END
		ELSE IF @IN_Type = 'FilterColumns'
		BEGIN
			SELECT FCC.FormID, 0 AS TabID, 0 AS GroupID, FCC.SearchID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, 
				FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, 0 AS IsMobile, 0 AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, 0 AS SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, '' AS AttachmentPath, 0 AS IsIdentity, '' AS UniqueGroup, 0 AS IsDmlControl, 
				0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType, '' AS FkData1, '' AS FkData2, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.AdditionalConditions,
				'' AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, 0 AS FkShowActive, 0 AS VersionCheck, FCC.SearchOrder AS ControlOrder, 
				0 AS DefaultControl, 0 AS ButtonID, 0 AS DependentFlag, 0 AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, 0 AS IsDataSource, 
				0 AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, DependentType AS DependentType, 0 AS DataBaseDecimalLength, 0 AS DecimalLength, 0 AS IsCurrency, '' AS CurrencyColumn, 0 AS IsIndex,
				0 AS IsUpload, 0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions,
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 
				0 AS DateFilterType, 0 AS ColumnCreation, 0 AS DataVariable, 0 AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference, ISNULL(FCC.Description, '') AS Description, 0 AS AttachmentMaxSize
			FROM FormSearchColumnsConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FilterColumns' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_FormConfigID AND FCC.SearchID = @IN_ID
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.SearchOrder;
		END
		ELSE IF @IN_Type = 'Property'
		BEGIN
			SELECT FCC.FormID, FC.TabID, FC.GroupID, FCC.ControlID, FC.ControlType, FCC.PropertyName, FCC.PropertyValue
			FROM FormControlPropertyConfig FCC
				JOIN FormControlConfig FC ON FC.ReferenceID = FCC.ControlID AND FC.FormID = @IN_FormConfigID 
			WHERE FCC.FormID = @IN_FormConfigID AND FCC.ControlID = @IN_ID AND FCC.Type = 'Control'
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
		END
		ELSE IF @IN_Type = 'Column Property'
		BEGIN
			SELECT FCC.FormID, FC.TabID, FC.GroupID, FCC.ControlID, FC.ControlType, FCC.PropertyName, FCC.PropertyValue
			FROM FormControlPropertyConfig FCC
				JOIN FormControlColumnsConfig FC ON FC.ReferenceID = FCC.ControlID AND FC.FormID = @IN_FormConfigID 
			WHERE FCC.FormID = @IN_FormConfigID AND FCC.ControlID = @IN_ID AND FCC.Type = 'Column'
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
		END
		ELSE IF @IN_Type = 'DashboardDependent'
		BEGIN
			SELECT FCC.DashboardID AS FormID, 0 AS TabID, 0 AS GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, 
				FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, 0 AS IsMobile, 0 AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, 0 AS SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, '' AS AttachmentPath, 0 AS IsIdentity, '' AS UniqueGroup, 0 AS IsDmlControl, 
				0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType, '' AS FkData1, '' AS FkData2, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.AdditionalConditions,
				'' AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, 0 AS FkShowActive, 0 AS VersionCheck, FCC.SearchOrder AS ControlOrder, 
				0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag AS DependentFlag, 0 AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, 0 AS IsDataSource, 
				0 AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, DependentType AS DependentType, 0 AS DataBaseDecimalLength, 0 AS DecimalLength, 0 AS IsCurrency, '' AS CurrencyColumn, 0 AS IsIndex,
				0 AS IsUpload, 0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions,
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 
				0 AS DateFilterType, 0 AS ColumnCreation, 0 AS DataVariable, 0 AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference,'' AS Description, 0 AS AttachmentMaxSize
			FROM ChartDependentColumnConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FilterColumns' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = 1
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.DashboardID = @IN_FormConfigID AND FCC.ControlID = @IN_ID AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.SearchOrder;
		END
		ELSE IF @IN_Type = 'ReportDependent'
		BEGIN
			SELECT FCC.ReportID AS FormID, 0 AS TabID, 0 AS GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, 
				FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
				FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory, 0 AS IsMobile, 0 AS IsWizard, FCC.MaxLength, 
				FCC.Events, FCC.ValidationEvent, 0 AS SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, '' AS AttachmentPath, 0 AS IsIdentity, '' AS UniqueGroup, 0 AS IsDmlControl, 
				0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType, '' AS FkData1, '' AS FkData2, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.AdditionalConditions,
				'' AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, 0 AS FkShowActive, 0 AS VersionCheck, FCC.SearchOrder AS ControlOrder, 
				0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag AS DependentFlag, 0 AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, 0 AS IsDataSource, 
				0 AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, DependentType AS DependentType, 0 AS DataBaseDecimalLength, 0 AS DecimalLength, 0 AS IsCurrency, '' AS CurrencyColumn, 0 AS IsIndex,
				0 AS IsUpload, 0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions,
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 
				0 AS DateFilterType, 0 AS ColumnCreation, 0 AS DataVariable, 0 AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference,'' AS Description, 0 AS AttachmentMaxSize
			FROM RepDependentColumnConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FilterColumns' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = 1
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.ReportID = @IN_FormConfigID AND FCC.ControlID = @IN_ID AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.SearchOrder;
		END

		--IF @IN_Type = 'ControlColumns' OR @IN_Type = 'Filters' OR @IN_Type = 'FilterColumns'
		--BEGIN
			SELECT @MainTableName = TableName FROM FormConfiguration WHERE ReferenceID = @IN_FormConfigID AND IsDeleted = 0;
		
			IF @IN_Type = 'ControlColumns'
			BEGIN
				SELECT TOP 1 @ControlID = ReferenceID, @ControlType = ControlType, @FkType = FkType, @FkTable = FkTable FROM FormControlConfig 
				WHERE ReferenceID = @IN_ID AND FormID = @IN_FormConfigID AND IsDeleted = 0;
			END
			ELSE IF @IN_Type = 'GridControlColumns'
			BEGIN
				SELECT TOP 1 @ControlID = ReferenceID, @ControlType = ControlType, @FkType = FkType, @FkTable = FkTable FROM FormControlColumnsConfig 
				WHERE ReferenceID = @IN_ID AND FormID = @IN_FormConfigID AND IsDeleted = 0;
			END
			ELSE IF @IN_Type <> 'FormControls'
			BEGIN
				SELECT TOP 1 @ControlType = FC.ControlType, @FkType = FC.FkType, @FkTable = FC.FkTable
				FROM FormControlConfig FC 
					JOIN FormSearchControlsConfig SC ON FC.ReferenceID = SC.ControlID AND SC.IsDeleted = 0
				WHERE SC.ReferenceID = @IN_ID AND SC.FormID = @IN_FormConfigID AND FC.IsDeleted = 0;
			END

			IF @FkType = 1
			BEGIN
				SET @FkTable = 'CmnCodeMaster';
			END

			IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
				DROP TABLE #tempTableColumns
			
			CREATE TABLE #tempTableColumns( 
				TableName VARCHAR(100) NULL,
				TableColumn VARCHAR(100) NULL,
				DataType VARCHAR(100) NULL,
				ColumnMaxLength VARCHAR(100) NULL,
				OrderBy INT NULL
			);

			IF @IN_Type = 'FormControls'
			BEGIN
				SELECT @RID = CASE WHEN LEN(GB.TableName) > 0 THEN GB.ReferenceID WHEN LEN(FT.TableName) > 0 THEN FT.ReferenceID ELSE FD.ReferenceID END,
					@Name = CASE WHEN LEN(GB.TableName) > 0 THEN GB.Name WHEN LEN(FT.TableName) > 0 THEN FT.Name ELSE FD.Name END,
					@TableName = CASE WHEN LEN(GB.TableName) > 0 THEN GB.TableName WHEN LEN(FT.TableName) > 0 THEN FT.TableName ELSE FD.TableName END,
					@Type = CASE WHEN LEN(GB.TableName) > 0 THEN 'Group' WHEN LEN(FT.TableName) > 0 THEN 'Tab' ELSE 'Form' END
				FROM FormConfiguration FD
					JOIN FormTabConfig FT ON FT.FormID = FD.ReferenceID AND FT.IsDeleted = 0
					JOIN FormGroupboxConfig GB ON GB.TabID = FT.ReferenceID AND GB.ReferenceID = @IN_ID AND GB.IsDeleted = 0
				WHERE FD.ReferenceID = @IN_FormConfigID AND FD.IsDeleted = 0;
			END
			ELSE
			BEGIN
				SELECT @RID = CASE WHEN LEN(GB.TableName) > 0 THEN GB.ReferenceID WHEN LEN(FT.TableName) > 0 THEN FT.ReferenceID ELSE FD.ReferenceID END,
					@Name = CASE WHEN LEN(GB.TableName) > 0 THEN GB.Name WHEN LEN(FT.TableName) > 0 THEN FT.Name ELSE FD.Name END,
					@TableName = CASE WHEN LEN(GB.TableName) > 0 THEN GB.TableName WHEN LEN(FT.TableName) > 0 THEN FT.TableName ELSE FD.TableName END,
					@Type = CASE WHEN LEN(GB.TableName) > 0 THEN 'Group' WHEN LEN(FT.TableName) > 0 THEN 'Tab' ELSE 'Form' END
				FROM FormConfiguration FD
					JOIN FormTabConfig FT ON FT.FormID = FD.ReferenceID AND FT.IsDeleted = 0
					JOIN FormGroupboxConfig GB ON GB.TabID = FT.ReferenceID AND GB.IsDeleted = 0
					JOIN FormControlConfig FC ON (FC.ReferenceID = @IN_ID OR (@IN_ProcessType = 'Button' AND FC.SearchApplicable = 1)) AND FC.GroupID = GB.ReferenceID AND FC.IsDeleted = 0
				WHERE FD.ReferenceID = @IN_FormConfigID AND FD.IsDeleted = 0;
			END
					
			SET @Count = 0;
			IF ((@IN_Type = 'Filters' OR @IN_Type = 'FilterColumns' OR (@ControlType = 18 AND @IN_Type = 'ControlColumns') OR @IN_Type = 'GridControlColumns') AND @MainTableName <> @FkTable) OR (@Type = 'Form' AND @ControlType = 19) OR @ControlType = 24 OR @ControlType = 25
			BEGIN
				INSERT INTO #tempTableColumns
					SELECT @TableName, COLUMN_NAME, CASE WHEN DATA_TYPE = 'bigint' THEN 1 WHEN DATA_TYPE = 'int' THEN 2 WHEN DATA_TYPE = 'bit' THEN 3 WHEN DATA_TYPE = 'date' THEN 4 
						WHEN DATA_TYPE = 'datetime' THEN 5 WHEN DATA_TYPE = 'time' THEN 6 WHEN DATA_TYPE = 'varchar' OR DATA_TYPE = 'nvarchar' THEN 7 ELSE 8 END, CHARACTER_MAXIMUM_LENGTH, ORDINAL_POSITION
					FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_NAME = @FkTable
					ORDER BY ORDINAL_POSITION; 

				SET @Count = 1;
			END
			ELSE 
			BEGIN
				INSERT INTO #tempTableColumns
					SELECT @TableName, COLUMN_NAME, CASE WHEN DATA_TYPE = 'bigint' THEN 1 WHEN DATA_TYPE = 'int' THEN 2 WHEN DATA_TYPE = 'bit' THEN 3 WHEN DATA_TYPE = 'date' THEN 4 
						WHEN DATA_TYPE = 'datetime' THEN 5 WHEN DATA_TYPE = 'time' THEN 6 WHEN DATA_TYPE = 'varchar' OR DATA_TYPE = 'nvarchar' THEN 7 ELSE 8 END, CHARACTER_MAXIMUM_LENGTH, ORDINAL_POSITION
					FROM INFORMATION_SCHEMA.COLUMNS
					WHERE TABLE_NAME = CASE WHEN ISNULL(LEN(@TableName),0) > 0 THEN @TableName ELSE @FkTable END
					ORDER BY ORDINAL_POSITION; 
			END

			SET @SCount = 0;
			IF @Count = 0
			BEGIN
			IF @Type = 'Form'
			BEGIN
				INSERT INTO #tempTableColumns
					SELECT @TableName, FC.TableColumn, FC.DataType, FC.MaxLength, 0
					FROM FormConfiguration FD
						JOIN FormTabConfig FT ON FT.FormID = FD.ReferenceID AND FT.IsDeleted = 0 AND (FT.TableName <> FD.TableName OR FT.TableName = '')
						JOIN FormGroupboxConfig GB ON GB.TabID = FT.ReferenceID AND GB.IsDeleted = 0 AND ((GB.TableName <> FT.TableName AND GB.TableName <> FD.TableName) OR GB.TableName = '')
						JOIN FormControlConfig FC ON FC.GroupID = GB.ReferenceID AND FC.IsDeleted = 0
					WHERE FD.ReferenceID = @RID AND FD.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, FC.ControlOrder ASC;
			END
			ELSE IF @Type = 'Tab'
			BEGIN
				INSERT INTO #tempTableColumns
					SELECT @TableName, FC.TableColumn, FC.DataType, FC.MaxLength, 0
					FROM FormTabConfig FT 
					JOIN FormGroupboxConfig GB ON GB.TabID = FT.ReferenceID AND GB.IsDeleted = 0 AND (GB.TableName <> FT.TableName OR GB.TableName = '')
					JOIN FormControlConfig FC ON FC.GroupID = GB.ReferenceID AND FC.IsDeleted = 0
					WHERE FT.ReferenceID = @RID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, FC.ControlOrder ASC; 
			END
			ELSE
			BEGIN
				INSERT INTO #tempTableColumns
					SELECT @TableName, FC.TableColumn, FC.DataType, FC.MaxLength, 0
					FROM FormGroupboxConfig GB 
						JOIN FormControlConfig FC ON FC.GroupID = GB.ReferenceID AND FC.IsDeleted = 0
					WHERE GB.ReferenceID = @RID AND GB.IsDeleted = 0 ORDER BY GB.GroupOrder ASC, FC.ControlOrder ASC;
			END

			IF @ControlType = 19
			BEGIN
				INSERT INTO #tempTableColumns
					SELECT @TableName, CC.ColumnName, CC.DataType, CC.MaxLength, 0
					FROM FormControlConfig FC 
						JOIN FormControlColumnsConfig CC ON CC.ControlID = FC.ReferenceID AND CC.IsDeleted = 0
						JOIN FormControlPropertyConfig CP ON CP.ControlID = FC.ReferenceID AND CP.Type = 'Control' AND CP.PropertyName = 'Grid Access Type' AND CP.PropertyValue <> 1 AND CP.IsDeleted = 0
					WHERE FC.ReferenceID = @ControlID AND FC.IsDeleted = 0 ORDER BY CC.ColumnOrder ASC;
			END

			SET @SCount = (SELECT MAX(OrderBy) FROM #tempTableColumns);
			UPDATE #tempTableColumns SET @SCount = OrderBy = @SCount + 1 WHERE OrderBy = 0;
			END

			SELECT DISTINCT(TableColumn), DataType, CASE WHEN ColumnMaxLength <> '-1' THEN ColumnMaxLength ELSE '' END 
			FROM #tempTableColumns GROUP BY TableColumn, DataType, ColumnMaxLength ORDER BY TableColumn ASC;

			IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
				DROP TABLE #tempTableColumns
	--END

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormGetDependentData]'
GO

CREATE PROCEDURE [dbo].[spFormGetDependentData] (
	@IN_Type VARCHAR(100),
	@IN_ControlTypeID INT,
	@IN_FormID BIGINT,
	@IN_TabID BIGINT,
	@IN_ControlID BIGINT
)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@FKTable NVARCHAR(MAX) ='',
			@FKColumn NVARCHAR(MAX) = '';

		SELECT @FkTable = ISNULL(FkTable, '')  
		FROM FormControlConfig FCC
		WHERE FCC.FormID = @IN_FormID AND FCC.ReferenceID =  @IN_ControlID AND FCC.TabID = @IN_TabID  AND FCC.IsIdentity = 0

		SELECT @FKColumn  = ISNULL(SUBSTRING((SELECT ',' + ('{"Value":"'+ COLUMN_NAME +'","DataType":"'+ (SELECT CAST(CodemasterID AS varchar(50)) from CmnCodeMaster where type = 'Data Type' AND DATA_TYPE = TypeValues)+'"}')
		FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FkTable ORDER BY ORDINAL_POSITION
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');

		IF @IN_Type = 'ControlColumns'
		BEGIN
		   IF @IN_ControlTypeID IN (18, 19, 24, 25)
			BEGIN 
		    SELECT FCC.FormID AS FormID, FCC.TabID AS TabID, FCC.GroupID AS GroupID, FCC.ReferenceID AS ControlID, FCC.ReferenceID AS ColumnID, 
				ISNULL(FCC.Name, '') AS ControlName, FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType AS ControlTypeID,
				CM.Description AS ControlType, ISNULL(CM.ImagePath, '') AS ControlIcon, FCC.DataType AS DataType, FCC.Visibility AS Visibility, FCC.Readonly AS ReadOnly,
				FCC.IsMandatory AS IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength AS MaxLength, 
				FCC.Events AS Events, FCC.ValidationEvent AS ValidationEvent, FCC.SearchApplicable AS SearchApplicable, FCC.SelectApplicable AS SelectApplicable,
				FCC.DefaultValue AS DefaultValue, FCC.MaxRange AS MaxRange, FCC.AttachmentPath AS AttachmentPath, FCC.IsIdentity AS IsIdentity, FCC.UniqueGroup AS UniqueGroup,
				FCC.IsDmlControl AS IsDmlControl, FCC.IsEncrypt AS IsEncrypt, FCC.IsReturnFill AS IsReturnFill, FCC.IsNoAdd AS IsNoAdd, FCC.IsNoUpdate AS IsNoUpdate,
				FCC.FkType AS FkType, FCC.FkTable AS FkTable, '['+@FKColumn+']' AS  FkColumn, FCC.FkData AS FkData, ISNULL(FCC.FkData1, '') AS FkData1,
				ISNULL(FCC.FkData2, '') AS FkData2, FCC.AdditionalConditions AS AdditionalConditions, FCC.FillEvent AS FillEvent, FCC.FkOrder AS FkOrder,
				FCC.FkDelete AS FkDelete, FCC.FkNotActive AS FkNotActive, FCC.FkVersion AS FkVersion, FCC.FkShowActive AS FkShowActive, FCC.VersionCheck AS VersionCheck,
				FCC.ControlOrder AS ControlOrder, FCC.DefaultControl AS DefaultControl, FCC.ButtonID AS ButtonID, FCC.DependentFlag AS DependentFlag,
				ISNULL(FCC.IsSelectAll, 0) AS SelectAll, FCC.ControlEventType AS ControlEventType, FCC.ValidationEventType AS ValidationEventType,
				FCC.FillEventType AS FillEventType, 0 AS IsDataSource, 0 AS ColumnWidth, ISNULL(FCC.DataTreeCondition, '') AS DataTreeCondition, 0 AS IsUTC,
				0 AS DependentType,	ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, ISNULL(FCC.IsCurrency, 0) AS IsCurrency,
				ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, ISNULL(FCC.IsIndex, 0) AS IsIndex,
				ISNULL((SELECT TOP 1 FU.PropertyValue FROM FormControlPropertyConfig FU WHERE FU.FormID = @IN_FormID AND FU.ControlID = FCC.ReferenceID AND FU.PropertyName = 'File Upload' AND FU.Type = 'Control' AND FU.PropertyType = 'Control' AND FU.IsDeleted = 0), 0) AS IsUpload, 
				ISNULL((SELECT TOP 1 FD.PropertyValue FROM FormControlPropertyConfig FD WHERE FD.FormID = @IN_FormID AND FD.ControlID = FCC.ReferenceID AND FD.PropertyName = 'File Download' AND FD.Type = 'Control' AND FD.PropertyType = 'Control' AND FD.IsDeleted = 0), 0) AS IsDownload, 
				ISNULL((SELECT TOP 1 FV.PropertyValue FROM FormControlPropertyConfig FV WHERE FV.FormID = @IN_FormID AND FV.ControlID = FCC.ReferenceID AND FV.PropertyName = 'File View' AND FV.Type = 'Control' AND FV.PropertyType = 'Control' AND FV.IsDeleted = 0), 0) AS IsView, 
				ISNULL((SELECT TOP 1 FDE.PropertyValue FROM FormControlPropertyConfig FDE WHERE FDE.FormID = @IN_FormID AND FDE.ControlID = FCC.ReferenceID AND FDE.PropertyName = 'File Delete' AND FDE.Type = 'Control' AND FDE.PropertyType = 'Control' AND FDE.IsDeleted = 0), 0) AS IsDelete,
				0 AS IsPrimary, 0 AS IsFixed, ISNULL(FCC.FilterConditions, '') AS FilterConditions,	'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn,
				0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 0 AS DateFilterType, ISNULL(FCC.ColumnCreation, 0) AS ColumnCreation,
				ISNULL(FCC.DataVariable, 1) AS DataVariable, ISNULL(FCC.IsAutoGenerate, 0) AS IsAutoGenerate, '' AS DateDifference
			FROM FormControlConfig FCC
				JOIN CmnCodeMaster CM ON CM.Type = 'Control Type' AND CM.CodemasterID = FCC.ControlType AND ISNULL(CM.Description, '') <> ''
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE  FCC.FormID = @IN_FormID AND FCC.ReferenceID =  @IN_ControlID AND FCC.TabID = @IN_TabID  AND FCC.IsIdentity = 0
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
          END
		  ELSE 
		   BEGIN 
		    SELECT FCC.FormID AS FormID, FCC.TabID AS TabID, FCC.GroupID AS GroupID, FCC.ReferenceID AS ControlID, FCC.ReferenceID AS ColumnID, 
				ISNULL(FCC.Name, '') AS ControlName, FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2, FCC.ControlType AS ControlTypeID,
				CM.Description AS ControlType, ISNULL(CM.ImagePath, '') AS ControlIcon, FCC.DataType AS DataType, FCC.Visibility AS Visibility, FCC.Readonly AS ReadOnly,
				FCC.IsMandatory AS IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength AS MaxLength, 
				FCC.Events AS Events, FCC.ValidationEvent AS ValidationEvent, FCC.SearchApplicable AS SearchApplicable, FCC.SelectApplicable AS SelectApplicable,
				FCC.DefaultValue AS DefaultValue, FCC.MaxRange AS MaxRange, FCC.AttachmentPath AS AttachmentPath, FCC.IsIdentity AS IsIdentity, FCC.UniqueGroup AS UniqueGroup,
				FCC.IsDmlControl AS IsDmlControl, FCC.IsEncrypt AS IsEncrypt, FCC.IsReturnFill AS IsReturnFill, FCC.IsNoAdd AS IsNoAdd, FCC.IsNoUpdate AS IsNoUpdate,
				FCC.FkType AS FkType, FCC.FkTable AS FkTable, FCC.FkColumn  AS FkColumn, FCC.FkData AS FkData, ISNULL(FCC.FkData1, '') AS FkData1,
				ISNULL(FCC.FkData2, '') AS FkData2, FCC.AdditionalConditions AS AdditionalConditions, FCC.FillEvent AS FillEvent, FCC.FkOrder AS FkOrder,
				FCC.FkDelete AS FkDelete, FCC.FkNotActive AS FkNotActive, FCC.FkVersion AS FkVersion, FCC.FkShowActive AS FkShowActive, FCC.VersionCheck AS VersionCheck,
				FCC.ControlOrder AS ControlOrder, FCC.DefaultControl AS DefaultControl, FCC.ButtonID AS ButtonID, FCC.DependentFlag AS DependentFlag,
				ISNULL(FCC.IsSelectAll, 0) AS SelectAll, FCC.ControlEventType AS ControlEventType, FCC.ValidationEventType AS ValidationEventType,
				FCC.FillEventType AS FillEventType, 0 AS IsDataSource, 0 AS ColumnWidth, ISNULL(FCC.DataTreeCondition, '') AS DataTreeCondition, 0 AS IsUTC,
				0 AS DependentType,	ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, ISNULL(FCC.IsCurrency, 0) AS IsCurrency,
				ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, ISNULL(FCC.IsIndex, 0) AS IsIndex,
				ISNULL((SELECT TOP 1 FU.PropertyValue FROM FormControlPropertyConfig FU WHERE FU.FormID = @IN_FormID AND FU.ControlID = FCC.ReferenceID AND FU.PropertyName = 'File Upload' AND FU.Type = 'Control' AND FU.PropertyType = 'Control' AND FU.IsDeleted = 0), 0) AS IsUpload, 
				ISNULL((SELECT TOP 1 FD.PropertyValue FROM FormControlPropertyConfig FD WHERE FD.FormID = @IN_FormID AND FD.ControlID = FCC.ReferenceID AND FD.PropertyName = 'File Download' AND FD.Type = 'Control' AND FD.PropertyType = 'Control' AND FD.IsDeleted = 0), 0) AS IsDownload, 
				ISNULL((SELECT TOP 1 FV.PropertyValue FROM FormControlPropertyConfig FV WHERE FV.FormID = @IN_FormID AND FV.ControlID = FCC.ReferenceID AND FV.PropertyName = 'File View' AND FV.Type = 'Control' AND FV.PropertyType = 'Control' AND FV.IsDeleted = 0), 0) AS IsView, 
				ISNULL((SELECT TOP 1 FDE.PropertyValue FROM FormControlPropertyConfig FDE WHERE FDE.FormID = @IN_FormID AND FDE.ControlID = FCC.ReferenceID AND FDE.PropertyName = 'File Delete' AND FDE.Type = 'Control' AND FDE.PropertyType = 'Control' AND FDE.IsDeleted = 0), 0) AS IsDelete,
				0 AS IsPrimary, 0 AS IsFixed, ISNULL(FCC.FilterConditions, '') AS FilterConditions,	'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn,
				0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 0 AS DateFilterType, ISNULL(FCC.ColumnCreation, 0) AS ColumnCreation,
				ISNULL(FCC.DataVariable, 1) AS DataVariable, ISNULL(FCC.IsAutoGenerate, 0) AS IsAutoGenerate, '' AS DateDifference
			FROM FormControlConfig FCC
				JOIN CmnCodeMaster CM ON CM.Type = 'Control Type' AND CM.CodemasterID = FCC.ControlType AND ISNULL(CM.Description, '') <> ''
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_FormID AND FCC.ReferenceID NOT IN (@IN_ControlID) AND FCC.ControlType <> 18 AND FCC.IsIdentity = 0-- AND FCC.TableColumn <> 'ReferenceID'
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
          END
		END
		ELSE IF @IN_Type = 'GridControlColumns'
		BEGIN
			SELECT FCC.FormID AS FormID, FCC.TabID AS TabID, FCC.GroupID AS GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID,
				COALESCE(CM.Name, FCC.DisplayName, '') AS ControlName, FCC.ColumnName AS TableColumn, FCC.ColumnName1 AS ColumnName1, FCC.ColumnName2 AS ColumnName2, FCC.ControlType AS ControlTypeID,
				CT.Description AS ControlType, ISNULL(CT.ImagePath, '') AS ControlIcon, FCC.DataType AS DataType, FCC.Visibility AS Visibility, FCC.Readonly AS ReadOnly,
				FCC.IsMandatory AS IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength AS MaxLength, 
				FCC.Events AS Events, FCC.ValidationEvent AS ValidationEvent, FCC.SearchApplicable AS SearchApplicable, FCC.SelectApplicable AS SelectApplicable,
				FCC.DefaultValue AS DefaultValue, FCC.MaxRange AS MaxRange, FCC.AttachmentPath AS AttachmentPath, FCC.IsIdentity AS IsIdentity, FCC.UniqueGroup AS UniqueGroup,
				FCC.IsDmlControl AS IsDmlControl, 0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate,
				FCC.FkType AS FkType, FCC.FkTable AS FkTable, FCC.FkColumn AS FkColumn, FCC.FkData AS FkData, '' AS FkData1,
				'' AS FkData2,	FCC.AdditionalConditions AS AdditionalConditions, '' AS FillEvent, FCC.FkOrder AS FkOrder,
				FCC.FkDelete AS FkDelete, FCC.FkNotActive AS FkNotActive, FCC.FkVersion AS FkVersion, FCC.FkShowActive AS FkShowActive, FCC.VersionCheck AS VersionCheck,
				FCC.ColumnOrder AS ControlOrder, 0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag AS DependentFlag,
				FCC.SelectAll AS SelectAll, FCC.ControlEventType AS ControlEventType, FCC.ValidationEventType AS ValidationEventType,
				0 AS FillEventType, 0 AS IsDataSource, FCC.ColumnWidth AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC,
				FCC.DependentType AS DependentType,	ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, ISNULL(FCC.IsCurrency, 0) AS IsCurrency,
				ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, 0 AS IsIndex,
				ISNULL((SELECT TOP 1 FU.PropertyValue FROM FormControlPropertyConfig FU WHERE FU.FormID = @IN_FormID AND FU.ControlID = FCC.ReferenceID AND FU.PropertyName = 'File Upload' AND FU.Type = 'Control' AND FU.PropertyType = 'Control' AND FU.IsDeleted = 0), 0) AS IsUpload, 
				ISNULL((SELECT TOP 1 FD.PropertyValue FROM FormControlPropertyConfig FD WHERE FD.FormID = @IN_FormID AND FD.ControlID = FCC.ReferenceID AND FD.PropertyName = 'File Download' AND FD.Type = 'Control' AND FD.PropertyType = 'Control' AND FD.IsDeleted = 0), 0) AS IsDownload, 
				ISNULL((SELECT TOP 1 FV.PropertyValue FROM FormControlPropertyConfig FV WHERE FV.FormID = @IN_FormID AND FV.ControlID = FCC.ReferenceID AND FV.PropertyName = 'File View' AND FV.Type = 'Control' AND FV.PropertyType = 'Control' AND FV.IsDeleted = 0), 0) AS IsView, 
				ISNULL((SELECT TOP 1 FDE.PropertyValue FROM FormControlPropertyConfig FDE WHERE FDE.FormID = @IN_FormID AND FDE.ControlID = FCC.ReferenceID AND FDE.PropertyName = 'File Delete' AND FDE.Type = 'Control' AND FDE.PropertyType = 'Control' AND FDE.IsDeleted = 0), 0) AS IsDelete,
				0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions, '' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn,
				0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 0 AS DateFilterType, 0 AS ColumnCreation,
				0 AS DataVariable, 0 AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference
			FROM FormControlColumnsConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType  AND ISNULL(CT.Description, '') <> ''
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'GridControlColumns' AND CM.ControlID = FCC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_FormID AND FCC.TabID = @IN_TabID AND FCC.ControlID NOT IN (@IN_ControlID) AND FCC.IsIdentity = 0
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
		END
		ELSE IF @IN_Type = 'FilterColumns'
		BEGIN
			SELECT FCC.FormID AS FormID, 0 AS TabID, 0 AS GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID,
				COALESCE(CM.Name, FCC.Name, '') AS ControlName, FCC.TableColumn AS TableColumn, '' AS ColumnName1, '' AS ColumnName2,
				FCC.ControlType AS ControlTypeID, ISNULL(CT.Description, '') AS ControlType, ISNULL(CT.ImagePath, '') AS ControlIcon,
				FCC.DataType AS DataType, FCC.Visibility AS Visibility, FCC.Readonly AS ReadOnly, FCC.IsMandatory AS IsMandatory,
				ISNULL(FCC.IsMobile, 0) AS IsMobile, 0 AS IsWizard, FCC.MaxLength AS MaxLength,	FCC.Events AS Events, FCC.ValidationEvent AS ValidationEvent,
				0 AS SearchApplicable, FCC.SelectApplicable AS SelectApplicable, FCC.DefaultValue AS DefaultValue, FCC.MaxRange AS MaxRange, '' AS AttachmentPath, 0 AS IsIdentity,
				0 AS UniqueGroup, 0 AS IsDmlControl, 0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType AS FkType, FCC.FkTable AS FkTable,
				FCC.FkColumn AS FkColumn, FCC.FkData AS FkData, '' AS FkData1, '' AS FkData2, FCC.AdditionalConditions AS AdditionalConditions,
				ISNULL(FCC.FillEvent, '') AS FillEvent, FCC.FkOrder AS FkOrder, FCC.FkDelete AS FkDelete, FCC.FkNotActive AS FkNotActive, FCC.FkVersion AS FkVersion,
				0 AS FkShowActive, 0 AS VersionCheck, FCC.SearchOrder AS ControlOrder, 0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag AS DependentFlag,
				0 AS SelectAll, FCC.ControlEventType AS ControlEventType, FCC.ValidationEventType AS ValidationEventType, ISNULL(FCC.FillEventType, 0) AS FillEventType,
				0 AS IsDataSource, 0 AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, 0 AS DependentType, 0 AS DataBaseDecimalLength, 0 AS DecimalLength, 0 AS IsCurrency,
				'' AS CurrencyColumn, 0 AS IsIndex,	0 AS IsUpload, 0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' AS FilterConditions, 
				'' AS GridHeader, 0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 
				ISNULL(FCC.DateFilterType, 0) AS DateFilterType, 0 AS ColumnCreation, ISNULL(FCC.DataVariable, 1) AS DataVariable, 0 AS IsAutoGenerate,
				ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), '') AS DateDifference
			FROM FormSearchControlsConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'Filters' AND CM.ControlID = FCC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_FormID AND FCC.ReferenceID <> @IN_ControlID
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
		END
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormGetListDetails]'
GO

CREATE PROCEDURE [dbo].[spFormGetListDetails] (@IN_FormConfigID BIGINT, @IN_Tab VARCHAR(100), @IN_LanguageID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50),
						@TabID BIGINT = 0,
						@GroupID BIGINT = 0,
						@ControlID BIGINT = 0

		SELECT FC.ReferenceID AS FormID, FC.Name AS FormName, ISNULL(FC.FormType, 0) AS FormType, 
			FTC.ReferenceID AS TabID, FTC.Name AS TabName, ISNULL(FTC.IsMandatory, 0) AS MandatoryTab,
			FGC.ReferenceID AS GroupboxID, FGC.Name AS GroupboxName, ISNULL(FGC.CommonGroup, 0) AS CommonGroup,
			CASE WHEN ISNULL(FGC.TableName, '') <> '' THEN ISNULL(FGC.TableName, '') WHEN ISNULL(FTC.TableName, '') <> '' THEN ISNULL(FTC.TableName, '')
				ELSE (CASE WHEN ISNULL(FC.Source, 0) = 2 THEN ISNULL(FC.ViewName, '') ELSE ISNULL(FC.TableName, '') END) END AS TableName, 
			FGC.DefaultGroupbox AS DefaultControl, FGC.ButtonID AS ButtonID
		FROM FormConfiguration FC
			JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID AND FTC.IsDeleted = 0
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
		WHERE FC.ReferenceID = @IN_FormConfigID
		ORDER BY FTC.TabOrder, FGC.GroupOrder;

		 SELECT FCC.FormID, FCC.TabID, FCC.GroupID, FCC.ReferenceID AS ControlID, FCC.TableColumn, FCC.ControlType, 
			CONCAT(COALESCE(CM.Name, FCC.Name, ''), CASE WHEN FCC.DependentFlag = 1 THEN ' - Dependent' ELSE '' END) AS ControlName,
			ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.ControlOrder,
			FTC.Name AS TabName, FGC.Name AS GroupboxName, FCC.DependentFlag AS EventFlag
		FROM FormControlConfig FCC
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FormControls' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FCC.FormID = @IN_FormConfigID AND (CT.CodemasterID IN (18, 19, 24, 25) OR FCC.DependentFlag = 1)
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY FTC.TabOrder, FGC.GroupOrder, FCC.ControlOrder;

		SELECT FCC.FormID, FCC.TabID, FCC.GroupID, FCC.ReferenceID AS ControlID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, FCC.TableColumn, FCC.ControlType, 
			ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.ControlOrder,
			FTC.Name AS TabName, FGC.Name AS GroupboxName
		FROM FormControlConfig FCC
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FormControls' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FCC.FormID = @IN_FormConfigID AND FCC.SearchApplicable = 1
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY FTC.TabOrder, FGC.GroupOrder, FCC.ControlOrder;

		SELECT FCC.FormID, FCC.TabID, FCC.GroupID, FCC.ReferenceID AS ControlID, COALESCE(CM.Name, FCC.Name, '') AS ControlName, FCC.TableColumn, FCC.ControlType, 
			ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, FCC.ControlOrder, FTC.Name AS TabName, FGC.Name AS GroupboxName, FGC.DefaultGroupbox AS DefaultControl
		FROM FormControlConfig FCC
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'FormControls' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FCC.FormID = @IN_FormConfigID --AND CT.CodemasterID IN (1, 2, 7, 16, 18, 19, 20, 24, 25, 27)
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY FTC.TabOrder, FGC.GroupOrder, FCC.ControlOrder;

		SELECT FCC.FormID, FCC.ControlID, FCC.ReferenceID AS SearchID, FCC.DependentFlag, 
			CONCAT(COALESCE(CM.Name, FCC.Name, ''), CASE WHEN FCC.DependentFlag = 1 THEN ' - Dependent' ELSE '' END) AS ControlName
		FROM FormSearchControlsConfig FCC
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'Filters' AND CM.ControlID = FCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FCC.FormID = @IN_FormConfigID AND (FCC.DependentFlag = 1 OR FCC.ControlType IN (24, 25))
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY FCC.SearchOrder;

		SELECT FCC.FormID, FCC.TabID, FCC.GroupID, CCC.ReferenceID AS ControlID, (FCC.Name+'-'+CCC.DisplayName) AS ControlName, CCC.ColumnName AS TableColumn, FCC.ControlType, 
			ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, CCC.ColumnOrder, FTC.Name AS TabName, FGC.Name AS GroupboxName, CCC.ControlType AS ColumnType, 
			 CASE WHEN FCC.ControlType = 19 THEN 0 ELSE CCC.DependentFlag END AS DependentFlag
		FROM FormControlConfig FCC
			JOIN FormControlColumnsConfig CCC ON CCC.ControlID = FCC.ReferenceID AND CCC.IsDeleted = 0 AND CCC.IsIdentity = 0
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
		WHERE FCC.FormID = @IN_FormConfigID AND (CT.CodemasterID IN (18, 19, 24, 25) OR (FCC.DependentFlag = 1 AND (CCC.ControlType = 1 OR CCC.ControlType = 2 OR CCC.ControlType = 8)))
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY FTC.TabOrder, FGC.GroupOrder, FCC.ControlOrder, CCC.ColumnOrder;

		SELECT FCC.FormID, FCC.TabID, FCC.GroupID, CCC.ReferenceID AS ControlID, CCC.ColumnName, CCC.ControlType, 
			CONCAT(COALESCE(CM.Name, CCC.DisplayName, ''), CASE WHEN CCC.DependentFlag = 1 THEN ' - Dependent' ELSE '' END) AS ControlName,
			ISNULL(CT.Description, '') AS ControlTypeObject, CCC.DataType, CCC.FkType, CCC.FkTable, CCC.FkColumn, CCC.FkData, CCC.ColumnOrder,
			FTC.Name AS TabName, FGC.Name AS GroupboxName, CCC.DependentFlag AS EventFlag
		FROM FormControlColumnsConfig CCC
			JOIN FormControlConfig FCC ON FCC.FormID = CCC.FormID AND FCC.ReferenceID = CCC.ControlID AND FCC.ControlType = 19 AND FCC.IsDeleted = 0
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = CCC.ControlType
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'ControlColumns' AND CM.ControlID = CCC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE CCC.FormID = @IN_FormConfigID AND (CCC.DependentFlag = 1 OR CCC.ControlType = 24 OR CCC.ControlType = 25)
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY FTC.TabOrder, FGC.GroupOrder, FCC.ControlOrder, CCC.ColumnOrder;

		SELECT FC.ReferenceID AS ID, COALESCE(CM.Name, FC.Title, '') AS Text
		FROM FormConfiguration FC
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'Form' AND CM.ControlID = FC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FC.ReferenceID = @IN_FormConfigID;

		SELECT FC.ReferenceID AS ID, COALESCE(CM.Name, FC.DisplayName, '') AS Text
		FROM FormTabConfig FC
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'Tab' AND CM.ControlID = FC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FC.FormID = @IN_FormConfigID
			AND ISNULL(FC.IsDeleted, 0) = 0 AND ISNULL(FC.NotActive, 0) = 0 AND ISNULL(FC.IsCurrentVersion, 1) = 1
		ORDER BY FC.TabOrder;

		SELECT FC.ReferenceID AS ID, COALESCE(CM.Name, FC.DisplayName, '') AS Text
		FROM FormGroupboxConfig FC
			JOIN FormTabConfig FTC ON FTC.ReferenceID = FC.TabID AND FTC.FormID = FC.FormID
				AND ISNULL(FTC.IsDeleted, 0) = 0 AND ISNULL(FTC.NotActive, 0) = 0 AND ISNULL(FTC.IsCurrentVersion, 1) = 1
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'GroupBox' AND CM.ControlID = FC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FC.FormID = @IN_FormConfigID
			AND ISNULL(FC.IsDeleted, 0) = 0 AND ISNULL(FC.NotActive, 0) = 0 AND ISNULL(FC.IsCurrentVersion, 1) = 1
		ORDER BY FTC.TabOrder, FC.GroupOrder;

		SELECT FC.ReferenceID AS ID, COALESCE(CM.Name, FC.TypeValues, '') AS Text
		FROM FormButtonConfig FC
			LEFT JOIN FormControlMultilingual CM ON CM.ConfigType = 'Button' AND CM.ControlID = FC.ReferenceID AND CM.LanguageID = @IN_LanguageID
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FC.FormID = @IN_FormConfigID
			AND ISNULL(FC.IsDeleted, 0) = 0 AND ISNULL(FC.NotActive, 0) = 0 AND ISNULL(FC.IsCurrentVersion, 1) = 1
		ORDER BY FC.OrderBy;

		SELECT FC.ReferenceID AS ID, ISNULL(FC.TypeValues, '') AS Text
		FROM FormButtonConfig FC
		WHERE FC.FormID = @IN_FormConfigID AND ButtonType = 5 AND ButtonTriggerEvent LIKE '%QUICK.moveCardToTarget%'
			AND ISNULL(FC.IsDeleted, 0) = 0 AND ISNULL(FC.NotActive, 0) = 0 AND ISNULL(FC.IsCurrentVersion, 1) = 1
		ORDER BY FC.OrderBy;

		SELECT @TabID = TC.ReferenceID, @GroupID = GC.ReferenceID, @ControlID = FC.ReferenceID
		FROM FormTabConfig TC 
			JOIN FormGroupboxConfig GC ON GC.FormID = @IN_FormConfigID AND GC.TabID = TC.ReferenceID AND GC.IsDeleted = 0 AND GC.CommonGroup = 1 AND GC.GroupOrder = 1
			JOIN FormControlConfig FC ON FC.GroupID = GC.ReferenceID AND FC.IsDeleted = 0 AND FC.OrderBy = 1
		WHERE TC.FormID = @IN_FormConfigID AND TC.IsDeleted = 0 AND TC.TabOrder = 1;

		SELECT @IN_FormConfigID AS FormID, @TabID AS TabID, @GroupID AS GroupID, @ControlID AS ControlID, TypeValues AS ButtonName, OrderBy AS OrderBy, ReferenceID AS ButtonID
		FROM FormButtonConfig WHERE FormID = @IN_FormConfigID AND (ButtonType = 11 OR ButtonType = 12) AND IsDeleted = 0;

		SELECT FCC.DashboardID AS FormID, 0 AS TabID, 0 AS GroupID, FCC.ReferenceID AS ControlID, FCC.ReferenceID AS SearchID, FCC.ColumnName AS ColumnName,FCC.ControlType AS ControlTypeID,
			FCC.AliasName AS AliasName,FCC.AliasName + (CASE WHEN FCC.DependentFlag = 1 THEN ' - Dependent' ELSE '' END) AS ControlName,
			CM.Description AS ControlTypeObject, FCC.DataType, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.SearchOrder,
			FCC.DependentFlag AS DependentFlag, FCC.Event AS Event
		FROM ChartSearchColumnConfig FCC
			JOIN CmnCodeMaster CM ON CM.Type = 'Control Type' AND CM.CodemasterID = FCC.ControlType AND ISNULL(CM.Description, '') <> ''
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FCC.DashboardID = @IN_FormConfigID AND FCC.IsDeleted = 0 AND FCC.DependentFlag = 1
		ORDER BY FCC.SearchOrder;

		SELECT FCC.ReportID AS FormID, 0 AS TabID, 0 AS GroupID, FCC.ReferenceID AS ControlID, FCC.ReferenceID AS SearchID, FCC.ColumnName AS ColumnName,FCC.ControlType AS ControlTypeID,
			FCC.AliasName AS AliasName,FCC.AliasName + (CASE WHEN FCC.DependentFlag = 1 THEN ' - Dependent' ELSE '' END) AS ControlName,
			CM.Description AS ControlTypeObject, FCC.DataType, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.SearchOrder,
			FCC.DependentFlag AS DependentFlag, FCC.Event AS Event
		FROM ReportSearchColumnConfig FCC
			JOIN CmnCodeMaster CM ON CM.Type = 'Control Type' AND CM.CodemasterID = FCC.ControlType AND ISNULL(CM.Description, '') <> ''
				AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
		WHERE FCC.ReportID = @IN_FormConfigID AND FCC.IsDeleted = 0 AND FCC.DependentFlag = 1
		ORDER BY FCC.SearchOrder;

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormGetRearrangementData]'
GO

CREATE PROCEDURE [dbo].[spFormGetRearrangementData] (@IN_FormConfigID BIGINT, @IN_RearrangeType VARCHAR(100), @IN_MainID BIGINT, @IN_Flag INT, @IN_UserID INT)
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50)

		IF @IN_RearrangeType = 'MoveControl' 
		BEGIN
			;WITH CTE AS (
				SELECT FCC.ReferenceID AS ID,
					ROW_NUMBER() OVER (PARTITION BY 
					CASE WHEN FCC.ControlType IN (9, 10, 12, 13, 14, 15, 30, 31) THEN FCC.Name ELSE FCC.TableColumn END, FCC.ControlType 
					ORDER BY FCC.ControlOrder ASC) AS RowNum
				FROM FormControlConfig FCC			
				WHERE FCC.FormID = @IN_FormConfigID AND FCC.GroupID = @IN_MainID AND ISNULL(FCC.IsIdentity, 0) = 0
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			)
			SELECT FCC.ReferenceID AS ID, CONCAT(FGC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.ControlOrder AS ControlOrder
			FROM CTE
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CTE.ID
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				JOIN FormTabConfig FTC ON FTC.FormID = FCC.FormID AND FTC.ReferenceID = FCC.TabID
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE CTE.RowNum = 1
			ORDER BY FTC.TabOrder, FGC.GroupOrder, FCC.ControlOrder;
		END
		ELSE IF @IN_RearrangeType = 'MoveGroupbox'
		BEGIN
			SELECT FGC.ReferenceID AS ID, CONCAT(FTC.Name, ' - ', FGC.Name) AS Text, FGC.GroupOrder AS ControlOrder
			FROM FormTabConfig FTC 
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FTC.FormID AND FGC.TabID = FTC.ReferenceID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			WHERE FTC.FormID = @IN_FormConfigID AND FTC.ReferenceID = @IN_MainID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			ORDER BY FTC.TabOrder, FGC.GroupOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopyGroupbox' AND @IN_Flag = 1) 				
		BEGIN
			SELECT FGC.ReferenceID AS ID, CONCAT(FTC.Name, ' - ', FGC.Name) AS Text, FGC.GroupOrder AS ControlOrder
			FROM FormConfiguration FC 
				LEFT JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				LEFT JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			WHERE FC.ReferenceID = @IN_MainID 
				AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
			ORDER BY FTC.TabOrder, FGC.GroupOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopyGroupbox' AND @IN_Flag = 2)
		BEGIN
			SELECT FGC.ReferenceID AS ID, CONCAT(FTC.Name, ' - ', FGC.Name) AS Text, FGC.GroupOrder AS ControlOrder
			FROM FormTabConfig FTC 
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FTC.FormID AND FGC.TabID = FTC.ReferenceID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			WHERE FTC.FormID = @IN_FormConfigID AND FTC.ReferenceID = @IN_MainID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			ORDER BY FTC.TabOrder, FGC.GroupOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopyTab' AND @IN_MainID <> @IN_FormConfigID)
		BEGIN
			SELECT FTC.ReferenceID AS ID, FTC.Name AS Text, FTC.TabOrder AS ControlOrder
			FROM FormConfiguration FC 
				LEFT JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			WHERE FC.ReferenceID = @IN_MainID 
				AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
			ORDER BY FTC.TabOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopyTab' AND @IN_MainID = @IN_FormConfigID)
		BEGIN
			SELECT FTC.ReferenceID AS ID, FTC.Name AS Text, FTC.TabOrder AS ControlOrder
			FROM FormConfiguration FC 
				LEFT JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
			WHERE FC.ReferenceID = @IN_FormConfigID 
				AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
			ORDER BY FTC.TabOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopyControl' AND @IN_Flag = 1)
		BEGIN
			;WITH CTE AS (
				SELECT FCC.ReferenceID AS ID,
					ROW_NUMBER() OVER (PARTITION BY 
					CASE WHEN FCC.ControlType IN (9, 10, 12, 13, 14, 15, 30, 31) THEN FCC.Name ELSE FCC.TableColumn END, FCC.ControlType 
					ORDER BY FCC.ControlOrder ASC) AS RowNum
				FROM FormControlConfig FCC			
				WHERE FCC.FormID = @IN_MainID AND ISNULL(FCC.IsIdentity, 0) = 0
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			)
			SELECT FCC.ReferenceID AS ID, CONCAT(FGC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.ControlOrder AS ControlOrder,
				FTC.TabOrder AS TabOrder, FGC.GroupOrder AS GroupOrder
			FROM CTE
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CTE.ID
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				JOIN FormTabConfig FTC ON FTC.FormID = FCC.FormID AND FTC.ReferenceID = FCC.TabID
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.ControlType IN (9, 10, 12, 13, 14, 15, 30, 31) AND CASE WHEN CTE.RowNum % 2 = 1 THEN 1 END = 1
			UNION ALL
			SELECT FCC.ReferenceID AS ID, CONCAT(FGC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.ControlOrder AS ControlOrder,
				FTC.TabOrder AS TabOrder, FGC.GroupOrder AS GroupOrder
			FROM CTE
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CTE.ID
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				JOIN FormTabConfig FTC ON FTC.FormID = FCC.FormID AND FTC.ReferenceID = FCC.TabID
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.ControlType NOT IN (9, 10, 12, 13, 14, 15, 30, 31)
			ORDER BY TabOrder, GroupOrder, ControlOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopyControl' AND @IN_Flag = 3)
		BEGIN
			;WITH CTE AS (
				SELECT FCC.ReferenceID AS ID,
					ROW_NUMBER() OVER (PARTITION BY 
					CASE WHEN FCC.ControlType IN (9, 10, 12, 13, 14, 15, 30, 31) THEN FCC.Name ELSE FCC.TableColumn END, FCC.ControlType 
					ORDER BY FCC.ControlOrder ASC) AS RowNum
				FROM FormControlConfig FCC
				WHERE FCC.FormID = @IN_FormConfigID AND FCC.GroupID = @IN_MainID AND ISNULL(FCC.IsIdentity, 0) = 0
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			)
			SELECT FCC.ReferenceID AS ID, CONCAT(FGC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.ControlOrder AS ControlOrder,
				FTC.TabOrder AS TabOrder, FGC.GroupOrder AS GroupOrder
			FROM CTE
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CTE.ID
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				JOIN FormTabConfig FTC ON FTC.FormID = FCC.FormID AND FTC.ReferenceID = FCC.TabID
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.ControlType IN (9, 10, 12, 13, 14, 15, 30, 31) AND CASE WHEN CTE.RowNum % 2 = 1 THEN 1 END = 1
			UNION ALL
			SELECT FCC.ReferenceID AS ID, CONCAT(FGC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.ControlOrder AS ControlOrder,
				FTC.TabOrder AS TabOrder, FGC.GroupOrder AS GroupOrder
			FROM CTE
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CTE.ID
				JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
					AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				JOIN FormTabConfig FTC ON FTC.FormID = FCC.FormID AND FTC.ReferenceID = FCC.TabID
					AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.ControlType NOT IN (9, 10, 12, 13, 14, 15, 30, 31)
			ORDER BY TabOrder, GroupOrder, ControlOrder;
		END
		ELSE IF (@IN_RearrangeType = 'CopySearch' AND @IN_Flag = 1)
		BEGIN
			;WITH CTE AS (
				SELECT MIN(FSC.ReferenceID) AS ID
				FROM FormSearchControlsConfig FSC
				WHERE FSC.FormID = @IN_MainID
					AND FSC.IsDeleted = 0 AND FSC.NotActive = 0 AND FSC.IsCurrentVersion = 1
				GROUP BY FSC.Name, FSC.ControlType
			)
			SELECT FCC.ReferenceID AS ID, CONCAT(FC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.SearchOrder AS ControlOrder
			FROM CTE
				JOIN FormSearchControlsConfig FCC ON FCC.ReferenceID = CTE.ID
				JOIN FormControlConfig FC ON FC.ReferenceID = FCC.ControlID
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			ORDER BY FCC.OrderBy;
		END
		ELSE IF (@IN_RearrangeType = 'CopySearch' AND @IN_Flag = 4)
		BEGIN
			;WITH CTE AS (
				SELECT MIN(FSC.ReferenceID) AS ID
				FROM FormSearchControlsConfig FSC
				WHERE FSC.FormID = @IN_FormConfigID AND (FSC.ButtonID = @IN_MainID OR (FSC.ControlID = @IN_MainID AND ISNULL(FSC.ButtonID, 0) = 0))
					AND FSC.IsDeleted = 0 AND FSC.NotActive = 0 AND FSC.IsCurrentVersion = 1
				GROUP BY FSC.Name, FSC.ControlType
			)
			SELECT FCC.ReferenceID AS ID, CONCAT(FC.Name, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.OrderBy AS OrderBy, FCC.SearchOrder AS ControlOrder
			FROM CTE
				JOIN FormSearchControlsConfig FCC ON FCC.ReferenceID = CTE.ID AND ISNULL(FCC.ButtonID, 0) = 0
				JOIN FormControlConfig FC ON FC.ReferenceID = FCC.ControlID
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			UNION
			SELECT FCC.ReferenceID AS ID, CONCAT(FB.TypeValues, ' - ', FCC.Name, ' - ', CT.TypeValues) AS Text, FCC.OrderBy AS OrderBy, FCC.SearchOrder AS ControlOrder
			FROM CTE
				JOIN FormSearchControlsConfig FCC ON FCC.ReferenceID = CTE.ID AND ISNULL(FCC.ButtonID, 0) <> 0
				JOIN FormButtonConfig FB ON FB.FormID = FCC.FormID  AND FB.ReferenceID = FCC.ButtonID
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			ORDER BY ControlOrder;
		END
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormGetRearrangementList]'
GO

CREATE PROCEDURE [dbo].[spFormGetRearrangementList] (@IN_FormConfigID BIGINT, @IN_UserID INT)
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50)

		SELECT FGC.ReferenceID AS ID, CONCAT(FTC.Name, ' - ', FGC.Name) AS Text
		FROM FormGroupboxConfig FGC
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
		WHERE FGC.FormID = @IN_FormConfigID AND ISNULL(FGC.CommonGroup, 0) = 0
			AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			AND NOT EXISTS (SELECT 1 FROM FormControlConfig FCC WHERE FCC.FormID = FGC.FormID 
				AND FCC.TabID = FGC.TabID AND FCC.GroupID = FGC.ReferenceID  AND FCC.ControlType IN (17, 18, 19)
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1)
		ORDER BY FTC.TabOrder, FGC.GroupOrder;

		SELECT FTC.ReferenceID AS ID, ISNULL(FTC.Name, '') AS Text
		FROM FormTabConfig FTC
		WHERE FTC.FormID = @IN_FormConfigID
			AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1;

		SELECT FC.ReferenceID AS ID, ISNULL(FC.Name, '') AS Text
		FROM FormConfiguration FC
		WHERE FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
		ORDER BY FC.Name ASC;

		SELECT FC.ReferenceID AS ID, ISNULL(FC.Name, '') AS Text
		FROM FormConfiguration FC WHERE ISNULL(FC.ReferenceID, 0) = @IN_FormConfigID 
			AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
		ORDER BY FC.ReferenceID;

		SELECT FCC.ReferenceID AS ID, ISNULL(FCC.Name, '') AS Text
		FROM FormControlConfig FCC
			JOIN FormGroupboxConfig FGC ON FGC.FormID = FCC.FormID AND FGC.TabID = FCC.TabID AND FGC.ReferenceID = FCC.GroupID
				AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
			JOIN FormTabConfig FTC ON FTC.FormID = FGC.FormID AND FTC.ReferenceID = FGC.TabID
				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
		WHERE FCC.FormID = @IN_FormConfigID AND FCC.SearchApplicable = 1
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		UNION
		SELECT FCC.ReferenceID AS ID, ISNULL(FCC.TypeValues, '') AS Text
		FROM FormButtonConfig FCC	
		WHERE FCC.FormID = @IN_FormConfigID AND FCC.ButtonType IN (11, 12)
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY ID DESC;
		
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormGetSwitchFormData]'
GO

CREATE PROCEDURE [dbo].[spFormGetSwitchFormData] (
	@IN_FormConfigID BIGINT, 
	@IN_FormType INT = 0, 
	@IN_FormID BIGINT, 
	@IN_UserID INT = 0
)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@ControlID BIGINT,
				@FKTable VARCHAR(100) = '',
				@FKColumn NVARCHAR(MAX) = '';

		IF @IN_FormType = 1
		BEGIN
			SELECT TOP 1 @ControlID = ReferenceID, 
				@FKTable = ISNULL(FKTable, '') 
			FROM FormControlConfig 
			WHERE FormID = @IN_FormConfigID 
				AND ControlType = 18 AND IsDeleted = 0;
 		END
		ELSE IF @IN_FormType = 3
		BEGIN
			SELECT TOP 1 @ControlID = ReferenceID, 
				@FKTable = ISNULL(FKTable, '') 
			FROM FormControlConfig 
			WHERE FormID = @IN_FormConfigID AND ControlType = 19
				 AND Events LIKE '%STP.search%' AND IsDeleted = 0;
 		END

		SELECT ISNULL(COLUMN_NAME, 0) AS ColumnName, 
			ISNULL(COLUMN_NAME, 0) AS ColumnID
		FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE TABLE_NAME = @FKTable
		ORDER BY COLUMN_NAME; 

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormSaveDefaultProperties]'
GO

CREATE PROCEDURE [dbo].[spFormSaveDefaultProperties](@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
							@UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@CompanyID INT = 0

			SELECT @CompanyID = ISNULL(CompanyID, 0)
			FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID;

			/*Control Properties*/
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Grid Header', MT.Name, '', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Grid Header' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Grid Type', 1, '', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Grid Type' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Grid Access Type', '1', '', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Grid Access Type' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Row Event', 'STP.rowClickEvent', '', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 19
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Row Event' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Row Event', 'STP.gridListRowEvent(gridID, rowData, rowID)', '', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Row Event' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Primary Checkbox', 0, '', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 3
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Primary Checkbox' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Order By', 'DESC', 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 18 AND MT.FkOrder = 5
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Order By' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'UTC', 1, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 5
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'UTC' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Decimal Length', 2, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 8
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Decimal Length' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Decimal Currency', 0, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 8
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Decimal Currency' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'File Upload', 1, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'File Upload' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'File Download', 1, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'File Download' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'File View', 1, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'File View' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'File Delete', 1, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control'
					AND ControlID = MT.ReferenceID AND PropertyName = 'File Delete' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Control', 'Type', 0, 'Control', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 8
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Control' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Type' AND IsDeleted = 0);

			/*Control Column Properties*/
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Grid Header', MT.DisplayName, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Grid Header' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Grid Type', 1, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Grid Type' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Grid Access Type', '1', 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Grid Access Type' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Row Event', 'STP.rowClickEvent', 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 19
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Row Event' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Row Event', 'CMNF.popupGridRowEvent(gridID, rowData, rowID)', 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND (MT.ControlType = 24 OR MT.ControlType = 25)
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Row Event' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Primary Checkbox', 0, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 3
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Primary Checkbox' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Order By', 'DESC', 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 18 AND MT.FkOrder = 5
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'Order By' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'UTC', 1, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 5
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'UTC' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Decimal Length', 2, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 8
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Decimal Length' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Decimal Currency', 0, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.DataType = 8
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Decimal Currency' AND IsDeleted = 0);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'File Upload', 1, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'File Upload' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'File Download', 1, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'File Download' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'File View', 1, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'File View' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'File Delete', 1, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 16
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column'
					AND ControlID = MT.ReferenceID AND PropertyName = 'File Delete' AND IsDeleted = 0);
  
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT @IN_ConfigID, MT.ReferenceID, 'Column', 'Type', 0, 'Column', @CompanyID, 
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig MT
			WHERE MT.FormID = @IN_ConfigID AND MT.ControlType = 8
				AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = MT.FormID AND Type = 'Column' 
					AND ControlID = MT.ReferenceID AND PropertyName = 'Type' AND IsDeleted = 0);

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spFormSaveLaunguageConfig]'
GO

CREATE PROCEDURE [dbo].[spFormSaveLaunguageConfig] (@IN_FormConfigID BIGINT, @IN_LanguageID INT, @IN_ConfigType VARCHAR(50), @IN_MainID BIGINT, 
  @IN_ReferenceID BIGINT, @IN_ControlName NVARCHAR(100), @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_FormSaveLaunguageConfig

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@CompanyID INT = 0

			SET @CompanyID = ISNULL((SELECT CompanyID FROM FormConfiguration WHERE ReferenceID = @IN_FormConfigID), 0);				

			IF EXISTS(SELECT 1 FROM FormControlMultilingual WHERE ControlID = @IN_ReferenceID AND LanguageID = @IN_LanguageID AND ConfigType = @IN_ConfigType
								AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1)
			BEGIN
				UPDATE FormControlMultilingual
				SET Name = @IN_ControlName,
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @UTCTime
				WHERE ControlID = @IN_ReferenceID AND LanguageID = @IN_LanguageID AND ConfigType = @IN_ConfigType
						AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1
			END
			ELSE
			BEGIN
				INSERT INTO FormControlMultilingual (ControlID, LanguageID, ConfigType, Name, OrderBy, CompanyID, NotActive, IsDeleted, 
					IsCurrentVersion, Version, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				VALUES (@IN_ReferenceID, @IN_LanguageID, @IN_ConfigType, @IN_ControlName, ISNULL((SELECT COUNT(1) FROM FormControlMultilingual), 0) + 1, @CompanyID,
					0, 0, 1, 1, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime);
			END

			UPDATE FormConfiguration 
			SET Status = 2,
				ModifiedBy = @IN_UserID,
				ModifiedDate = @UTCTime,
				ModifiedDateGMT = @UTCTime
			WHERE ReferenceID = @IN_FormConfigID;

		COMMIT TRANSACTION tran_FormSaveLaunguageConfig
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_FormSaveLaunguageConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormTableColumnPreparation]'
GO

CREATE PROCEDURE [dbo].[spFormTableColumnPreparation](@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  BEGIN TRANSACTION tran_TableColumnPreparation

			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
							@UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@CompanyID BIGINT = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID DESC), 0)

			IF OBJECT_ID('tempdb..#temp_FormTableNames') IS NOT NULL DROP TABLE #temp_FormTableNames 
			CREATE TABLE #temp_FormTableNames(    
				RowNo INT IDENTITY(1, 1) NOT NULL,
				TableName VARCHAR(255) NULL,
				KeyColumn VARCHAR(255) NULL
			);
  
			INSERT INTO #temp_FormTableNames (TableName, KeyColumn)
			SELECT TableName, KeyColumn
			FROM FormConfiguration
			WHERE ReferenceID = @IN_ConfigID AND ISNULL(TableName, '') <> ''
			UNION
			SELECT TableName, KeyColumn
			FROM FormTabConfig
			WHERE FormID = @IN_ConfigID AND ISNULL(TableName, '') <> ''
				AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1
			UNION
			SELECT GC.TableName, GC.KeyColumn
			FROM FormGroupboxConfig GC
				JOIN FormTabConfig TC ON TC.ReferenceID = GC.TabID AND TC.FormID = GC.FormID
					AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
			WHERE TC.FormID = @IN_ConfigID AND ISNULL(GC.TableName, '') <> ''
				AND GC.IsDeleted = 0 AND GC.NotActive = 0 AND GC.IsCurrentVersion = 1;

			UPDATE TL
			SET IsDeleted = 1,
				DeletedBy = @IN_UserID,
				DeletedDate = @UTCTime,
				DeletedDateGMT = @GMTTime
			FROM FormTableList TL 
				LEFT JOIN #temp_FormTableNames TTN ON TL.TableName = TTN.TableName
			WHERE TL.FormConfigID = @IN_ConfigID AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
				AND TTN.TableName IS NULL;

			UPDATE TL
			SET KeyColumn = TTN.KeyColumn,
				OrderBy = TTN.RowNo,
				StatusID = 1,
				ModifiedBy = @IN_UserID,
				ModifiedDate = @UTCTime,
				ModifiedDateGMT = @GMTTime
			FROM FormTableList TL 
				JOIN #temp_FormTableNames TTN ON TL.TableName = TTN.TableName
			WHERE TL.FormConfigID = @IN_ConfigID AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1;

			INSERT INTO FormTableList (FormConfigID, TableName, KeyColumn, StatusID, CompanyID, OrderBy, Version, IsCurrentVersion, 
				IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT) 
			SELECT @IN_ConfigID, TTN.TableName, TTN.KeyColumn, 1, @CompanyID, TTN.RowNo, 1, 1, 0, 0,
				@IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
			FROM #temp_FormTableNames TTN
			WHERE NOT EXISTS (SELECT 1 FROM FormTableList TL WHERE TL.FormConfigID = @IN_ConfigID AND TL.TableName = TTN.TableName
				AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1);

			IF OBJECT_ID('tempdb..#temp_FormTableControls') IS NOT NULL DROP TABLE #temp_FormTableControls;
			CREATE TABLE #temp_FormTableControls(    
				RowNo INT IDENTITY(1, 1) NOT NULL,
				TableName VARCHAR(255) NULL,
				TableColumn VARCHAR(255) NULL,
				DataType INT NULL,
				MaxLength INT NULL,
				ControlName NVARCHAR(4000) NULL,
				IsIndex BIT NULL DEFAULT 0
			);

			IF OBJECT_ID('tempdb..#temp_FormTableColumns') IS NOT NULL DROP TABLE #temp_FormTableColumns;
			CREATE TABLE #temp_FormTableColumns(    
				RowNo INT IDENTITY(1, 1) NOT NULL,
				TableName VARCHAR(255) NULL,
				TableColumn VARCHAR(255) NULL,
				DataType INT NULL,
				MaxLength INT NULL,
				ControlNames NVARCHAR(4000) NULL,
				IsLinked BIT NOT NULL DEFAULT 0,
				Droppable BIT NOT NULL DEFAULT 1,
				IsIndex BIT NULL DEFAULT 0
			);

			INSERT INTO #temp_FormTableControls (TableName, TableColumn, DataType, MaxLength, ControlName, IsIndex)
			SELECT CASE WHEN ISNULL(GC.TableName, '') <> '' THEN GC.TableName WHEN ISNULL(TC.TableName, '') <> '' THEN TC.TableName 
				ELSE FC.TableName END AS TableName, CC.TableColumn, CC.DataType, 
				CASE WHEN CC.DataType = 8 THEN CC.DataBaseDecimalLength ELSE CC.MaxLength END, CC.Name, CC.IsIndex
			FROM FormControlConfig CC
				JOIN FormGroupboxConfig GC ON GC.ReferenceID = CC.GroupID AND GC.TabID = CC.TabID AND GC.FormID = CC.FormID
					AND GC.IsDeleted = 0 AND GC.NotActive = 0 AND GC.IsCurrentVersion = 1
				JOIN FormTabConfig TC ON TC.ReferenceID = GC.TabID AND TC.FormID = GC.FormID
					AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
				JOIN FormConfiguration FC ON FC.ReferenceID = TC.FormID
			WHERE FC.ReferenceID = @IN_ConfigID AND (CC.IsDmlControl = 1 OR CC.ColumnCreation = 1)
				AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1
			UNION
			SELECT CASE WHEN ISNULL(GC.TableName, '') <> '' THEN GC.TableName WHEN ISNULL(TC.TableName, '') <> '' THEN TC.TableName 
				ELSE FC.TableName END AS TableName, CCC.ColumnName, CCC.DataType, 
				CASE WHEN CCC.DataType = 8 THEN CCC.DataBaseDecimalLength ELSE CCC.MaxLength END, CCC.DisplayName, CCC.IsIndex
			FROM FormControlColumnsConfig CCC
				JOIN FormControlConfig CC ON CC.ReferenceID = CCC.ControlID AND CC.DependentFlag = 0
					AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1
				JOIN FormGroupboxConfig GC ON GC.ReferenceID = CC.GroupID AND GC.TabID = CC.TabID AND GC.FormID = CC.FormID
					AND GC.IsDeleted = 0 AND GC.NotActive = 0 AND GC.IsCurrentVersion = 1
				JOIN FormTabConfig TC ON TC.ReferenceID = GC.TabID AND TC.FormID = GC.FormID
					AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
				JOIN FormConfiguration FC ON FC.ReferenceID = TC.FormID
			WHERE FC.ReferenceID = @IN_ConfigID AND (CCC.IsDmlControl = 1 OR CCC.ColumnCreation = 1)
				AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1;

			INSERT INTO #temp_FormTableColumns (TableName, TableColumn, DataType, MaxLength, ControlNames, IsLinked, IsIndex)
			SELECT TableName, TableColumn, MAX(DataType) AS DataType, MAX(MaxLength) AS MaxLength, 
			ISNULL(SUBSTRING((SELECT ',' + ISNULL(IT.ControlName, '')FROM #temp_FormTableControls IT WHERE IT.TableName = OT.TableName AND IT.TableColumn = OT.TableColumn
				FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','nvarchar(max)'), 2, 2000000000), '') AS ControlNames, 1 AS IsLinked, IsIndex
			FROM #temp_FormTableControls OT
			GROUP BY TableName, TableColumn, IsIndex;

			INSERT INTO #temp_FormTableColumns (TableName, TableColumn, DataType, MaxLength, ControlNames, IsLinked, IsIndex)
			SELECT TL.TableName, TC.COLUMN_NAME AS TableColumn, CASE WHEN TC.DATA_TYPE IN ('bigint') THEN 1 WHEN TC.DATA_TYPE IN ('int', 'smallint') THEN 2
				WHEN TC.DATA_TYPE IN ('bit') THEN 3 WHEN TC.DATA_TYPE IN ('decimal') THEN 8 WHEN TC.DATA_TYPE IN ('date') THEN 4
				WHEN TC.DATA_TYPE IN ('datetime') THEN 5 WHEN TC.DATA_TYPE IN ('time') THEN 6 ELSE 7 END AS DataType, 
				-1 AS MaxLength, '' AS ControlNames, 0 AS IsLinked, 0 AS IsIndex
			FROM FormTableList TL 
				JOIN INFORMATION_SCHEMA.COLUMNS TC ON TC.TABLE_NAME = TL.TableName
			WHERE TL.FormConfigID = @IN_ConfigID
				AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
				AND NOT EXISTS (SELECT 1 FROM #temp_FormTableControls FTC WHERE FTC.TableName = TL.TableName AND FTC.TableName = TC.TABLE_NAME
					AND FTC.TableColumn = TC.COLUMN_NAME);

			UPDATE #temp_FormTableColumns
			SET Droppable = 0
			WHERE TableColumn IN ('ReferenceID', 'CompanyID', 'CreatedBy', 'CreatedDate', 'CreatedDateGMT', 'ModifiedBy', 'ModifiedDate', 'ModifiedDateGMT',
				'NotActive', 'NotActiveDate', 'NotActiveDateGMT', 'NotActiveReason', 'IsDeleted', 'DeletedBy', 'DeletedDate', 'DeletedDateGMT', 
				'DeleteReason', 'IsCurrentVersion', 'Version', 'VersionID', 'OrderBy', 'ERPID');

			UPDATE TCL 
			SET IsDeleted = 1,
				DeletedBy = @IN_UserID,
				DeletedDate = @UTCTime,
				DeletedDateGMT = @GMTTime
			FROM FormTableColumnList TCL 
			WHERE TCL.FormConfigID = @IN_ConfigID AND TCL.IsDeleted = 0 AND TCL.NotActive = 0 AND TCL.IsCurrentVersion = 1
				AND NOT EXISTS (SELECT 1 FROM #temp_FormTableColumns FTC JOIN FormTableList TL ON FTC.TableName = FTC.TableName 
						AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
					WHERE TL.FormConfigID = TCL.FormConfigID AND TL.ReferenceID = TCL.FormTableID AND FTC.TableColumn = TCL.TableColumn);
								
			INSERT INTO FormTableColumnList (FormConfigID, FormTableID, TableColumn, DataType, MaxLength, ControlNames, IsLinked, Droppable, IsIndex, StatusID, 
				CompanyID, OrderBy, Version, IsCurrentVersion, IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT) 
			SELECT @IN_ConfigID, TL.ReferenceID, TTC.TableColumn, TTC.DataType, TTC.MaxLength, TTC.ControlNames, TTC.IsLinked, TTC.Droppable, TTC.IsIndex, 1, 
				@CompanyID, TTC.RowNo, 1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
			FROM #temp_FormTableColumns TTC
				JOIN FormTableList TL ON TL.FormConfigID = @IN_ConfigID AND TL.TableName = TTC.TableName
					AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
			WHERE NOT EXISTS (SELECT 1 FROM FormTableColumnList TCL
				WHERE TCL.FormConfigID = TL.FormConfigID AND TCL.FormTableID = TL.ReferenceID AND TCL.TableColumn = TTC.TableColumn
					AND TCL.IsDeleted = 0 AND TCL.NotActive = 0 AND TCL.IsCurrentVersion = 1);
								
			UPDATE TCL
			SET TableColumn = TTC.TableColumn,
				DataType = TTC.DataType,
				MaxLength = TTC.MaxLength,
				ControlNames = TTC.ControlNames,
				IsLinked = TTC.IsLinked,
				Droppable = TTC.Droppable,
				OrderBy = TTC.RowNo,
				IsIndex = TTC.IsIndex,
				StatusID = 1,
				ModifiedBy = @IN_UserID,
				ModifiedDate = @UTCTime,
				ModifiedDateGMT = @GMTTime
			FROM FormTableColumnList TCL 
				JOIN FormTableList TL ON TL.FormConfigID = TCL.FormConfigID AND TL.ReferenceID = TCL.FormTableID
					AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
				JOIN #temp_FormTableColumns TTC ON TTC.TableName = TL.TableName AND TTC.TableColumn = TCL.TableColumn
			WHERE TCL.FormConfigID = @IN_ConfigID AND TCL.IsDeleted = 0 AND TCL.NotActive = 0 AND TCL.IsCurrentVersion = 1;


		COMMIT TRANSACTION tran_TableColumnPreparation

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_TableColumnPreparation

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spFormTableStructureChange]'
GO

CREATE PROCEDURE [dbo].[spFormTableStructureChange] (@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT, @IN_CompanyID INT)
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
			DECLARE @ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@SCount INT,
					@Count INT,
					@TableMin INT,
					@TableCount INT,
					@InsertColumnCount INT,
					@InsertTableName VARCHAR(100),
					@IndexColumnCount INT,
					@ColumnMin INT,
					@IndexColumns VARCHAR(MAX),
					@DefaultIndexColumns VARCHAR(MAX),
					@IndexName VARCHAR(255),
					@IndexCreateQuery NVARCHAR(MAX),
					@IndexDropQuery NVARCHAR(MAX),
					@CompanyColumnCount INT,
					@CreateColumnQuery NVARCHAR(MAX),
					@TypeValues NVARCHAR(100),
					@AlterColumn NVARCHAR(MAX),
					@TableColumn VARCHAR(100),
					@DataType INT,
					@MaxLength VARCHAR(500),
					@ExistingDataType VARCHAR(MAX),
					@IsIndex BIT,
					@PrimaryKeyCount INT,
					@ColumnKey VARCHAR(20),
					@ForeignCount INT,
					@TableColumnCount INT,
					@AlterColumnQuery NVARCHAR(MAX),
					@DropColumnQuery NVARCHAR(MAX),
					@Query NVARCHAR(MAX),
					@ExistingDataTypeID INT,
					@ExistingMaxLength VARCHAR(500)

			SET @SCount = 0;
			IF OBJECT_ID('tempdb..#tempTableList') IS NOT NULL
				DROP TABLE #tempTableList
			
			CREATE TABLE #tempTableList(    
				SNum INT NULL,
				TableName VARCHAR(100) NULL
			);

			INSERT INTO #tempTableList (TableName)
			SELECT DISTINCT(TL.TableName)
			FROM FormTableList TL
				JOIN FormTableColumnList TCL ON TCL.FormConfigID = TL.FormConfigID AND TCL.FormTableID = TL.ReferenceID
					AND TCL.IsDeleted = 0 AND TCL.NotActive = 0 AND TCL.IsCurrentVersion = 1
				JOIN information_schema.TABLES TB ON TB.TABLE_TYPE = 'BASE TABLE' AND TB.TABLE_NAME = TL.TableName
			WHERE TL.FormConfigID = @IN_ConfigID
				AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
			ORDER BY TL.TableName

			UPDATE #tempTableList SET @SCount = SNum = @SCount + 1;
			SELECT @Count = COUNT(1) FROM #tempTableList;
			SET @TableMin = 0;
			
			IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
				DROP TABLE #tempTableColumns

			CREATE TABLE #tempTableColumns(    
				SNum INT NULL,
				TableColumn VARCHAR(100) NULL,
				DataType INT NULL,
				MaxLength VARCHAR(500) NULL,
				IsIndex BIT NULL
			);
			WHILE @Count > @TableMin
			BEGIN
				SET @TableMin = @TableMin + 1;
				SET @TableCount = 0;
				SET @InsertColumnCount = 0;
				SELECT @InsertTableName = TableName FROM #tempTableList WHERE SNum = @TableMin;
				SELECT @TableCount = COUNT(1) FROM sys.objects WHERE TYPE IN (N'U') AND Name = @InsertTableName;

				IF @TableCount > 0
				BEGIN				
					DELETE FROM #tempTableColumns;  
					SET @SCount = 0;
					
					INSERT INTO #tempTableColumns
					SELECT 0, TCL.TableColumn, TCL.DataType, TCL.MaxLength, TCL.IsIndex
					FROM FormTableList TL
					  JOIN FormTableColumnList TCL ON TCL.FormConfigID = TL.FormConfigID AND TCL.FormTableID = TL.ReferenceID AND TCL.StatusID = 1 
						AND TCL.IsDeleted = 0 AND TCL.NotActive = 0 AND TCL.IsCurrentVersion = 1
					WHERE TL.FormConfigID = @IN_ConfigID AND TL.TableName = @InsertTableName AND TCL.IsLinked = 1
					  AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1
					ORDER BY TCL.TableColumn; 

					UPDATE #tempTableColumns SET @SCount = SNum = @SCount + 1;
					SELECT @InsertColumnCount = COUNT(1) FROM #tempTableColumns;
					SELECT @IndexColumnCount = COUNT(1) FROM #tempTableColumns WHERE IsIndex = 1;
					SET @ColumnMin = 0;
			
					SET @IndexColumns = '';
					SET @DefaultIndexColumns = '';
					SET @IndexName = 'IDX_FC_' + @InsertTableName;

					IF @IndexColumnCount > 0 AND EXISTS (SELECT 1 FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].['+@InsertTableName+']') AND NAME = @IndexName)
					BEGIN
						SET @IndexDropQuery = ('DROP INDEX '+ @IndexName+' ON '+ @InsertTableName);

						EXEC (@IndexDropQuery);
					END

					WHILE @InsertColumnCount > @ColumnMin
					BEGIN
						SET @ColumnMin = @ColumnMin + 1;
						SET @TypeValues = '';
						SET @AlterColumn = '';
						SET @TableColumn = '';
						SET @DataType = 0;
						SET @MaxLength = '';
						SET @ExistingDataType = '';
						SET @ExistingDataTypeID = 0;
						SET @ExistingMaxLength = '';
						SET @IsIndex = 0;

						SELECT @TableColumn = TableColumn, @DataType = DataType, @MaxLength = MaxLength, @IsIndex = IsIndex FROM #tempTableColumns WHERE SNum = @ColumnMin;
						
						SELECT @TypeValues = TypeValues FROM CmnCodeMaster CM WHERE CM.CodemasterID = @DataType AND CM.Type = 'Data Type' AND CM.IsDeleted = 0 AND CM.NotActive = 0;
						SET @PrimaryKeyCount = (SELECT COUNT(1) FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
										AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @InsertTableName AND Col.Column_Name = @TableColumn)
						SET @ColumnKey = (SELECT Constraint_Type FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
										AND Col.Table_Name = Tab.Table_Name AND Col.Table_Name = @InsertTableName AND Col.Column_Name = @TableColumn)
						SET @ForeignCount = (SELECT COUNT(1) FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
									AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'FOREIGN KEY' AND Col.Table_Name = @InsertTableName AND Col.Column_Name = @TableColumn)
						SELECT @TableColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND COLUMN_NAME = @TableColumn;
						SELECT @ExistingDataType = DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND COLUMN_NAME = @TableColumn;
						SELECT @ExistingDataTypeID = CodemasterID FROM CmnCodeMaster WHERE Type = 'Data Type' AND TypeValues = @ExistingDataType
						SELECT @ExistingMaxLength = CHARACTER_MAXIMUM_LENGTH FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND COLUMN_NAME = @TableColumn

						IF @ExistingDataTypeID <> @DataType OR ISNULL(@ExistingMaxLength, '') <> @MaxLength
						BEGIN
							IF @DataType = 7 AND @MaxLength <> '-1'
								SET @AlterColumn = (@TableColumn+ ' VARCHAR('+@MaxLength+') NULL');
							ELSE IF @DataType = 9 AND @MaxLength <> '-1'
								SET @AlterColumn = (@TableColumn+ ' NVARCHAR('+@MaxLength+') NULL');
							ELSE IF @DataType = 7 AND @MaxLength = '-1'
								SET @AlterColumn = (@TableColumn+' VARCHAR(MAX) NULL');
							ELSE IF @DataType = 9 AND @MaxLength = '-1'
								SET @AlterColumn = (@TableColumn+' NVARCHAR(MAX) NULL');
							ELSE IF @DataType = 3 AND @TableColumnCount = 0
								SET @AlterColumn = (@TableColumn+ ' BIT NULL DEFAULT 0');
							ELSE IF @DataType = 3 AND @TableColumnCount <> 0
								SET @AlterColumn = (@TableColumn+ ' BIT NULL ');	
							ELSE IF ((@DataType = 7 OR @DataType = 9) AND @ExistingDataType = 'varchar') OR (@DataType = 2 AND (@ExistingDataType = 'int' OR @ExistingDataType = 'smallint')) OR (@DataType = 1 AND (@ExistingDataType = 'bigint' OR @ExistingDataType = 'smallint')) OR (@DataType = 3 AND @ExistingDataType = 'bit')
								SET @AlterColumn = '';
							ELSE IF @DataType = 8
							BEGIN
								IF CAST(ISNULL(@MaxLength, '0') AS INT) < 1
									SET @MaxLength = '1';
									SET @AlterColumn = (@TableColumn+' DECIMAL(32,'+@MaxLength+') NULL');
							END
							ELSE 
								SET @AlterColumn = (@TableColumn+ ' '+@TypeValues+' NULL');
						END						

						IF @AlterColumn <> '' AND @PrimaryKeyCount = 0 AND LOWER(ISNULL(@ColumnKey, '')) <> 'primary key' AND @ForeignCount = 0 AND ISNULL(@TypeValues, '') <> ''
						BEGIN      
							SET @AlterColumnQuery = '';
							SET @DropColumnQuery = '';
							
							/*IF @TableColumnCount > 0 AND (((@ExistingDataType = 'varchar' OR @ExistingDataType = 'nvarchar') AND (LOWER(@TypeValues) = 'int' OR LOWER(@TypeValues) = 'bigint' OR LOWER(@TypeValues) = 'decimal'
								OR LOWER(@TypeValues) = 'date' OR LOWER(@TypeValues) = 'datetime' OR LOWER(@TypeValues) = 'time')))
							BEGIN
								SET @DropColumnQuery = ('ALTER TABLE '+ @InsertTableName+' DROP COLUMN '+ @TableColumn);
								EXEC (@DropColumnQuery);
  
								SET @TableColumnCount = 0;
							END*/

							IF @TableColumnCount = 0
								SET @AlterColumnQuery = ('ALTER TABLE '+ @InsertTableName+' ADD '+ @AlterColumn);
							ELSE IF @PrimaryKeyCount = 0 AND @ForeignCount = 0
								SET @AlterColumnQuery = ('ALTER TABLE '+ @InsertTableName+ ' ALTER COLUMN '+ @AlterColumn);
							
							IF @AlterColumnQuery <> ''
							BEGIN						
								EXEC (@AlterColumnQuery);
							END 

							UPDATE TCL
							SET TCL.StatusID = 2
							FROM FormTableList TL 
								JOIN FormTableColumnList TCL ON TCL.FormConfigID = TL.FormConfigID AND TCL.FormTableID = TL.ReferenceID AND TCL.StatusID = 1 AND TCL.TableColumn = @TableColumn
								AND TCL.IsDeleted = 0 AND TCL.NotActive = 0 AND TCL.IsCurrentVersion = 1						
							WHERE TL.FormConfigID = @IN_ConfigID AND TL.TableName = @InsertTableName
							  AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1;
						END 

						IF @IsIndex = 1 AND (@DataType NOT IN (7, 8, 9) 
							OR (@DataType = 7 AND @MaxLength <> '-1' AND CAST(@MaxLength AS INT) <= 500))
						BEGIN
							SET @IndexColumns = (@IndexColumns+ @TableColumn+ ' ASC, ');
						END
					END

					IF @IndexColumns <> ''
					BEGIN 
						SET @IndexColumns = LEFT(@IndexColumns, LEN(@IndexColumns) - 1) + ''
						IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND LOWER(COLUMN_NAME) = 'IsDeleted')
						BEGIN
							SET @DefaultIndexColumns = CONCAT(@DefaultIndexColumns, 'IsDeleted,');
						END
						IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND LOWER(COLUMN_NAME) = 'NotActive')
						BEGIN
							SET @DefaultIndexColumns = CONCAT(@DefaultIndexColumns, 'NotActive,');
						END
						IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND LOWER(COLUMN_NAME) = 'IsCurrentVersion')
						BEGIN
							SET @DefaultIndexColumns = CONCAT(@DefaultIndexColumns, 'IsCurrentVersion,');
						END
						SET @IndexCreateQuery = ('CREATE NONCLUSTERED INDEX ' + @IndexName + ' ON '+@InsertTableName+'('+ @DefaultIndexColumns + @IndexColumns + ')');
						
						EXEC (@IndexCreateQuery);
					END

					SET @CompanyColumnCount = (SELECT COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @InsertTableName AND LOWER(COLUMN_NAME) = 'companyid');
					IF @CompanyColumnCount = 0 AND @InsertTableName <> 'CmnCodeMaster'
					BEGIN
						SET @CreateColumnQuery = ('ALTER TABLE '+ @InsertTableName+' ADD CompanyID INT NULL');
        
						EXEC (@CreateColumnQuery);
						
						SET @Query = ('UPDATE '+ @InsertTableName + ' SET CompanyID = '+ CASE WHEN @IN_CompanyID = 0 THEN '1' ELSE CAST(@IN_CompanyID AS VARCHAR(50)) END+ ' WHERE ISNULL(CompanyID, 0) = 0;');

						EXEC (@Query);
					END
				END
			END;

			IF OBJECT_ID('tempdb..#tempTableList') IS NOT NULL
				DROP TABLE #tempTableList

			IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
				DROP TABLE #tempTableColumns
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spFormTransferControlsFromBase]'
GO

CREATE PROCEDURE [dbo].[spFormTransferControlsFromBase](@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY

			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
							@UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@CompanyID INT = 0,
							@WorkflowID INT = 0,
							@BaseFormID INT = 0,
							@MinID INT = 0,
							@MaxID INT = 0,
							@ButtonID INT = 0,
							@ButtonName NVARCHAR(500) = '',
							@TabID INT = 0,
							@GroupID INT = 0,
							@SourceGroupID INT = 0,
							@ControlID INT = 0,
							@SourceControlID INT = 0,
							@ColumnID INT = 0,
							@SourceColumnID INT = 0,
							@TabOrder INT = 0,
							@GroupOrder INT = 0,
							@TableName VARCHAR(100),
							@ColumnCount INT = 0,
							@AlterColumnQuery NVARCHAR(MAX) = '',
							@ButtonCount INT = 0,
							@BaseFormButtonID INT = 0,
							@IsMobile BIT = 0
							
			SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
			FROM CmnUserDetails UD
				LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
			WHERE UD.UserID = @IN_UserID;

			IF @CompanyID = 0
				SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID), 0);

			SELECT @WorkflowID = ISNULL(WorkflowID, 0), @BaseFormID = ISNULL(BaseFormID, 0)
			FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID;

			INSERT INTO FormButtonConfig (FormID, Type, DisplayType, UserAccess, ButtonType, TypeValues, Code, Description, Details, 
				ImagePath, MenuCategory, ButtonKeyColumn, AvailableStatus, ProcessButtonTypeID, IsDml, OrderBy, ButtonCategory, VisibleTabs, 
				DisableTabs, ButtonTriggerEvent, IsMultipleApproval, AutoClose, IsMobile, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, 
				ModifiedDateGMT, NotActive, IsDeleted, IsCurrentVersion, Version, CompanyID) 
			SELECT @IN_ConfigID, WPD.Type, WPD.DisplayType, WPD.UserAccess, WPD.ButtonType, WPD.TypeValues, WPD.Code, WPD.Description, 
				WPD.Details, WPD.ImagePath, WPD.MenuCategory, WPD.ButtonKeyColumn, WPD.AvailableStatus, WPD.ProcessButtonTypeID, WPD.IsDml, 
				WPD.OrderBy, WPD.ButtonCategory, WPD.VisibleTabs, WPD.DisableTabs, WPD.ButtonTriggerEvent, WPD.IsMultipleApproval, 
				 AutoClose, ISNULL(IsMobile, 1), @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 1, 1, @CompanyID
			FROM FormButtonConfig WPD
			WHERE WPD.FormID = @BaseFormID
				AND WPD.IsDeleted = 0 AND WPD.NotActive = 0 AND WPD.IsCurrentVersion = 1
				AND NOT EXISTS (SELECT 1 FROM FormButtonConfig BC WHERE BC.FormID = @IN_ConfigID AND BC.TypeValues = WPD.TypeValues
						--AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
						)
				--AND NOT EXISTS (SELECT 1 FROM TlsWorkflowProcessDetails PD WHERE PD.WorkflowID = @WorkflowID AND PD.Name = WPD.TypeValues
				--	AND ISNULL(PD.IsDeleted, 0) = 0 AND ISNULL(PD.NotActive, 0) = 0 AND ISNULL(PD.IsCurrentVersion, 1) = 1)
			ORDER BY WPD.OrderBy;

			IF OBJECT_ID('tempdb..#tempProcessButtonList') IS NOT NULL DROP TABLE #tempProcessButtonList

			CREATE TABLE #tempProcessButtonList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				ButtonID BIGINT NULL,
				ButtonName NVARCHAR(500))

			INSERT INTO #tempProcessButtonList (ButtonID, ButtonName)
			SELECT ReferenceID, TypeValues
			FROM FormButtonConfig WHERE FormID = @IN_ConfigID AND ButtonType = 5
				AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1
			ORDER BY OrderBy;

			SELECT @MaxID = COUNT(1) FROM #tempProcessButtonList;

			WHILE @MinID < @MaxID
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @BaseFormButtonID = 0;
				SET @IsMobile = 1;

				SELECT @ButtonID = ButtonID, @ButtonName = ButtonName FROM #tempProcessButtonList WHERE ReferenceID = @MinID;
				SELECT @BaseFormButtonID = ReferenceID, @IsMobile = ISNULL(IsMobile, 1) FROM FormButtonConfig 
				WHERE FormID = @BaseFormID AND TypeValues = @ButtonName AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

				IF ISNULL(@ButtonID, 0) <> 0 AND ISNULL(@ButtonName, '') <> ''
				BEGIN
					SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
					SELECT @GroupID = ReferenceID FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
  
					IF ISNULL(@TabID, 0) = 0
					BEGIN      
						SET @TabOrder = ISNULL((SELECT TabOrder FROM FormTabConfig WHERE FormID = @BaseFormID AND ButtonID = @BaseFormButtonID AND IsDeleted = 0), 1);
  
						INSERT INTO FormTabConfig (FormID, Name, DisplayName, IsMandatory, TableName, KeyColumn, TabOrder, ButtonID, IsMobile, OrderBy, CreatedBy, 
							CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
						VALUES (@IN_ConfigID, CONCAT('Process ', @ButtonName), CONCAT('Process ', @ButtonName), 1, '', '', @TabOrder, @ButtonID, @IsMobile,
							@TabOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @CompanyID);
        
						SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
					END
					ELSE
					BEGIN
						UPDATE FormTabConfig 
						SET Name = CONCAT('Process ', @ButtonName), DisplayName = CONCAT('Process ', @ButtonName),
							ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime
						WHERE ReferenceID = @TabID AND FormID = @IN_ConfigID;
					END
  
					IF ISNULL(@GroupID, 0) = 0
					BEGIN      
						SET @GroupOrder = ISNULL((SELECT GroupOrder FROM FormGroupboxConfig WHERE FormID = @BaseFormID AND ButtonID = @BaseFormButtonID AND IsDeleted = 0), 1);
  
						INSERT INTO FormGroupboxConfig (FormID, TabID, Name, DisplayName, CommonGroup, TableName, KeyColumn, GroupOrder, ButtonID, IsMobile,
							OrderBy, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
						VALUES (@IN_ConfigID, @TabID, CONCAT('Process ', @ButtonName), CONCAT('Process ', @ButtonName), 0, '', '', @GroupOrder, 
							@ButtonID, @IsMobile, @GroupOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @CompanyID);
					END
					ELSE
					BEGIN
						UPDATE FormGroupboxConfig 
						SET TabID = @TabID, Name = CONCAT('Process ', @ButtonName), DisplayName = CONCAT('Process ', @ButtonName), 
							ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime
						WHERE ReferenceID = @GroupID AND FormID = @IN_ConfigID;
					END
				END
  
			END

			INSERT INTO FormTabConfig (FormID, Name, DisplayName, DefaultTab, IsMandatory, TableName, KeyColumn, TabOrder, ButtonID, IsMobile,
				OrderBy, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
			SELECT @IN_ConfigID, Name, DisplayName, DefaultTab, IsMandatory, TableName, KeyColumn, TabOrder, 0, ISNULL(IsMobile, 1),
				TabOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @CompanyID
			FROM FormTabConfig TC
			WHERE TC.FormID = @BaseFormID AND ISNULL(TC.ButtonID, 0) = 0
				AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
				AND NOT EXISTS (SELECT 1 FROM FormTabConfig BC WHERE BC.FormID = @IN_ConfigID AND BC.Name = TC.Name
						-- AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
						)
			ORDER BY TC.TabOrder;

			INSERT INTO FormGroupboxConfig (FormID, TabID, Name, DisplayName, CommonGroup, TableName, KeyColumn, GroupOrder, 
				DefaultGroupbox, ButtonID, IsMobile, OrderBy, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, 
				IsDeleted, NotActive, IsCurrentVersion, CompanyID)
			SELECT @IN_ConfigID, WTC.ReferenceID, GC.Name, GC.DisplayName, GC.CommonGroup, GC.TableName, GC.KeyColumn, GC.GroupOrder, 
				 GC.DefaultGroupbox, 0, ISNULL(GC.IsMobile, 1), GC.GroupOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @CompanyID
			FROM FormTabConfig TC
				JOIN FormGroupBoxConfig GC ON GC.FormID = TC.FormID AND GC.TabID = TC.ReferenceID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig WTC ON WTC.Name = TC.Name
					AND ISNULL(WTC.IsDeleted, 0) = 0 AND ISNULL(WTC.NotActive, 0) = 0 AND ISNULL(WTC.IsCurrentVersion, 1) = 1
			WHERE TC.FormID = @BaseFormID AND WTC.FormID = @IN_ConfigID AND ISNULL(GC.ButtonID, 0) = 0
				AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
				AND NOT EXISTS (SELECT 1 FROM FormGroupBoxConfig BC WHERE BC.FormID = WTC.FormID 
						AND BC.TabID = WTC.ReferenceID AND BC.Name = GC.Name
						--AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
						)
			ORDER BY TC.TabOrder;

			IF OBJECT_ID('tempdb..#tempFormGroupBoxList') IS NOT NULL DROP TABLE #tempFormGroupBoxList

			CREATE TABLE #tempFormGroupBoxList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				SourceGroupID BIGINT NULL,
				GroupID BIGINT NULL,
				TabID BIGINT NULL,
				ButtonID BIGINT NULL)

			INSERT INTO #tempFormGroupBoxList (SourceGroupID, GroupID, TabID, ButtonID)
			SELECT WPD.ReferenceID, GC.ReferenceID, TC.ReferenceID, BC.ReferenceID
			FROM FormGroupBoxConfig WPD
				JOIN FormGroupBoxConfig GC ON GC.Name = WPD.Name
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				LEFT JOIN FormButtonConfig BC ON BC.ReferenceID = GC.ButtonID
			WHERE WPD.FormID = @BaseFormID AND GC.FormID = @IN_ConfigID
				AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
				AND NOT EXISTS (SELECT 1 FROM TlsWorkflowProcessDetails PD WHERE PD.WorkflowID = @WorkflowID AND PD.Name = BC.TypeValues
					AND ISNULL(PD.IsDeleted, 0) = 0 AND ISNULL(PD.NotActive, 0) = 0 AND ISNULL(PD.IsCurrentVersion, 1) = 1)
			ORDER BY WPD.OrderBy;

			SET @MinID = 0;
			SET @MaxID = 0;
			SELECT @MaxID = COUNT(1) FROM #tempFormGroupBoxList;

			WHILE @MinID < @MaxID 
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @SourceGroupID = 0;

				SELECT @SourceGroupID = SourceGroupID, @GroupID = GroupID, @TabID = TabID, @ButtonID = ButtonID
				FROM #tempFormGroupBoxList WHERE ReferenceID = @MinID;

				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, 
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FilterConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, 
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, 
					DataTreeCondition, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, DataVariable, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, 
					PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SearchApplicable, 
					PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, PT.UniqueGroup, PT.IsDmlControl, PT.IsEncrypt, 
					PT.IsReturnFill, PT.IsNoAdd, PT.IsNoUpdate, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.AdditionalConditions, 
					PT.FilterConditions, PT.FillEvent, PT.ControlEventType, PT.ValidationEventType, PT.FillEventType, PT.FkOrder, PT.FkDelete, 
					PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, PT.ControlOrder, PT.DependentFlag, @ButtonID,
					PT.DefaultControl, PT.DataTreeCondition, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.DataVariable, @CompanyID, 
					PT.OrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
				FROM FormControlConfig PT
				WHERE PT.FormID = @BaseFormID AND PT.GroupID = @SourceGroupID 
					AND ISNULL(PT.IsDeleted, 0) = 0 AND ISNULL(PT.NotActive, 0) = 0 AND ISNULL(PT.IsCurrentVersion, 1) = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlConfig FCC WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @TabID
						AND FCC.GroupID = @GroupID AND FCC.TableColumn = PT.TableColumn
						--AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
						);

			END

			IF OBJECT_ID('tempdb..#tempFormControlList') IS NOT NULL DROP TABLE #tempFormControlList

			CREATE TABLE #tempFormControlList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				SourceControlID BIGINT NULL,
				GroupID BIGINT NULL,
				TabID BIGINT NULL,
				ControlID BIGINT NULL)

			INSERT INTO #tempFormControlList (SourceControlID, GroupID, TabID, ControlID)
			SELECT WPD.ReferenceID, GC.ReferenceID, TC.ReferenceID, FCC.ReferenceID
			FROM FormControlConfig WPD
				JOIN FormControlConfig FCC ON FCC.TableColumn = WPD.TableColumn 
					AND FCC.ControlType = WPD.ControlType AND FCC.DependentFlag = WPD.DependentFlag 
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = FCC.FormID AND GC.ReferenceID = FCC.GroupID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig WGC ON WGC.FormID = WPD.FormID AND WGC.ReferenceID = WPD.GroupID AND WGC.Name = GC.Name
					AND ISNULL(WGC.IsDeleted, 0) = 0 AND ISNULL(WGC.NotActive, 0) = 0 AND ISNULL(WGC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.FormID = @IN_ConfigID AND WPD.FormID = @BaseFormID
				AND (CT.CodemasterID IN (18, 19, 24, 25) OR FCC.DependentFlag = 1)
				AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
			ORDER BY GC.OrderBy, FCC.ControlOrder;

			SET @MinID = 0;
			SET @MaxID = 0;
			SELECT @MaxID = COUNT(1) FROM #tempFormControlList;

			WHILE @MinID < @MaxID 
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @SourceGroupID = 0;
				SET @ControlID = 0;
				SET @SourceControlID = 0;

				SELECT @SourceControlID = SourceControlID, @GroupID = GroupID, @TabID = TabID, @ControlID = ControlID
				FROM #tempFormControlList WHERE ReferenceID = @MinID;

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, DependentType, MaxLength, Events, 
					ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, 
					UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, ControlEventType, 
					ValidationEventType, FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, 
					DecimalLength, IsCurrency, CurrencyColumn, IsIndex, DataVariable, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, @ControlID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.DependentType, PT.MaxLength, PT.Events, 
					PT.ValidationEvent, PT.FillEvent, PT.GridParentControl, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, 
					PT.AttachmentPath, PT.IsIdentity, PT.UniqueGroup, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, 
					PT.AdditionalConditions, PT.FkOrder, PT.FkDelete, PT.ControlEventType, PT.ValidationEventType, PT.FkNotActive, PT.FkVersion, 
					PT.FkShowActive, PT.VersionCheck, PT.ColumnOrder, PT.DependentFlag, PT.SelectAll, PT.ColumnWidth, PT.DecimalLength, 
					PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.DataVariable, @CompanyID, PT.OrderBy, 1, 1, 0, 0, 
					@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
				FROM FormControlColumnsConfig PT
				WHERE PT.FormID = @BaseFormID AND PT.ControlID = @SourceControlID
					AND ISNULL(PT.IsDeleted, 0) = 0 AND ISNULL(PT.NotActive, 0) = 0 AND ISNULL(PT.IsCurrentVersion, 1) = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlColumnsConfig FCC WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @TabID
						AND FCC.GroupID = @GroupID AND FCC.ControlID = @ControlID AND FCC.ColumnName = PT.ColumnName
						--AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
						);

			END

			IF OBJECT_ID('tempdb..#tempFormColumnList') IS NOT NULL DROP TABLE #tempFormColumnList

			CREATE TABLE #tempFormColumnList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				GroupID BIGINT NULL,
				TabID BIGINT NULL,
				ColumnID BIGINT NULL,
				SourceColumnID BIGINT NULL)

			INSERT INTO #tempFormColumnList (GroupID, TabID, ColumnID, SourceColumnID)
			SELECT GC.ReferenceID, TC.ReferenceID, CCC.ReferenceID, WCCC.ReferenceID
			FROM FormControlColumnsConfig WCCC
				JOIN FormControlColumnsConfig CCC ON CCC.ColumnName = WCCC.ColumnName AND CCC.ControlType = WCCC.ControlType 
					AND CCC.DependentFlag = WCCC.DependentFlag AND CCC.DefaultValue = WCCC.DefaultValue
					AND ISNULL(CCC.IsDeleted, 0) = 0 AND ISNULL(CCC.NotActive, 0) = 0 AND ISNULL(CCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CCC.ControlID
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig WCC ON WCC.ReferenceID = WCCC.ControlID AND WCC.Name = FCC.Name
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = FCC.FormID AND GC.ReferenceID = FCC.GroupID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = CCC.ControlType
			WHERE CCC.FormID = @IN_ConfigID AND WCCC.FormID = @BaseFormID
				AND (CCC.DependentFlag = 1 OR CCC.ControlType = 24 OR CCC.ControlType = 25)
				AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
			ORDER BY GC.OrderBy, FCC.ControlOrder;

			SET @MinID = 0;
			SET @MaxID = 0;
			SELECT @MaxID = COUNT(1) FROM #tempFormColumnList;

			WHILE @MinID < @MaxID 
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @SourceGroupID = 0;
				SET @ColumnID = 0;
				SET @SourceColumnID = 0;

				SELECT @GroupID = GroupID, @TabID = TabID, @ColumnID = ColumnID, @SourceColumnID = SourceColumnID
				FROM #tempFormColumnList WHERE ReferenceID = @MinID;

				INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, 
					SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, ControlEventType, ValidationEventType, FkNotActive, FkVersion, 
					FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, 
					DependentType, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, @ColumnID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, 
					PT.ValidationEvent, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, 
					PT.UniqueGroup, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.AdditionalConditions, PT.FkOrder, 
					PT.FkDelete, PT.ControlEventType, PT.ValidationEventType, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, 
					PT.ColumnOrder, PT.SelectAll, PT.IsDataSource, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.DependentFlag, 
					PT.DependentType, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
				FROM FormGridControlColumnsConfig PT
				WHERE PT.FormID = @BaseFormID AND PT.ColumnID = @SourceColumnID
					AND ISNULL(PT.IsDeleted, 0) = 0 AND ISNULL(PT.NotActive, 0) = 0 AND ISNULL(PT.IsCurrentVersion, 1) = 1
					AND NOT EXISTS (SELECT 1 FROM FormGridControlColumnsConfig FCC WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @TabID
						AND FCC.GroupID = @GroupID AND FCC.ColumnID = @ColumnID AND FCC.ColumnName = PT.ColumnName
						--AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
						);

			END

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT DISTINCT FCC.FormID, FCC.ReferenceID, WFCP.Type, WFCP.PropertyName, WFCP.PropertyValue, WFCP.PropertyType, @CompanyID,
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig WPD
				JOIN FormControlConfig FCC ON FCC.TableColumn = WPD.TableColumn 
					AND FCC.ControlType = WPD.ControlType AND FCC.DependentFlag = WPD.DependentFlag 
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = FCC.FormID AND GC.ReferenceID = FCC.GroupID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig WGC ON WGC.FormID = WPD.FormID AND WGC.ReferenceID = WPD.GroupID AND WGC.Name = GC.Name
					AND ISNULL(WGC.IsDeleted, 0) = 0 AND ISNULL(WGC.NotActive, 0) = 0 AND ISNULL(WGC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				JOIN FormControlPropertyConfig WFCP ON WFCP.FormID = WPD.FormID AND WFCP.Type = 'Control'
					AND WFCP.ControlID = WPD.ReferenceID
					AND ISNULL(WFCP.IsDeleted, 0) = 0 AND ISNULL(WFCP.NotActive, 0) = 0 AND ISNULL(WFCP.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_ConfigID AND WPD.FormID = @BaseFormID
				AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig PT WHERE PT.FormID = FCC.FormID AND PT.Type = WFCP.Type 
					--AND PT.ControlID = FCC.ReferenceID AND PT.PropertyName = WFCP.PropertyName AND PT.IsDeleted = 0
					);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT DISTINCT CCC.FormID, CCC.ReferenceID, WFCP.Type, WFCP.PropertyName, WFCP.PropertyValue, WFCP.PropertyType, @CompanyID,
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, WFCP.OrderBy
			FROM FormControlColumnsConfig WCCC
				JOIN FormControlColumnsConfig CCC ON CCC.ColumnName = WCCC.ColumnName AND CCC.ControlType = WCCC.ControlType 
					AND CCC.DependentFlag = WCCC.DependentFlag AND CCC.DefaultValue = WCCC.DefaultValue
					AND ISNULL(CCC.IsDeleted, 0) = 0 AND ISNULL(CCC.NotActive, 0) = 0 AND ISNULL(CCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CCC.ControlID
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig WCC ON WCC.ReferenceID = WCCC.ControlID AND WCC.Name = FCC.Name
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = FCC.FormID AND GC.ReferenceID = FCC.GroupID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = CCC.ControlType
				JOIN FormControlPropertyConfig WFCP ON WFCP.FormID = WCCC.FormID AND WFCP.Type = 'Column'
					AND WFCP.ControlID = WCCC.ReferenceID
					AND ISNULL(WFCP.IsDeleted, 0) = 0 AND ISNULL(WFCP.NotActive, 0) = 0 AND ISNULL(WFCP.IsCurrentVersion, 1) = 1
			WHERE CCC.FormID = @IN_ConfigID AND WCCC.FormID = @BaseFormID
				AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig PT WHERE PT.FormID = CCC.FormID AND PT.Type = WFCP.Type 
					--AND PT.ControlID = CCC.ReferenceID AND PT.PropertyName = WFCP.PropertyName AND PT.IsDeleted = 0
					);

			INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT DISTINCT FCC.FormID, FCC.ReferenceID, WFCP.Type, WFCP.PropertyName, WFCP.PropertyValue, @CompanyID,
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlConfig WPD
				JOIN FormControlConfig FCC ON FCC.TableColumn = WPD.TableColumn 
					AND FCC.ControlType = WPD.ControlType AND FCC.DependentFlag = WPD.DependentFlag 
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = FCC.FormID AND GC.ReferenceID = FCC.GroupID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig WGC ON WGC.FormID = WPD.FormID AND WGC.ReferenceID = WPD.GroupID AND WGC.Name = GC.Name
					AND ISNULL(WGC.IsDeleted, 0) = 0 AND ISNULL(WGC.NotActive, 0) = 0 AND ISNULL(WGC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
				JOIN FormAdditionalPropertyConfig WFCP ON WFCP.FormID = WPD.FormID AND WFCP.Type = 'Control'
					AND WFCP.ControlID = WPD.ReferenceID
					AND ISNULL(WFCP.IsDeleted, 0) = 0 AND ISNULL(WFCP.NotActive, 0) = 0 AND ISNULL(WFCP.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_ConfigID AND WPD.FormID = @BaseFormID
				AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormAdditionalPropertyConfig PT WHERE PT.FormID = FCC.FormID AND PT.Type = WFCP.Type 
					--AND PT.ControlID = FCC.ReferenceID AND PT.PropertyName = WFCP.PropertyName AND PT.IsDeleted = 0
					);

			INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			SELECT DISTINCT CCC.FormID, CCC.ReferenceID, WFCP.Type, WFCP.PropertyName, WFCP.PropertyValue, @CompanyID,
				@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
			FROM FormControlColumnsConfig WCCC
				JOIN FormControlColumnsConfig CCC ON CCC.ColumnName = WCCC.ColumnName AND CCC.ControlType = WCCC.ControlType 
					AND CCC.DependentFlag = WCCC.DependentFlag AND CCC.DefaultValue = WCCC.DefaultValue
					AND ISNULL(CCC.IsDeleted, 0) = 0 AND ISNULL(CCC.NotActive, 0) = 0 AND ISNULL(CCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.ReferenceID = CCC.ControlID
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig WCC ON WCC.ReferenceID = WCCC.ControlID AND WCC.Name = FCC.Name
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = FCC.FormID AND GC.ReferenceID = FCC.GroupID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = GC.FormID AND TC.ReferenceID = GC.TabID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = CCC.ControlType
				JOIN FormAdditionalPropertyConfig WFCP ON WFCP.FormID = WCCC.FormID AND WFCP.Type = 'Column'
					AND WFCP.ControlID = WCCC.ReferenceID
					AND ISNULL(WFCP.IsDeleted, 0) = 0 AND ISNULL(WFCP.NotActive, 0) = 0 AND ISNULL(WFCP.IsCurrentVersion, 1) = 1
			WHERE CCC.FormID = @IN_ConfigID AND WCCC.FormID = @BaseFormID
				AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormAdditionalPropertyConfig PT WHERE PT.FormID = CCC.FormID AND PT.Type = WFCP.Type 
					--AND PT.ControlID = CCC.ReferenceID AND PT.PropertyName = WFCP.PropertyName AND PT.IsDeleted = 0
					);

			INSERT INTO FormSearchControlsConfig (FormID, ControlID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
				IsMandatory, IsMobile, MaxLength, Events, ValidationEvent, ControlEventType, ValidationEventType, SelectApplicable, 
				DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, 
				SearchOrder, DependentFlag, DateFilterType, FillEvent, FillEventType, CompanyID, OrderBy, Version, IsCurrentVersion,
				NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT DISTINCT FCC.FormID, FCC.ReferenceID, WCCC.Name, WCCC.TableColumn, WCCC.ControlType, WCCC.DataType, WCCC.Visibility, 
				WCCC.Readonly, WCCC.IsMandatory, WCCC.IsMobile, WCCC.MaxLength, WCCC.Events, WCCC.ValidationEvent, WCCC.ControlEventType, 
				WCCC.ValidationEventType, WCCC.SelectApplicable, WCCC.DefaultValue, WCCC.FkType, WCCC.FkTable, WCCC.FkColumn, WCCC.FkData, 
				WCCC.AdditionalConditions, WCCC.FkOrder, WCCC.FkDelete, WCCC.FkNotActive, WCCC.FkVersion, WCCC.SearchOrder, WCCC.DependentFlag,
				WCCC.DateFilterType, WCCC.FillEvent, WCCC.FillEventType,
				@CompanyID, WCCC.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM FormSearchControlsConfig WCCC
				JOIN FormControlConfig WCC ON WCC.ReferenceID = WCCC.ControlID
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.SearchApplicable = 1 AND FCC.Name = WCC.Name
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_ConfigID AND WCCC.FormID = @BaseFormID
				AND ISNULL(WCCC.ButtonID, 0) = 0
				AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormSearchControlsConfig PT WHERE PT.FormID = FCC.FormID
					--AND PT.ControlID = FCC.ReferenceID AND PT.TableColumn = WCCC.TableColumn AND PT.IsDeleted = 0
					);

			INSERT INTO FormSearchControlsConfig (FormID, ControlID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
				IsMandatory, IsMobile, MaxLength, Events, ValidationEvent, ControlEventType, ValidationEventType, SelectApplicable, 
				DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, 
				SearchOrder, DependentFlag, ButtonID, Type, DateFilterType, FillEvent, FillEventType, CompanyID, OrderBy, Version, IsCurrentVersion,
				NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT DISTINCT FCC.FormID, SFCC.ReferenceID, WCCC.Name, WCCC.TableColumn, WCCC.ControlType, WCCC.DataType, WCCC.Visibility, 
				WCCC.Readonly, WCCC.IsMandatory, WCCC.IsMobile, WCCC.MaxLength, WCCC.Events, WCCC.ValidationEvent, WCCC.ControlEventType, 
				WCCC.ValidationEventType, WCCC.SelectApplicable, WCCC.DefaultValue, WCCC.FkType, WCCC.FkTable, WCCC.FkColumn, WCCC.FkData, 
				WCCC.AdditionalConditions, WCCC.FkOrder, WCCC.FkDelete, WCCC.FkNotActive, WCCC.FkVersion, WCCC.SearchOrder, WCCC.DependentFlag,
				FCC.ReferenceID, WCCC.Type, WCCC.DateFilterType, WCCC.FillEvent, WCCC.FillEventType,
				@CompanyID, WCCC.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM FormSearchControlsConfig WCCC
				JOIN FormButtonConfig WCC ON WCC.ReferenceID = WCCC.ButtonID
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormButtonConfig FCC ON (FCC.ButtonType = 11 OR FCC.ButtonType = 12) AND FCC.TypeValues = WCC.TypeValues
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig SWCC ON SWCC.ReferenceID = WCCC.ControlID
					AND ISNULL(SWCC.IsDeleted, 0) = 0 AND ISNULL(SWCC.NotActive, 0) = 0 AND ISNULL(SWCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig SFCC ON SFCC.FormID = FCC.FormID AND SFCC.SearchApplicable = 1 AND SFCC.Name = SFCC.Name
					AND ISNULL(SFCC.IsDeleted, 0) = 0 AND ISNULL(SFCC.NotActive, 0) = 0 AND ISNULL(SFCC.IsCurrentVersion, 1) = 1
			WHERE FCC.FormID = @IN_ConfigID AND WCCC.FormID = @BaseFormID
				AND ISNULL(WCCC.ButtonID, 0) <> 0
				AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormSearchControlsConfig PT WHERE PT.FormID = FCC.FormID AND PT.ButtonID = FCC.ReferenceID);

			INSERT INTO FormSearchColumnsConfig (FormID, SearchID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
				IsMandatory, MaxLength, Events, ValidationEvent, ControlEventType, ValidationEventType, SelectApplicable, DefaultValue, 
				FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, SearchOrder,
				DependentFlag, DependentType, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT DISTINCT FCCC.FormID, FCCC.ReferenceID, WSCC.Name, WSCC.TableColumn, WSCC.ControlType, WSCC.DataType, WSCC.Visibility, 
				WSCC.Readonly, WSCC.IsMandatory, WSCC.MaxLength, WSCC.Events, WSCC.ValidationEvent, WSCC.ControlEventType, WSCC.ValidationEventType, 
				WSCC.SelectApplicable, WSCC.DefaultValue, WSCC.FkType, WSCC.FkTable, WSCC.FkColumn, WSCC.FkData, WSCC.AdditionalConditions, 
				WSCC.FkOrder, WSCC.FkDelete, WSCC.FkNotActive, WSCC.FkVersion, WSCC.SearchOrder, WSCC.DependentFlag, WSCC.DependentType,
				@CompanyID, WSCC.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
			FROM FormSearchColumnsConfig WSCC
				JOIN FormSearchControlsConfig WCCC ON WCCC.ReferenceID = WSCC.SearchID
					AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig WCC ON WCC.ReferenceID = WCCC.ControlID
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.SearchApplicable = 1 AND FCC.Name = WCC.Name
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormSearchControlsConfig FCCC ON FCCC.ControlID = FCC.ReferenceID AND FCCC.TableColumn = WCCC.TableColumn
					AND ISNULL(FCCC.IsDeleted, 0) = 0 AND ISNULL(FCCC.NotActive, 0) = 0 AND ISNULL(FCCC.IsCurrentVersion, 1) = 1
			WHERE FCCC.FormID = @IN_ConfigID AND WSCC.FormID = @BaseFormID
				AND ISNULL(WSCC.IsDeleted, 0) = 0 AND ISNULL(WSCC.NotActive, 0) = 0 AND ISNULL(WSCC.IsCurrentVersion, 1) = 1
				AND NOT EXISTS(SELECT 1 FROM FormSearchColumnsConfig PT WHERE PT.FormID = FCC.FormID AND PT.SearchID = FCCC.ReferenceID 
					--AND PT.TableColumn = WSCC.TableColumn AND PT.DefaultValue = WSCC.DefaultValue AND PT.IsDeleted = 0
					);

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spFromSaveControlConfiguration]'
GO

CREATE PROCEDURE [dbo].[spFromSaveControlConfiguration] (@IN_FormConfigID BIGINT, @IN_ID BIGINT, @IN_Type VARCHAR(100), @IN_EventFlag BIT, @IN_ButtonID INT, @IN_UserID INT, @IN_IPAddress VARCHAR(200))
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_SaveConfiguration

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@TableName VARCHAR(100),
					@FormTableName VARCHAR(100),
					@GroupTableName VARCHAR(100),
					@TabTableName VARCHAR(100),
					@FormKeyColumn VARCHAR(100),
					@TabKeyColumn VARCHAR(100),
					@GroupboxKeyColumn VARCHAR(100),
					@SCount INT = 0,
					@Source INT,
					@GroupID INT,
					@TableCount INT,
					@ControlMin INT,
					@CreateColumns NVARCHAR(MAX),
					@CreateColumnQuery NVARCHAR(MAX),
					@ControlCount INT,
					@Query NVARCHAR(MAX),
					@TypeValues NVARCHAR(100),
					@DataType INT,
					@TableColumn NVARCHAR(100),
					@ColumnCount INT,
					@AlterColumn NVARCHAR(MAX),
					@AlterColumnQuery NVARCHAR(MAX),
					@ControlType INT,
					@ColumnID INT,
					@FormType INT,
					@ChildKey NVARCHAR(100),
					@ChildTable NVARCHAR(100),
					@PrimaryKey NVARCHAR(100),
					@ParentTable NVARCHAR(100),
					@ChildTabID INT,
					@ParentControlTab INT,
					@ParentControlGroupbox INT,
					@IsIdentity BIT,
					@ForeignCount INT = 0,
					@ForeignMin INT = 0,
					@ForeignKey NVARCHAR(100),
					@ButtonCount INT,
					@ButtonMin INT,
					@ButtonGroupID INT,
					@ProcessRefKey INT,
					@TabID INT,
					@ProcessKey INT,
					@ButtonName NVARCHAR(100),
					@ButtonID INT, 
					@ProcessColumn VARCHAR(100),
					@FillEvent VARCHAR(250),
					@GroupOrder INT,
					@ParentControlCount INT,
					@ProcessControlType INT,
					@ProcessCount INT,
					@KeyColumn VARCHAR(100),
					@ChildKeyColumn VARCHAR(100),
					@FkTable VARCHAR(100),
					@FkColumn VARCHAR(100),
					@ColumnOrder INT,
					@ViewTableCount INT,
					@KeyPrimaryCount INT,
					@DefaultControlCount INT,
					@PropCount INT,
					@ProptyCount INT,
					@MinCount INT,
					@SelectAll BIT,
					@SubTableColumn VARCHAR(100),
					@keyCount INT,
					@AlterTableQuery NVARCHAR(MAX),
					@ProcessButtonID INT,
					@GridCount INT = 0,
					@PropControlID BIGINT = 0,
					@GridColumnCount INT = 0,
					@CQuery NVARCHAR(MAX) = '',
					@CompanyID INT = ISNULL((SELECT CompanyID FROM FormConfiguration WHERE ReferenceID = @IN_FormConfigID), 0),
					@FormDefaultControl INT = 0,
					@TotalCount INT = 0,
					@LoopCount INT = 0,
					@FormControlDataType INT = 0,
					@RowEvent NVARCHAR(MAX) = '',
					@ProcessKeyColumn VARCHAR(100);
			
			IF @IN_Type = 'FormControls'
			BEGIN
				UPDATE MT
				SET MT.IsDeleted = 1,
					MT.DeletedBy = @IN_UserID,
					MT.DeletedDate = @UTCTime,
					MT.DeletedDateGMT = @UTCTime
				FROM FormControlConfig MT
					LEFT JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND PT.TableColumn IS NULL
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;


				UPDATE MT
				SET MT.Name = PT.Name,
					MT.TableColumn = PT.TableColumn,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.IsWizard = PT.IsWizard,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.MaxRange = PT.MaxRange,
					MT.AttachmentPath = PT.AttachmentPath,
					MT.UniqueGroup = PT.UniqueGroup,
					MT.IsIdentity = PT.IsIdentity,
					MT.IsDmlControl = PT.IsDmlControl,
					MT.IsEncrypt = PT.IsEncrypt,
					MT.IsReturnFill = PT.IsReturnFill,
					MT.IsNoAdd = PT.IsNoAdd,
					MT.IsNoUpdate = PT.IsNoUpdate,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.FkData1 = PT.FkData1,
					MT.FkData2 = PT.FkData2,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.FilterConditions = PT.FilterConditions,
					MT.FillEvent = PT.FillEvent,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.FillEventType = PT.FillEventType,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.FkShowActive = PT.FkShowActive,
					MT.VersionCheck = PT.VersionCheck,
					MT.ControlOrder = PT.ControlOrder,
					MT.DependentFlag = PT.DependentFlag,
					MT.ButtonID = PT.ButtonID,
					MT.DefaultControl = PT.DefaultControl,
					MT.DataTreeCondition = PT.DataTreeCondition,
					MT.DataBaseDecimalLength = PT.DataBaseDecimalLength,
					MT.DecimalLength = PT.DecimalLength,
					MT.IsCurrency = PT.IsCurrency,
					MT.CurrencyColumn = PT.CurrencyColumn,
					MT.IsIndex = PT.IsIndex,
					MT.ColumnCreation = PT.ColumnCreation,
					MT.DataVariable = PT.DataVariable,
					MT.IsAutoGenerate = PT.IsAutoGenerate,
					MT.IsSelectAll = PT.IsSelectAll,					
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime,
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description,
					MT.AttachmentMaxSize = PT.AttachmentMaxSize
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				SELECT @TableName = (CASE WHEN ISNULL(GC.TableName, '') <> '' THEN GC.TableName WHEN ISNULL(TC.TableName, '') <> '' THEN TC.TableName ELSE FC.TableName END),
					@FormTableName = FC.TableName, @TabTableName = TC.TableName, @GroupTableName = GC.TableName, @FormKeyColumn = FC.KeyColumn, @GroupboxKeyColumn = GC.KeyColumn, 
					@TabKeyColumn = TC.KeyColumn, @Source = FC.Source, @FormType = FC.FormType
				FROM FormGroupboxConfig GC
					JOIN FormTabConfig TC ON TC.ReferenceID = GC.TabID AND TC.IsDeleted = 0
					JOIN FormConfiguration FC ON FC.ReferenceID = GC.FormID AND FC.IsDeleted = 0
				WHERE GC.ReferenceID = @IN_ID AND GC.IsDeleted = 0;

				IF ISNULL(@FormKeyColumn, '') = ''
				BEGIN
					SET @FormKeyColumn = 'ReferenceID';
				END

				SELECT @ProcessCount = COUNT(1) FROM FormControlsProcess WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND UserID = @IN_UserID;
				SET @ProcessControlType = 0;
				IF @ProcessCount = 1
				BEGIN 
					SET @ProcessControlType = (SELECT ControlType FROM FormControlsProcess WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND UserID = @IN_UserID);
				END

				SET @ChildTable = '';
				SET @ChildKey = '';
				IF @GroupTableName <> ''
				BEGIN
					SET @ChildTable = @GroupTableName;
					SET @ChildKey = @GroupboxKeyColumn;
				END
				ELSE IF @TabTableName <> '' AND @FormTableName <> @TabTableName
				BEGIN
					SET @ChildTable = @TabTableName;
					SET @ChildKey = @TabKeyColumn;
				END

				IF @ChildTable <> ''
				BEGIN
					SELECT @ChildTabID = TabID FROM FormGroupboxConfig WHERE FormID = @IN_FormConfigID AND ReferenceID = @IN_ID AND IsDeleted = 0;
			 				 
					SET @ColumnCount = 0;
					IF @GroupTableName <> ''
						SELECT @ColumnCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND TableColumn = @ChildKey AND IsDeleted = 0;
					ELSE
						SELECT @ColumnCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND TabID = @ChildTabID AND TableColumn = @ChildKey AND IsDeleted = 0;
				
				IF @ColumnCount = 0 AND @ProcessControlType <> 19 
				BEGIN
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
						MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
						IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
						FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
						CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
					SELECT @IN_FormConfigID, @ChildTabID, @IN_ID, @ChildKey, @ChildKey, 1, 2, 0, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', '', 1, 
						0, 1, 0, 1, 0, 0, 0, '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0;
				END

				END
				ELSE 
				BEGIN
					SELECT TOP 1 @GroupID = GB.ReferenceID 
					FROM FormGroupboxConfig GB
						JOIN FormTabConfig TC ON TC.ReferenceID = GB.TabID
					WHERE GB.FormID = @IN_FormConfigID AND GB.DefaultGroupbox = 0 AND GB.IsDeleted = 0 AND TC.TabOrder = 1
						AND ((GB.GroupOrder = 1 AND @FormType = 2) OR (GB.GroupOrder = 2 AND @FormType <> 4 AND @FormType <> 2) OR (GB.GroupOrder = 3 AND @FormType = 4));
				SELECT @ColumnCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND GroupID = @GroupID AND TableColumn = @FormKeyColumn AND IsDeleted = 0;

				IF @ColumnCount = 0 AND @ProcessControlType <> 19 AND ISNULL(@GroupID, 0) <> 0
				BEGIN
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
					SELECT @IN_FormConfigID, GC.TabID, @GroupID, @FormKeyColumn, @FormKeyColumn, 1, 2, 1, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', '', 1, 
							0, 0, 0, 1, 0, 0, 0, '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
					FROM FormGroupboxConfig GC
					WHERE GC.FormID = @IN_FormConfigID AND GC.ReferenceID = @GroupID AND GC.IsDeleted = 0;
				END

				END
				SET @ColumnCount = 0;

				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
					IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, FilterConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, DataTreeCondition, DataBaseDecimalLength, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, 
					ColumnCreation, DataVariable, IsAutoGenerate, IsSelectAll, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
				SELECT PT.FormID, PT.TabID, PT.GroupID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard,
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, 
					PT.UniqueGroup, PT.IsDmlControl, PT.IsEncrypt, PT.IsReturnFill, PT.IsNoAdd, PT.IsNoUpdate, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.FkData1, PT.FkData2,
					PT.AdditionalConditions, PT.FilterConditions, PT.FillEvent, PT.ControlEventType, PT.ValidationEventType, PT.FillEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, PT.ControlOrder, 
					PT.DependentFlag, PT.ButtonID, PT.DefaultControl, PT.DataTreeCondition, PT.DataBaseDecimalLength, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.ColumnCreation,
					PT.DataVariable, PT.IsAutoGenerate, PT.IsSelectAll, PT.Description, @CompanyID, PT.ControlOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference, PT.AttachmentMaxSize
				FROM FormControlsProcess PT
					LEFT JOIN FormControlConfig MT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.FormID = @IN_FormConfigID AND PT.GroupID = @IN_ID AND PT.UserID = @IN_UserID AND MT.ReferenceID IS NULL;

				IF @ChildTable <> ''
				BEGIN
					SELECT @PrimaryKey = Col.Column_Name FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
						AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @ChildTable

					SELECT @SubTableColumn = TableColumn FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND IsIdentity = 1 AND IsDeleted = 0;

					IF @SubTableColumn <> @PrimaryKey
					BEGIN
						SELECT @KeyCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @ChildTable AND COLUMN_NAME = @SubTableColumn;

						IF @KeyCount = 0
						BEGIN
							SET @AlterTableQuery = ('EXEC sp_rename '''+ @ChildTable+'.'+ @PrimaryKey+''', '''+ @SubTableColumn+''', ''COLUMN''');
							EXEC (@AlterTableQuery);
						 END
					END
				END

				SELECT @PrimaryKey = Col.Column_Name FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
					AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @ChildTable

				IF @ProcessControlType <> 19 AND ISNULL(@ChildTable, '') <> ''
				BEGIN
					SELECT @ChildTabID = TabID FROM FormGroupboxConfig WHERE FormID = @IN_FormConfigID AND ReferenceID = @IN_ID AND IsDeleted = 0;
					SET @ColumnCount = 0;
					IF @GroupTableName <> ''
						SELECT @ColumnCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND TableColumn = @PrimaryKey AND IsDeleted = 0;
					ELSE
						SELECT @ColumnCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND TabID = @ChildTabID AND TableColumn = @PrimaryKey AND IsDeleted = 0;

					IF @ColumnCount = 0
					BEGIN
						INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
						SELECT @IN_FormConfigID, @ChildTabID, @IN_ID, @PrimaryKey, @PrimaryKey, 1, 2, 1, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', 1, 
							0, 0, 0, 1, 0, 0, 0, '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0;
					END
				END

				IF OBJECT_ID('tempdb..#tempFormControls') IS NOT NULL
				DROP TABLE #tempFormControls

				CREATE TABLE #tempFormControls (
					SNum INT NULL,
					TableColumn NVARCHAR(100) NULL,
					ControlType INT NULL,
					DataType INT NULL,
					IsIdentity BIT NULL,
					FkTable NVARCHAR(100) NULL)

				INSERT INTO #tempFormControls (TableColumn, ControlType, DataType, IsIdentity, FkTable)
				SELECT TableColumn, ControlType, DataType, IsIdentity, FkTable
				FROM FormControlConfig WHERE GroupID = @IN_ID AND FormID = @IN_FormConfigID AND IsDeleted = 0;

				UPDATE #tempFormControls SET @SCount = SNum = @SCount + 1;
				
				IF @Source = 1
				BEGIN
					SELECT @TableCount = COUNT(1) FROM sys.objects WHERE TYPE IN (N'U') AND Name = @TableName;
					SET @ControlMin = 0;
					SELECT @ControlCount = COUNT(1) FROM FormControlConfig WHERE GroupID = @IN_ID AND FormID = @IN_FormConfigID AND IsIdentity = 0 AND IsDeleted = 0;

					WHILE @ControlCount > @ControlMin
					BEGIN
						SET @Query = 'SELECT @TempTableColumn = FC.TableColumn FROM #tempFormControls FC WHERE FC.SNum ='+ CAST((@ControlMin + 1) AS VARCHAR(50));
						EXEC SP_EXECUTESQL @Query, N'@TempTableColumn NVARCHAR(100) OUT', @TableColumn OUT

						SET @Query = 'SELECT @TempControlType = FC.ControlType FROM #tempFormControls FC WHERE SNum ='+ CAST((@ControlMin + 1) AS VARCHAR(50));				 
						EXEC SP_EXECUTESQL @Query, N'@TempControlType INT OUT', @ControlType OUT

						SET @Query = 'SELECT @TempDataType = FC.DataType FROM #tempFormControls FC WHERE SNum ='+ CAST((@ControlMin + 1) AS VARCHAR(50));
						EXEC SP_EXECUTESQL @Query, N'@TempDataType INT OUT', @DataType OUT

						SET @Query = 'SELECT @TempParentTable = FC.FkTable FROM #tempFormControls FC WHERE SNum ='+ CAST((@ControlMin + 1) AS VARCHAR(50));
						EXEC SP_EXECUTESQL @Query, N'@TempParentTable NVARCHAR(100) OUT', @ParentTable OUT

						SET @Query = 'SELECT @TempIsIdentity = FC.IsIdentity FROM #tempFormControls FC WHERE SNum ='+ CAST((@ControlMin + 1) AS VARCHAR(50));					
						EXEC SP_EXECUTESQL @Query, N'@TempIsIdentity BIT OUT', @IsIdentity OUT
					
					IF @FormType = 4
					BEGIN
						SELECT @GroupOrder = GroupOrder FROM FormGroupboxConfig WHERE ReferenceID = @IN_ID AND FormID = @IN_FormConfigID AND IsDeleted = 0;
						SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = 'ParentID';

						IF @GroupOrder = 3
						BEGIN
							SELECT TOP 1 @ParentControlTab = TC.ReferenceID, @ParentControlGroupbox = GC.ReferenceID
							FROM FormTabConfig TC
								JOIN FormGroupboxConfig GC ON GC.ReferenceID = @IN_ID AND GC.IsDeleted = 0
							WHERE TC.FormID = @IN_FormConfigID AND TC.IsDeleted = 0;

							SELECT @ControlCount = COUNT(1) FROM FormControlConfig WHERE GroupID = @ParentControlGroupbox AND FormID = @IN_FormConfigID AND TableColumn = 'ParentID' AND IsDeleted = 0;
							SELECT @ParentControlCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND TableColumn = 'ParentID' AND IsDeleted = 0;
							SELECT @DefaultControlCount = COUNT(1) FROM FormControlConfig WHERE GroupID = @IN_ID AND FormID = @IN_FormConfigID AND DefaultControl = 1 AND IsDeleted = 0;
							
							IF @ControlCount = 0 AND @ParentControlCount = 0 AND @DefaultControlCount = 0
							BEGIN

							INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
								MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
								IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
								FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DefaultControl, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
								CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
							SELECT @IN_FormConfigID, @ParentControlTab, @IN_ID, 'ParentID', 'ParentID', 1, 2, 0, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', 0, 
								0, 1, 0, 1, 0, 0, 0, '', '', '', '', 'CMNF.applyTreeValuetoTextBox(''txtParentID'')', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0;

							END 
						END
					 END
					 SET @ControlMin = @ControlMin + 1;
					END 
				END
				IF OBJECT_ID('tempdb..#tempFormControls') IS NOT NULL
					DROP TABLE #tempFormControls

				IF OBJECT_ID('tempdb..#tempformDefaultControl') IS NOT NULL 
				DROP TABLE #tempformDefaultControl

				CREATE TABLE #tempformDefaultControl (
					ReferenceID INT NULL,
					row_no INT NULL
				);

				INSERT INTO #tempformDefaultControl
					SELECT ReferenceID, ROW_NUMBER() OVER (ORDER BY ReferenceID) AS row_no
					FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND ControlType IN (24, 25) AND IsDeleted = 0;

				SET @TotalCount = (SELECT COUNT(1) FROM #tempformDefaultControl);
				SET @LoopCount = 1;

				WHILE @TotalCount >= @LoopCount
				BEGIN
					SET @FormDefaultControl = 0;
					SET @FormDefaultControl = ISNULL((SELECT FC.ReferenceID FROM FormControlConfig FC
															JOIN #tempformDefaultControl T ON FC.ReferenceID = T.ReferenceID
														WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND ControlType IN (24, 25) AND IsDeleted = 0 AND T.row_no = @LoopCount), 0);

					IF @FormDefaultControl <> 0 AND NOT EXISTS(SELECT 1 FROM FormControlColumnsConfig WHERE ControlID = @FormDefaultControl AND DependentFlag = 0 AND IsDeleted = 0)
					BEGIN
						INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DataBaseDecimalLength, DecimalLength, 
							IsCurrency, CurrencyColumn, IsIndex, DependentType, ColumnCreation, DataVariable, IsAutoGenerate, Description,
							CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
					
						SELECT @IN_FormConfigID, FC.TabID, @IN_ID, @FormDefaultControl, 'Select', 'OrderBy', '', '', CASE WHEN FC.ControlType = 25 THEN 21 WHEN FC.ControlType = 24 THEN 3 ELSE 0 END, 
									CASE WHEN FC.ControlType = 25 THEN 2 WHEN FC.ControlType = 24 THEN 3 ELSE 0 END, 1, 0, 0, 1, 0, -1, '', '', '', '', 0, 0, '', '', 0, '', 0,
									0, '', '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 100, 0, 0, 0, '', 0, 0, 0, 0, 0, '', 
									@CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
						FROM FormControlConfig FC
							JOIN #tempformDefaultControl T ON FC.ReferenceID = T.ReferenceID
						WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND T.row_no = @LoopCount; 

						IF (SELECT FC.FKData FROM FormControlConfig FC JOIN #tempformDefaultControl T ON FC.ReferenceID = T.ReferenceID
									WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND T.row_no = @LoopCount) NOT IN ('', 'ReferenceID', 'CodemasterID')
						BEGIN
							INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
								DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
								MaxLength, Events, ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
								FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
								FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DataBaseDecimalLength, DecimalLength, 
								IsCurrency, CurrencyColumn, IsIndex, DependentType, ColumnCreation, DataVariable, IsAutoGenerate, Description,
								CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
								
							SELECT @IN_FormConfigID, FC.TabID, @IN_ID, @FormDefaultControl, FC.FKData,	FC.FKData, '', '', 20, 
								9, 1, 0, 0, 1, 1, -1, '', '', '', '', 0, 0, '', '', 0, '', 0, 0, '', '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 100, 0, 0, 0, '', 0, 0, 0, 0, 0, '', 
								@CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
							FROM FormControlConfig FC
								JOIN #tempformDefaultControl T ON FC.ReferenceID = T.ReferenceID
							WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND T.row_no = @LoopCount;
						END 

						INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DataBaseDecimalLength, DecimalLength, 
							IsCurrency, CurrencyColumn, IsIndex, DependentType, ColumnCreation, DataVariable, IsAutoGenerate, Description,
							CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
								
						SELECT @IN_FormConfigID, FC.TabID, @IN_ID, @FormDefaultControl, CASE WHEN FC.FKType = 1 THEN 'CodemasterID' ELSE 'ReferenceID' END, 
									CASE WHEN FC.FKType = 1 THEN 'CodemasterID' ELSE 'ReferenceID' END , '', '', 20, 
									1, 0, 1, 0, 1, 1, -1, '', '', '', '', 0, 0, '', '', 1, '0', 0, 0, '', '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 100, 0, 0, 0, '', 0, 0, 0, 1, 0, '', 
									@CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
						FROM FormControlConfig FC
							JOIN #tempformDefaultControl T ON FC.ReferenceID = T.ReferenceID
						WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND T.row_no = @LoopCount;
					END
					SET @LoopCount = @LoopCount + 1;
				END

				IF OBJECT_ID('tempdb..#tempformDefaultControl') IS NOT NULL 
				DROP TABLE #tempformDefaultControl

				--	UPDATE FormControlConfig SET IsIdentity = 1 WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID AND TableColumn = @FormKeyColumn AND IsDeleted = 0 
				--	AND ControlType NOT IN (18, 19, 24, 25);

				SELECT @ButtonCount = COUNT(1) FROM FormButtonConfig WHERE FormID = @IN_FormConfigID AND IsDeleted = 0 AND ButtonType = 5;
				SET @ButtonMin = 0;

				SET @SCount = 0;
				IF OBJECT_ID('tempdb..#tempFormButtons') IS NOT NULL
				DROP TABLE #tempFormButtons

				CREATE TABLE #tempFormButtons (
					SNum INT NULL,
					ReferenceID INT NULL,
					TypeValues NVARCHAR(100) NULL,					
					ButtonKeyColumn NVARCHAR(100) NULL)

				INSERT INTO #tempFormButtons (ReferenceID, TypeValues, ButtonKeyColumn)
				SELECT ReferenceID, TypeValues, ButtonKeyColumn
				FROM FormButtonConfig WHERE ButtonType = 5 AND FormID = @IN_FormConfigID AND IsDeleted = 0 ORDER BY OrderBy ASC;

				UPDATE #tempFormButtons SET @SCount = SNum = @SCount + 1;

				WHILE @ButtonCount > @ButtonMin
				BEGIN
					SET @Query = 'SELECT @TempButtonID = ReferenceID FROM #tempFormButtons FC WHERE SNum ='+ CAST((@ButtonMin + 1) AS VARCHAR(50));
					EXEC SP_EXECUTESQL @Query, N'@TempButtonID INT OUT', @ButtonID OUT

					SET @Query = 'SELECT @TempButtonName = TypeValues FROM #tempFormButtons FC WHERE SNum ='+ CAST((@ButtonMin + 1) AS VARCHAR(50));					 
					EXEC SP_EXECUTESQL @Query, N'@TempButtonName NVARCHAR(100) OUT', @ButtonName OUT

					SET @Query = 'SELECT @TempProcessColumn = ButtonKeyColumn FROM #tempFormButtons FC WHERE SNum ='+ CAST((@ButtonMin + 1) AS VARCHAR(50));					
					EXEC SP_EXECUTESQL @Query, N'@TempProcessColumn NVARCHAR(100) OUT', @ProcessColumn OUT

					SELECT @ButtonGroupID = ButtonID, @TabID = TabID FROM FormGroupboxConfig WHERE FormID = @IN_FormConfigID AND ReferenceID = @IN_ID AND IsDeleted = 0;

					IF @ButtonGroupID = @ButtonID
					BEGIN
						SELECT @PrimaryKey = Col.Column_Name FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
							AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @FormTableName
						
						IF (ISNULL(@GroupboxKeyColumn, '') <> '')
							SET @ProcessKeyColumn = @GroupboxKeyColumn;
						ELSE IF (ISNULL(@TabKeyColumn, '') <> '')
							SET @ProcessKeyColumn = @TabKeyColumn;
						ELSE IF (ISNULL(@FormKeyColumn, '') <> '')
							SET @ProcessKeyColumn = @FormKeyColumn;

						IF ISNULL(@ProcessKeyColumn, '') <> ''
						BEGIN
							SELECT @ProcessRefKey = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND GroupID = @IN_ID /*AND ButtonID = @ButtonID*/ AND TableColumn = @ProcessKeyColumn AND IsDeleted = 0;

							IF ISNULL(@ProcessRefKey, 0) = 0
							BEGIN
								INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
									MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
									IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
									FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ButtonID, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
									CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
								SELECT @IN_FormConfigID, @TabID, @IN_ID, @ProcessKeyColumn, @ProcessKeyColumn, 1, 2, 0, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', 1, 
									0, 0, 0, 1, 0, 0, 0, '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, @ButtonID, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0;
							END
						END					
					END					

					SET @ButtonMin = @ButtonMin + 1;
				END
				IF OBJECT_ID('tempdb..#tempFormButtons') IS NOT NULL
					DROP TABLE #tempFormButtons

				SELECT @ProcessButtonID = ButtonID FROM FormGroupboxConfig WHERE ReferenceID = @IN_ID AND FormID = @IN_FormConfigID AND IsDeleted = 0;
				SELECT TOP 1 @GridCount = COUNT(1) FROM FormControlConfig CT WHERE CT.GroupID = @IN_ID AND CT.FormID = @IN_FormConfigID AND CT.ControlType = 19 AND CT.IsDeleted = 0;
				SELECT TOP 1 @PropControlID = CT.ReferenceID FROM FormControlConfig CT WHERE CT.GroupID = @IN_ID AND CT.FormID = @IN_FormConfigID AND CT.ControlType = 19 AND CT.IsDeleted = 0 
				SELECT @PropCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = @PropControlID AND Type = 'Control' AND PropertyName = 'Fk Parent Grid' AND IsDeleted = 0;
				
				IF ISNULL(@ProcessButtonID, 0) = 0 AND @GridCount <> 0 AND @PropCount = 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					SELECT @IN_FormConfigID, @PropControlID, 'Control', 'Fk Parent Grid', MT.Name, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
					FROM FormControlConfig MT
						JOIN FormGroupboxConfig GB ON GB.ReferenceID = MT.GroupID AND GB.IsDeleted = 0 AND GB.DefaultGroupbox = 1
					WHERE MT.FormID = @IN_FormConfigID AND MT.ReferenceID = @PropControlID AND MT.ControlType = 19 AND MT.IsDeleted = 0;
				END

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Grid Header', MT.Name, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Grid Header' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Grid Access Type', '1', '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 19 AND MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Grid Access Type' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Page Size', '15', '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 19 OR MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Page Size' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Order By', 'DESC', 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 18 AND MT.FkOrder = 5
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Order By' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Row Event', CASE WHEN ISNULL(MT.ControlType, 0) = 19 THEN 'STP.rowClickEvent' WHEN ISNULL(MT.ControlType, 0) IN (24, 25) THEN 'STP.gridListRowEvent(gridID, rowData, rowID)' ELSE '' END, '', @CompanyID, 
					@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25 OR MT.ControlType = 19)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Row Event' AND IsDeleted = 0);

				UPDATE PC
				SET PC.IsDeleted = 1,
					PC.DeletedBy = @IN_UserID,
					PC.DeletedDate = @UTCTime,
					PC.DeletedDateGMT = @UTCTime,
					PC.DeleteReason = 'FK Order changed'
				FROM FormControlConfig MT
					JOIN FormControlPropertyConfig PC ON PC.ControlID = MT.ReferenceID AND PC.FormID = MT.FormID 
						AND PC.Type ='Control' AND PC.PropertyName ='Order By' AND PC.IsDeleted = 0
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 18 AND ISNULL(MT.FkOrder, 0) <> 5

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'UTC', PT.IsUTC, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.UserID = @IN_UserID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND MT.TableColumn = PT.TableColumn AND MT.Name = PT.Name
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 5
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'UTC' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Decimal Length', ISNULL(MT.DecimalLength, 4), 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Decimal Length' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'DataBase Decimal Length', ISNULL(MT.DataBaseDecimalLength, 4), 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'DataBase Decimal Length' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Decimal Currency', ISNULL(MT.IsCurrency, 0), 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Decimal Currency' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Currency Column', ISNULL(MT.CurrencyColumn, ''), 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Currency Column' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'File Upload', PT.IsUpload, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
					AND PT.UserID = @IN_UserID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND MT.TableColumn = PT.TableColumn AND MT.Name = PT.Name
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'File Upload' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'File Download', PT.IsDownload, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
					AND PT.UserID = @IN_UserID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND MT.TableColumn = PT.TableColumn AND MT.Name = PT.Name
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'File Download' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'File View', PT.IsView, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
					AND PT.UserID = @IN_UserID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND MT.TableColumn = PT.TableColumn AND MT.Name = PT.Name
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'File View' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'File Delete', PT.IsDelete, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
					AND PT.UserID = @IN_UserID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND MT.TableColumn = PT.TableColumn AND MT.Name = PT.Name
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'File Delete' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Control', 'Type', PT.IsFixed, 'Control', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlConfig MT
					JOIN FormControlsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID 
					AND PT.UserID = @IN_UserID
				WHERE MT.FormID = @IN_FormConfigID AND MT.GroupID = @IN_ID AND MT.TableColumn = PT.TableColumn AND MT.Name = PT.Name
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Control' AND PropertyName = 'Type' AND IsDeleted = 0);
				
				UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END 
			ELSE IF @IN_Type = 'ControlColumns'
			BEGIN
				SELECT @GridColumnCount = COUNT(1) FROM FormControlConfig WHERE ReferenceID = @IN_ID AND FormID = @IN_FormConfigID AND ControlType = 19 AND IsDeleted = 0;

				SET @CQuery = '	UPDATE MT SET MT.IsDeleted = 1, MT.DeletedBy = ' + CAST(@IN_UserID AS VARCHAR(50)) + ',
									MT.DeletedDate = ''' + CAST(@UTCTime AS VARCHAR(50))+ ''', MT.DeletedDateGMT = ''' + CAST(@UTCTime AS VARCHAR(50)) + '''
								FROM FormControlColumnsConfig MT
									LEFT JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID 
										AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
										AND PT.UserID = ' + CAST(@IN_UserID AS VARCHAR(50)) + ' AND PT.ColumnID = MT.ReferenceID
								WHERE MT.FormID = ' + CAST(@IN_FormConfigID AS VARCHAR(50)) + ' AND MT.ControlID = ' + CAST(@IN_ID AS VARCHAR(50)) + 
									CASE WHEN ISNULL(@GridColumnCount, 0) = 0 THEN ' AND MT.DependentFlag = ' + CAST(@IN_EventFlag AS VARCHAR(50)) ELSE '' END + '				
									AND PT.ColumnName IS NULL AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1 ;'
				EXEC (@CQuery);

				UPDATE MT
				SET MT.DisplayName = PT.DisplayName,
					MT.ColumnName = PT.ColumnName,
					MT.ColumnName1 = PT.ColumnName1,
					MT.ColumnName2 = PT.ColumnName2,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.IsWizard = PT.IsWizard,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.FillEvent = PT.FillEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.SearchApplicable = PT.SearchApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.AttachmentPath = PT.AttachmentPath,
					MT.UniqueGroup = PT.UniqueGroup,
					MT.IsDmlControl = PT.IsDmlControl,
					MT.IsIdentity = PT.IsIdentity,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.FkData1 = PT.FkData1,
					MT.FkData2 = PT.FkData2,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.DependentFlag = PT.DependentFlag,
					MT.SelectAll = PT.SelectAll,
					MT.ColumnWidth = PT.ColumnWidth, 
					MT.DataBaseDecimalLength = PT.DataBaseDecimalLength,
					MT.DecimalLength = PT.DecimalLength,
					MT.IsIndex = PT.IsIndex,
					MT.IsCurrency = PT.IsCurrency,
					MT.CurrencyColumn = PT.CurrencyColumn,
					MT.GridParentControl = PT.GridParentControl,
					MT.DependentType = PT.DependentType,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.FkShowActive = PT.FkShowActive,
					MT.VersionCheck = PT.VersionCheck,
					MT.ColumnOrder = PT.ColumnOrder,
					MT.ColumnCreation = PT.ColumnCreation,
					MT.DataVariable = PT.DataVariable,
					MT.IsAutoGenerate = PT.IsAutoGenerate,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime, 
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description,
					MT.AttachmentMaxSize = PT.AttachmentMaxSize,
					MT.IsNoUpdate = PT.IsNoUpdate
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID 
						AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
					JOIN FormControlConfig CT ON CT.ReferenceID = MT.ControlID AND CT.IsDeleted = 0
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				SELECT @FkTable = CASE WHEN CC.DefaultControl = 0 THEN CASE WHEN CC.FkType = 1 THEN 'CmnCodeMaster' ELSE CC.FkTable END END,
						@FkColumn = CASE WHEN CC.DefaultControl = 0 THEN CC.FkColumn ELSE '' END,
						@TableName = CASE WHEN LEN(GC.TableName) > 0 THEN GC.TableName WHEN LEN(TC.TableName) > 0 THEN TC.TableName ELSE FC.TableName END,
						@ChildKeyColumn = CASE WHEN LEN(GC.TableName) > 0 THEN GC.KeyColumn WHEN LEN(TC.TableName) > 0 THEN TC.KeyColumn ELSE FC.KeyColumn END, @ControlType = CC.ControlType
				FROM FormControlConfig CC 
					JOIN FormGroupboxConfig GC ON GC.ReferenceID = CC.GroupID
					JOIN FormTabConfig TC ON TC.ReferenceID = GC.TabID
					JOIN FormConfiguration FC ON FC.ReferenceID = @IN_FormConfigID
				WHERE CC.ReferenceID = @IN_ID AND CC.FormID = @IN_FormConfigID AND CC.IsDeleted = 0;

				IF @ControlType = 19 -- OR @ControlType = 24 OR @ControlType = 25
				BEGIN
					IF @ControlType = 19
						SET @ColumnOrder = 1;
					ELSE
						SET @ColumnOrder = @ColumnCount+1;

					SELECT @ViewTableCount = COUNT(1) FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME <> @FkTable;	
					IF @ViewTableCount = 0
					BEGIN
						SET @TableName = @FkTable;
					END

					SET @KeyColumn = ISNULL((SELECT TOP 1 Col.Column_Name FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
											AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @TableName), '')
					IF @TableName = 'CmnCodeMaster'
					BEGIN 
						SET @KeyColumn = 'CodemasterID'
					END

					IF @ChildKeyColumn = 'ReferenceID' AND @KeyColumn <> 'ReferenceID' AND @TableName <> 'CmnCodeMaster'
					BEGIN					
						SELECT @KeyPrimaryCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @ChildKeyColumn;
						IF @KeyPrimaryCount > 0
						BEGIN 
							SET @AlterColumnQuery = ('ALTER TABLE '+ @TableName+' DROP COLUMN '+@ChildKeyColumn);
							EXEC (@AlterColumnQuery);
						END

						SET @AlterColumnQuery = ('EXEC sp_rename '''+ @TableName+'.'+ @KeyColumn+''', '''+ @ChildKeyColumn+''', ''COLUMN''');
						EXEC (@AlterColumnQuery);
						SET @KeyColumn = @ChildKeyColumn;
					END

					SELECT @ColumnCount = COUNT(1) FROM FormControlColumnsConfig WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND ColumnName = @KeyColumn AND IsDeleted = 0;

					IF @ColumnCount = 0 AND ISNULL(@KeyColumn, '') <> ''
					BEGIN
						INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize, IsNoUpdate)
						SELECT TOP 1 @IN_FormConfigID, FC.TabID, FC.GroupID, @IN_ID, @KeyColumn, @KeyColumn, '', '', 20, 2, 1, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', 1, 
							0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0, 0
						FROM FormControlConfig FC
						WHERE FC.FormID = @IN_FormConfigID AND FC.ReferenceID = @IN_ID AND FC.IsDeleted = 0;
					END

					SET @ColumnCount = 0;
					SELECT @ColumnCount = COUNT(1) FROM FormControlColumnsConfig WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND ColumnName = @ChildKeyColumn AND IsDeleted = 0;

					IF @ColumnCount = 0 AND @TableName <> 'CmnCodeMaster'
					BEGIN
						INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize, IsNoUpdate)
						SELECT TOP 1 @IN_FormConfigID, FC.TabID, FC.GroupID, @IN_ID, @ChildKeyColumn, @ChildKeyColumn, '', '', 20, 2, 1, 1, 0, 1, 0, -1, '', '', 0, 0, '', '', 0, 
							0, 1, 0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0, 0
						FROM FormControlConfig FC
						WHERE FC.FormID = @IN_FormConfigID AND FC.ReferenceID = @IN_ID AND FC.IsDeleted = 0;
					END
				END

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
					DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					MaxLength, Events, ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DataBaseDecimalLength, DecimalLength, 
					IsCurrency, CurrencyColumn, IsIndex, DependentType, ColumnCreation, DataVariable, IsAutoGenerate, Description,
					CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize, IsNoUpdate)
				SELECT PT.FormID, PT.TabID, PT.GroupID, PT.ControlID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard,
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.FillEvent, PT.GridParentControl, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, 
					PT.UniqueGroup, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.FkData1, PT.FkData2,
					PT.AdditionalConditions, PT.ControlEventType, PT.ValidationEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, 
					PT.ColumnOrder, PT.DependentFlag, PT.SelectAll, PT.ColumnWidth, PT.DataBaseDecimalLength, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.DependentType,
					PT.ColumnCreation, PT.DataVariable, PT.IsAutoGenerate, PT.Description, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference, PT.AttachmentMaxSize, PT.IsNoUpdate
				FROM FormControlColumnsProcess PT
					LEFT JOIN FormControlColumnsConfig MT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID 
						AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
					JOIN FormControlConfig FC ON FC.ReferenceID = PT.ControlID AND FC.IsDeleted = 0
				WHERE PT.FormID = @IN_FormConfigID AND PT.ControlID = @IN_ID AND (PT.DependentFlag = @IN_EventFlag OR FC.ControlType = 19) AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;

				IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
					DROP TABLE #tempTableColumns

				CREATE TABLE #tempTableColumns(
					SNum INT NULL,
					ColumnID INT NULL,
					SelectAll BIT NULL
				);

				SET @SCount = 0;
				INSERT INTO #tempTableColumns
				SELECT 0, ReferenceID, SelectAll
				FROM FormControlColumnsConfig WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND IsDeleted = 0;

				UPDATE #tempTableColumns SET @SCount = SNum = @SCount + 1;
				SELECT @PropCount = COUNT(1) FROM #tempTableColumns;
				SET @MinCount = 0;

				WHILE @PropCount > @MinCount
				BEGIN
					SET @MinCount = @MinCount + 1;
					SELECT @ColumnID = ColumnID, @SelectAll = SelectAll FROM #tempTableColumns WHERE SNum = @MinCount;

				IF @SelectAll = 1
				BEGIN
					SELECT @ProptyCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = @ColumnID AND PropertyName = 'DS Select All' AND Type = 'Column' AND ISNULL(IsDeleted, 0) = 0;
					IF @ProptyCount = 0
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						VALUES (@IN_FormConfigID, @ColumnID, 'Column', 'DS Select All', 1, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
					END
				END
				ELSE
				BEGIN
					UPDATE FormControlPropertyConfig SET IsDeleted = 1 WHERE FormID = @IN_FormConfigID AND ControlID = @ColumnID AND PropertyName = 'DS Select All' AND Type = 'Column';
				END
				END

				
				IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
					DROP TABLE #tempTableColumns

				IF OBJECT_ID('tempdb..#tempformDefaultControl1') IS NOT NULL DROP TABLE #tempformDefaultControl1

				CREATE TABLE #tempformDefaultControl1 (
					ReferenceID INT NULL,
					row_no INT NULL
				);

				SET @TotalCount = 0;
				SET @LoopCount = 0;

				INSERT INTO #tempformDefaultControl1
					SELECT ReferenceID, ROW_NUMBER() OVER (ORDER BY ReferenceID) AS row_no
					FROM FormControlColumnsConfig WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND ControlType IN (24, 25) AND IsDeleted = 0;

				SET @TotalCount = (SELECT COUNT(1) FROM #tempformDefaultControl1);
				SET @LoopCount = 1;

				WHILE @TotalCount >= @LoopCount
				BEGIN
					SET @FormDefaultControl = 0;
					SET @FormDefaultControl = ISNULL((SELECT FCC.ReferenceID FROM FormControlColumnsConfig FCC
															JOIN #tempformDefaultControl1 T ON FCC.ReferenceID = T.ReferenceID
													WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND ControlType IN (24, 25) AND IsDeleted = 0 AND T.row_no = @LoopCount), 0);

					IF @FormDefaultControl <> 0 AND NOT EXISTS(SELECT 1 FROM FormGridControlColumnsConfig WHERE ColumnID = @FormDefaultControl AND DependentFlag = 0 AND IsDeleted = 0)
					BEGIN
						INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DataBaseDecimalLength, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, DependentType, Description,
							CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
					
						SELECT @IN_FormConfigID, FCC.TabID, FCC.GroupID, @FormDefaultControl, 'Select', 'OrderBy', '', '', CASE WHEN FCC.ControlType = 25 THEN 21 WHEN FCC.ControlType = 24 THEN 3 ELSE 0 END, 
									CASE WHEN FCC.ControlType = 25 THEN 2 WHEN FCC.ControlType = 24 THEN 3 ELSE 0 END, 1, 0, 0, 1, 0, -1, '', '', 0, 0, '', '', 0, '', 100, 0,
									0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, '', 0, 0, '', 
									@CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
						FROM FormControlColumnsConfig FCC
							JOIN #tempformDefaultControl1 T ON FCC.ReferenceID = T.ReferenceID
						WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount;
						
						IF (SELECT FC.FKData FROM FormControlColumnsConfig FC JOIN #tempformDefaultControl1 T ON FC.ReferenceID = T.ReferenceID
									WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount) NOT IN ('', 'ReferenceID', 'CodemasterID')
						BEGIN
							INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
								DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
								MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
								FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
								FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DataBaseDecimalLength, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, DependentType, Description,
								CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
					
							SELECT @IN_FormConfigID, FCC.TabID, FCC.GroupID, @FormDefaultControl, FCC.FkData, FCC.FkData, 
										'', '', 20, 9, 1, 0, 0, 1, 1, -1, '', '', 0, 0, '', '', 0, '', 100, 0,
										0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, '', 0, 0, '', 
										@CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
							FROM FormControlColumnsConfig FCC
								JOIN #tempformDefaultControl1 T ON FCC.ReferenceID = T.ReferenceID
							WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount;
						END 

						INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DataBaseDecimalLength, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, DependentType, Description,
							CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
					
						SELECT @IN_FormConfigID, FCC.TabID, FCC.GroupID, @FormDefaultControl, CASE WHEN FCC.FKType = 1 THEN 'CodemasterID' ELSE 'ReferenceID' END,
									CASE WHEN FCC.FKType = 1 THEN 'CodemasterID' ELSE 'ReferenceID' END, '', '', 20, 1, 0, 1, 0, 1, 1, -1, '', '', 0, 0, '', '', 1, '', 100, 0,
									0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, '', 0, 0, '', 
									@CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
						FROM FormControlColumnsConfig FCC
							JOIN #tempformDefaultControl1 T ON FCC.ReferenceID = T.ReferenceID
						WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount;
					END
					SET @LoopCount = @LoopCount + 1;
				END

				IF OBJECT_ID('tempdb..#tempformDefaultControl1') IS NOT NULL 
				DROP TABLE #tempformDefaultControl1

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'UTC', PT.IsUTC, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 5
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'UTC' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Decimal Length', ISNULL(MT.DecimalLength, 4), 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Decimal Length' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'DataBase Decimal Length', ISNULL(MT.DataBaseDecimalLength, 4), 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'DataBase Decimal Length' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Decimal Currency', ISNULL(MT.IsCurrency, 0), 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Decimal Currency' AND IsDeleted = 0);

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Currency Column', ISNULL(MT.CurrencyColumn, ''), 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 8
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Currency Column' AND IsDeleted = 0);

				SET @GridCount = ISNULL((SELECT COUNT(1) FROM FormControlConfig FC WHERE FC.FormID = @IN_FormConfigID AND FC.ReferenceID = @IN_ID AND FC.ControlType = 19 AND FC.IsDeleted = 0), 0);

				IF @GridCount > 0
				BEGIN
					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'File Upload', PT.IsUpload, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
					FROM FormControlColumnsConfig MT
						JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND (PT.ColumnID = MT.ReferenceID OR (PT.ColumnID = 0 AND PT.ColumnName = MT.ColumnName))
					WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
						AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'File Upload' AND IsDeleted = 0);

					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'File Download', PT.IsDownload, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
					FROM FormControlColumnsConfig MT
						JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
						AND PT.UserID = @IN_UserID AND (PT.ColumnID = MT.ReferenceID OR (PT.ColumnID = 0 AND PT.ColumnName = MT.ColumnName))
					WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
						AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'File Download' AND IsDeleted = 0);

					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'File View', PT.IsView, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
					FROM FormControlColumnsConfig MT
						JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
						AND PT.UserID = @IN_UserID AND (PT.ColumnID = MT.ReferenceID OR (PT.ColumnID = 0 AND PT.ColumnName = MT.ColumnName))
					WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
						AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'File View' AND IsDeleted = 0);

					INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'File Delete', PT.IsDelete, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
					FROM FormControlColumnsConfig MT
						JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
						AND PT.UserID = @IN_UserID AND (PT.ColumnID = MT.ReferenceID OR (PT.ColumnID = 0 AND PT.ColumnName = MT.ColumnName))
					WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.ControlType = 16
						AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'File Delete' AND IsDeleted = 0);
				END

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Primary Checkbox', PT.IsPrimary, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.DataType = 3
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Primary Checkbox' AND IsDeleted = 0);
					
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Grid Header', PT.GridHeader, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Grid Header' AND IsDeleted = 0);
					
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Grid Type', PT.GridType, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Grid Type' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Grid Access Type', 1, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Grid Access Type' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Row Event', 'CMNF.popupGridRowEvent(gridID, rowData, rowID)', 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Row Event' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Page Size', PT.PageSize, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Page Size' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Order By', PT.OrderBy, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Order By' AND IsDeleted = 0);
				
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Order By Column', PT.OrderByColumn, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND (MT.ControlType = 24 OR MT.ControlType = 25)
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID AND Type = 'Column' AND PropertyName = 'Order By Column' AND IsDeleted = 0);

				UPDATE CPC
				SET PropertyValue = ISNULL(PT.ApplicableProcess, ''),
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @UTCTime
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = MT.FormID AND CPC.ControlID = MT.ReferenceID 
						AND CPC.PropertyName = 'Applicable Process' AND CPC.Type = 'Column' AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Applicable Process', PT.ApplicableProcess, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1 AND ISNULL(PT.ApplicableProcess, '') <> '' AND ISNULL(PT.ApplicableProcess, '') <> '0'
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID 
						AND PropertyName = 'Applicable Process' AND Type = 'Column' AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1);

				UPDATE CPC
				SET PropertyValue = ISNULL(PT.AttachmentMaxSize, ''),
					ModifiedBy = @IN_UserID,
					ModifiedDate = @UTCTime,
					ModifiedDateGMT = @UTCTime
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = MT.FormID AND CPC.ControlID = MT.ReferenceID 
						AND CPC.PropertyName = 'Attachment MaxSize' AND CPC.Type = 'Column' AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				SELECT @IN_FormConfigID, MT.ReferenceID, 'Column', 'Attachment MaxSize', PT.AttachmentMaxSize, 'Column', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1
				FROM FormControlColumnsConfig MT
					JOIN FormControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID AND PT.GroupID = MT.GroupID AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND MT.ColumnName = PT.ColumnName AND MT.DisplayName = PT.DisplayName 
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1 AND ISNULL(PT.AttachmentMaxSize, '') <> '' AND ISNULL(PT.AttachmentMaxSize, '') <> 0
					AND NOT EXISTS(SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = MT.ReferenceID 
						AND PropertyName = 'Attachment MaxSize' AND Type = 'Column' AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1);
			
				UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END
			ELSE IF @IN_Type = 'GridControlColumns'
			BEGIN
				SET @CQuery = '	UPDATE MT SET MT.IsDeleted = 1, MT.DeletedBy = ' + CAST(@IN_UserID AS VARCHAR(50)) + ',
									MT.DeletedDate = ''' + CAST(@UTCTime AS VARCHAR(50))+ ''', MT.DeletedDateGMT = ''' + CAST(@UTCTime AS VARCHAR(50)) + '''
								FROM FormGridControlColumnsConfig MT
									LEFT JOIN FormGridControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID 
										AND PT.GroupID = MT.GroupID AND PT.GridColumnID = MT.ColumnID 
										AND PT.UserID = ' + CAST(@IN_UserID AS VARCHAR(50)) + ' AND PT.ColumnID = MT.ReferenceID
								WHERE MT.FormID = ' + CAST(@IN_FormConfigID AS VARCHAR(50)) + ' AND MT.ColumnID = ' + CAST(@IN_ID AS VARCHAR(50)) + 
									' AND MT.DependentFlag = ' + CAST(CASE WHEN @IN_EventFlag = 'true' THEN 1 ELSE 0 END AS VARCHAR(50)) + ' AND PT.ColumnName IS NULL' +		
									' AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1 ;'
				EXEC (@CQuery);

				UPDATE MT
				SET MT.DisplayName = PT.DisplayName,
					MT.ColumnName = PT.ColumnName,
					MT.ColumnName1 = PT.ColumnName1,
					MT.ColumnName2 = PT.ColumnName2,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.IsWizard = PT.IsWizard,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.SearchApplicable = PT.SearchApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.AttachmentPath = PT.AttachmentPath,
					MT.UniqueGroup = PT.UniqueGroup,
					MT.ColumnWidth = PT.ColumnWidth,
					MT.IsDmlControl = PT.IsDmlControl,
					MT.IsIdentity = PT.IsIdentity,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.SelectAll = PT.SelectAll,
					MT.IsDataSource = PT.IsDataSource,
					MT.DataBaseDecimalLength = PT.DataBaseDecimalLength,
					MT.DecimalLength = PT.DecimalLength,
					MT.IsCurrency = PT.IsCurrency,
					MT.CurrencyColumn = PT.CurrencyColumn,
					MT.DependentFlag = PT.DependentFlag,
					MT.DependentType = PT.DependentType,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.FkShowActive = PT.FkShowActive,
					MT.VersionCheck = PT.VersionCheck,
					MT.ColumnOrder = PT.ColumnOrder,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime, 
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description,
					MT.AttachmentMaxSize = PT.AttachmentMaxSize
				FROM FormGridControlColumnsConfig MT
					JOIN FormGridControlColumnsProcess PT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID 
						AND PT.GroupID = MT.GroupID AND PT.GridColumnID = MT.ColumnID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.ColumnID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
					DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DataBaseDecimalLength, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, DependentType, Description,
					CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
				SELECT PT.FormID, PT.TabID, PT.GroupID, PT.GridColumnID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard,
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, 
					PT.UniqueGroup, PT.ColumnWidth, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, 
					PT.AdditionalConditions, PT.ControlEventType, PT.ValidationEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, PT.ColumnOrder, PT.SelectAll, PT.IsDataSource,
					PT.DataBaseDecimalLength, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.DependentFlag, PT.DependentType, PT.Description, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference, PT.AttachmentMaxSize
				FROM FormGridControlColumnsProcess PT
					LEFT JOIN FormGridControlColumnsConfig MT ON PT.FormID = MT.FormID AND PT.TabID = MT.TabID 
						AND PT.GroupID = MT.GroupID AND PT.GridColumnID = MT.ColumnID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.FormID = @IN_FormConfigID AND PT.GridColumnID = @IN_ID AND PT.DependentFlag = @IN_EventFlag AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;
				
				UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END
			ELSE IF @IN_Type = 'Filters'
			BEGIN
				UPDATE MT
				SET MT.IsDeleted = 1,
					MT.DeletedBy = @IN_UserID,
					MT.DeletedDate = @UTCTime,
					MT.DeletedDateGMT = @UTCTime
				FROM FormSearchControlsConfig MT
					LEFT JOIN FormSearchControlsProcess PT ON PT.FormID = MT.FormID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND ((@IN_ButtonID = 0 AND ISNULL(MT.Type, '') = '') OR (@IN_ButtonID <> 0 AND @IN_ButtonID = MT.ButtonID AND MT.Type = 'Button')) AND PT.TableColumn IS NULL
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				UPDATE MT
				SET MT.Name = PT.Name,
					MT.TableColumn = PT.TableColumn,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.MaxRange = PT.MaxRange,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.ButtonID = PT.ButtonID,
					MT.Type = PT.Type,
					MT.DateFilterType = PT.DateFilterType,
					MT.FillEvent = PT.FillEvent,
					MT.FillEventType = PT.FillEventType,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.SearchOrder = PT.SearchOrder,
					MT.DependentFlag = PT.DependentFlag,
					MT.DataVariable = PT.DataVariable,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime, 
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description
				FROM FormSearchControlsConfig MT
					JOIN FormSearchControlsProcess PT ON PT.FormID = MT.FormID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND ((@IN_ButtonID = 0 AND ISNULL(MT.Type, '') = '') OR (@IN_ButtonID <> 0 AND @IN_ButtonID = MT.ButtonID AND MT.Type = 'Button')) AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO FormSearchControlsConfig (FormID, ControlID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile,
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
					FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, ButtonID, Type, DateFilterType, FillEvent, FillEventType, DataVariable, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)
				SELECT PT.FormID, PT.ControlID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile,
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SelectApplicable, PT.DefaultValue, PT.MaxRange, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, 
					PT.AdditionalConditions, PT.ControlEventType, PT.ValidationEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, PT.SearchOrder, PT.DependentFlag, PT.ButtonID, PT.Type, PT.DateFilterType,
					 PT.FillEvent, PT.FillEventType, PT.DataVariable, PT.Description, @CompanyID, PT.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference
				FROM FormSearchControlsProcess PT
					LEFT JOIN FormSearchControlsConfig MT ON PT.FormID = MT.FormID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.FormID = @IN_FormConfigID AND PT.ControlID = @IN_ID AND ((@IN_ButtonID = 0 AND ISNULL(PT.Type, '') = '') OR (@IN_ButtonID <> 0 AND @IN_ButtonID = PT.ButtonID AND PT.Type = 'Button')) AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;
			
				IF OBJECT_ID('tempdb..#tempformDefaultControl2') IS NOT NULL
				DROP TABLE #tempformDefaultControl2

				CREATE TABLE #tempformDefaultControl2 (
					ReferenceID INT NULL,
					row_no INT NULL
				);

				SET @TotalCount = 0;
				SET @LoopCount = 0;

				INSERT INTO #tempformDefaultControl2
					SELECT ReferenceID, ROW_NUMBER() OVER (ORDER BY ReferenceID) AS row_no
					FROM FormSearchControlsConfig WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND ControlType IN (24, 25) AND IsDeleted = 0;

				SET @TotalCount = (SELECT COUNT(1) FROM #tempformDefaultControl2);
				SET @LoopCount = 1;

				WHILE @TotalCount >= @LoopCount
				BEGIN
					SET @FormDefaultControl = 0;
					SET @FormDefaultControl = ISNULL((SELECT FCC.ReferenceID FROM FormSearchControlsConfig FCC
															JOIN #tempformDefaultControl2 T ON FCC.ReferenceID = T.ReferenceID
													WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND ControlType IN (24, 25) AND IsDeleted = 0 AND T.row_no = @LoopCount), 0);

					IF @FormDefaultControl <> 0 AND NOT EXISTS(SELECT 1 FROM FormSearchColumnsConfig WHERE SearchID = @FormDefaultControl AND DependentFlag = 0 AND IsDeleted = 0)
					BEGIN
						INSERT INTO FormSearchColumnsConfig (FormID, SearchID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
							MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
							FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, Description, CompanyID, OrderBy, Version, IsCurrentVersion, 
							NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)
					
						SELECT @IN_FormConfigID, @FormDefaultControl, 'Select', 'OrderBy', CASE WHEN FCC.ControlType = 25 THEN 21 WHEN FCC.ControlType = 24 THEN 3 ELSE 0 END, 
							CASE WHEN FCC.ControlType = 25 THEN 2 WHEN FCC.ControlType = 24 THEN 3 ELSE 0 END, 1, 0, 0, -1, '', '', 0, '', 0, '', '', '', '', 0, 0, 0,
							0, 0, 0, 1, 0, 0, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL
						FROM FormSearchControlsConfig FCC
							JOIN #tempformDefaultControl2 T ON FCC.ReferenceID = T.ReferenceID
						WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount; 

							
						IF (SELECT FC.FKData FROM FormSearchControlsConfig FC JOIN #tempformDefaultControl2 T ON FC.ReferenceID = T.ReferenceID
									WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount) NOT IN ('', 'ReferenceID', 'CodemasterID')
						BEGIN
							INSERT INTO FormSearchColumnsConfig (FormID, SearchID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
								MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
								FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, Description, CompanyID, OrderBy, Version, IsCurrentVersion, 
								NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)

							SELECT @IN_FormConfigID, @FormDefaultControl, FCC.FKData, FCC.FKData, 20, 9, 1, 0, 0, -1, '', '', 0, '', 0, '', '', '', '', 0, 0, 0,
								0, 0, 0, 2, 0, 0, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL
							FROM FormSearchControlsConfig FCC
								JOIN #tempformDefaultControl2 T ON FCC.ReferenceID = T.ReferenceID
							WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount;
						END 

						INSERT INTO FormSearchColumnsConfig (FormID, SearchID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
							MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
							FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, Description, CompanyID, OrderBy, Version, IsCurrentVersion, 
							NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)

						SELECT @IN_FormConfigID, @FormDefaultControl, CASE WHEN FCC.FKType = 1 THEN 'CodemasterID' ELSE 'ReferenceID' END, 
							CASE WHEN FCC.FKType = 1 THEN 'CodemasterID' ELSE 'ReferenceID' END, 20, 1, 0, 0, 0, -1, '', '', 0, '', 0, '', '', '', '', 0, 0, 0,
							0, 0, 0, 3, 0, 0, '', @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL
						FROM FormSearchControlsConfig FCC
							JOIN #tempformDefaultControl2 T ON FCC.ReferenceID = T.ReferenceID
						WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ID AND T.row_no = @LoopCount;
					END
					SET @LoopCount = @LoopCount + 1;
				END

				IF OBJECT_ID('tempdb..#tempformDefaultControl2') IS NOT NULL 
				DROP TABLE #tempformDefaultControl2

				UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END
			ELSE IF @IN_Type = 'FilterColumns'
			BEGIN
				UPDATE MT
				SET MT.IsDeleted = 1,
					MT.DeletedBy = @IN_UserID,
					MT.DeletedDate = @UTCTime,
					MT.DeletedDateGMT = @UTCTime
				FROM FormSearchColumnsConfig MT
					LEFT JOIN FormSearchColumnsProcess PT ON PT.FormID = MT.FormID AND PT.SearchID = MT.SearchID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.SearchID = @IN_ID AND PT.TableColumn IS NULL
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				UPDATE MT
				SET MT.Name = PT.Name,
					MT.TableColumn = PT.TableColumn,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.DependentFlag = PT.DependentFlag,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.SearchOrder = PT.SearchOrder,
					MT.DependentType = PT.DependentType,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime, 
					MT.DateDifference = PT.DateDifference,
					MT.Description  = PT.Description
				FROM FormSearchColumnsConfig MT
					JOIN FormSearchColumnsProcess PT ON PT.FormID = MT.FormID AND PT.SearchID = MT.SearchID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.FormID = @IN_FormConfigID AND MT.SearchID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO FormSearchColumnsConfig (FormID, SearchID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
					FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, Description, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)
				SELECT PT.FormID, PT.SearchID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, 
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SelectApplicable, PT.DefaultValue, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, 
					PT.AdditionalConditions, PT.ControlEventType, PT.ValidationEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, 
					PT.SearchOrder, PT.DependentFlag, PT.DependentType, PT.Description,
					@CompanyID, PT.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference
				FROM FormSearchColumnsProcess PT
					LEFT JOIN FormSearchColumnsConfig MT ON PT.FormID = MT.FormID AND PT.SearchID = MT.SearchID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.FormID = @IN_FormConfigID AND PT.SearchID = @IN_ID AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;

				UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END 

			ELSE IF @IN_Type = 'DashboardDependent'
			BEGIN
				UPDATE MT
				SET MT.IsDeleted = 1,
					MT.DeletedBy = @IN_UserID,
					MT.DeletedDate = @UTCTime,
					MT.DeletedDateGMT = @UTCTime
				FROM ChartDependentColumnConfig MT
					LEFT JOIN ChartDependentColumnProcess PT ON PT.DashboardID = MT.DashboardID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.DashboardID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND PT.TableColumn IS NULL
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				UPDATE MT
				SET MT.Name = PT.Name,
					MT.TableColumn = PT.TableColumn,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.DependentFlag = PT.DependentFlag,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.SearchOrder = PT.SearchOrder,
					MT.DependentType = PT.DependentType,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime, 
					MT.DateDifference = PT.DateDifference
				FROM ChartDependentColumnConfig MT
					JOIN ChartDependentColumnProcess PT ON PT.DashboardID = MT.DashboardID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.DashboardID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO ChartDependentColumnConfig (DashboardID, ControlID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
					FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)
				SELECT PT.DashboardID, PT.ControlID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, 
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SelectApplicable, PT.DefaultValue, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, 
					PT.AdditionalConditions, PT.ControlEventType, PT.ValidationEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, 
					PT.SearchOrder, PT.DependentFlag, PT.DependentType,
					@CompanyID, PT.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference
				FROM ChartDependentColumnProcess PT
					LEFT JOIN ChartDependentColumnConfig MT ON PT.DashboardID = MT.DashboardID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.DashboardID = @IN_FormConfigID AND PT.ControlID = @IN_ID AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;

				UPDATE DashboardConfiguration SET Status = 3, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END

			ELSE IF @IN_Type = 'ReportDependent'
			BEGIN
				UPDATE MT
				SET MT.IsDeleted = 1,
					MT.DeletedBy = @IN_UserID,
					MT.DeletedDate = @UTCTime,
					MT.DeletedDateGMT = @UTCTime
				FROM RepDependentColumnConfig MT
					LEFT JOIN RepDependentColumnProcess PT ON PT.ReportID = MT.ReportID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.ReportID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND PT.TableColumn IS NULL
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				UPDATE MT
				SET MT.Name = PT.Name,
					MT.TableColumn = PT.TableColumn,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.DependentFlag = PT.DependentFlag,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.SearchOrder = PT.SearchOrder,
					MT.DependentType = PT.DependentType,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime, 
					MT.DateDifference = PT.DateDifference
				FROM RepDependentColumnConfig MT
					JOIN RepDependentColumnProcess PT ON PT.ReportID = MT.ReportID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.ReportID = @IN_FormConfigID AND MT.ControlID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO RepDependentColumnConfig (ReportID, ControlID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, 
					FkDelete, FkNotActive, FkVersion, SearchOrder, DependentFlag, DependentType, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference)
				SELECT PT.ReportID, PT.ControlID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, 
					PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SelectApplicable, PT.DefaultValue, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, 
					PT.AdditionalConditions, PT.ControlEventType, PT.ValidationEventType, PT.FkOrder, PT.FkDelete, PT.FkNotActive, PT.FkVersion, 
					PT.SearchOrder, PT.DependentFlag, PT.DependentType,
					@CompanyID, PT.SearchOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.DateDifference
				FROM RepDependentColumnProcess PT
					LEFT JOIN RepDependentColumnConfig MT ON PT.ReportID = MT.ReportID AND PT.ControlID = MT.ControlID
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.ReportID = @IN_FormConfigID AND PT.ControlID = @IN_ID AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;

				UPDATE ReportConfiguration SET Status = 3, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID;
			END

			SELECT 'Saved successfully';

		COMMIT TRANSACTION tran_SaveConfiguration
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_SaveConfiguration

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spPublishForm]'
GO

CREATE PROCEDURE [dbo].[spPublishForm] (@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT, @IN_RoleIDs VARCHAR(MAX) = '1', @IN_CompanyIDs VARCHAR(MAX) = '0')
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_spPublishForm;

			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
					@UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@TableName VARCHAR(100),
					@Name NVARCHAR(500),
					@MainMenuCount INT,
					@FormCount INT,
					@FormType INT,
					@ModuleMenuCount INT,
					@SCount INT = 0,
					@MainMenuOrder INT,
					@ButtonList VARCHAR(500),
					@TabList VARCHAR(500),
					@MainFormID INT,
					@Title NVARCHAR(500),
					@ParentMenu NVARCHAR(500),
					@ModuleID INT,
					@FormIcon NVARCHAR(100),
					@FormID INT,
					@SubMenuOrder INT,
					@ControlCount INT,
					@Query NVARCHAR(MAX),
					@ControlID INT,
					@CodemasterID INT,
					@ControlType INT,
					@ControlMin INT,
					@ControlName NVARCHAR(500),
					@ExistingFormCount INT,
					@ProcessControl VARCHAR(500),
					@ButtonType INT,
					@ButtonCategory BIT,
					@Count INT, 
					@TableMin INT,
					@KeyColumn VARCHAR(100),
					@TableCount INT,
					@PrimaryKey VARCHAR(100),
					@Type VARCHAR(20),
					@ParentTable VARCHAR(100),
					@ParentKey VARCHAR(100),
					@CreateTableQuery NVARCHAR(MAX),
					@ID INT,
					@ColumnCount INT,
					@ColumnMin INT,
					@TableColumn VARCHAR(100),
					@GridColumnCount INT,
					@GridColumnMin INT,
					@ColumnName VARCHAR(100),
					@DataType INT,
					@AlterColumn NVARCHAR(MAX),
					@PrimaryKeyCount INT,
					@ForeignCount INT,
					@TableColumnCount INT,
					@AlterColumnQuery NVARCHAR(MAX),
					@ParentMenuOrder INT = 0,
					@MenuOrder INT = 0,
					@ExistingDataType VARCHAR(25),
					@FormNameCount INT = 0, 
					@FormNameID BIGINT = 0,
					@ModuleFormID INT = 0,
					@DropColumnQuery NVARCHAR(MAX),
					@GridPropertyValue NVARCHAR(500),
					@MaxLength VARCHAR(500),
					@DmlControl BIT,
					@BCount INT,
					@BMin INT,
					@ProcessButtonCount INT,
					@GridControlID BIGINT,
					@GridFkTable VARCHAR(100),
					@GridFkColumn VARCHAR(100),
					@ProcessColumn VARCHAR(100),
					@InsertTableName VARCHAR(100),
					@InsertColumnCount INT,
					@IndexColumnCount INT,
					@ViewTableCount INT,
					@ProcessControlType INT,
					@ParentMenuCount INT,
					@VisibleTabs VARCHAR(100),
					@DisableTabs VARCHAR(100),
					@ButtonTriggerEvent VARCHAR(500),
					@IsMultiApprove BIT,
					@ColumnKey VARCHAR(20),
					@Footer BIT,
					@IndexColumns VARCHAR(MAX),
					@DefaultIndexColumns VARCHAR(MAX),
					@IndexName VARCHAR(255),
					@IsIndex BIT,
					@IndexCreateQuery NVARCHAR(MAX),
					@IndexDropQuery NVARCHAR(MAX),
					@CompanyColumnCount INT,
					@CreateColumnQuery NVARCHAR(MAX),
					@ExistingFormID INT = 0,
					@ExistingCount INT = 0,
					@CompanyID INT = 0,
					@IsDml BIT = 0,
					@DeletedFormCount INT = 0,
					@ButtonID BIGINT = 0,
					@ReqOldRefID BIT = 0,
					@ClearControls VARCHAR(MAX) = '',
					@ClearColumns VARCHAR(MAX) = '',
					@AutoClose BIT = 0,
					@IsMobileMenu BIT = 0,
					@IsOfflineSave BIT = 0,
					@IsMobileButton BIT = 0,
					@NewTabs NVARCHAR(MAX) = '',
					@NewButtons NVARCHAR(MAX) = '',
					@IsAudit BIT = 0,
					@RoleID INT = 0,
					@RoleMaxCount INT = 0,
					@RoleMinCount INT = 0,
					@RoleOrderBy INT = 0,
					@ParentFormID INT = 0

			SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1 AND ParentCompanyID IS NULL), 0);
			
			SELECT @Name = Name, @Title = Title, @ParentMenu = ParentMenu, @ModuleID = ModuleID, @FormIcon = FormIcon, @FormID = FormID, 
				@FormType = FormType, @ParentMenuOrder = ParentMenuorder, @MenuOrder = MenuOrder, @Footer = Footer, @IsMobileMenu = IsMobileMenu,	
				  @IsOfflineSave = IsOfflineSave
			FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;

			IF (@IN_RoleIDs <> '0') 
			BEGIN
				UPDATE FormConfiguration SET RoleIDs = ISNULL(@IN_RoleIDs, '') WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;

				IF (@IN_RoleIDs <> '')
				BEGIN
					IF OBJECT_ID('tempdb..#TempRoleTable') IS NOT NULL
						DROP TABLE #TempRoleTable

					SELECT ROW_NUMBER() OVER (ORDER BY Value) AS RowNum,
						Value AS RoleID 
					INTO #TempRoleTable FROM STRING_SPLIT(@IN_RoleIDs, ',');

					SELECT @RoleMaxCount = COUNT(1) FROM #TempRoleTable;

					WHILE @RoleMinCount < @RoleMaxCount
					BEGIN
						SET @RoleMinCount = @RoleMinCount + 1;
						SELECT @RoleID = RoleID FROM #TempRoleTable WHERE RowNum = @RoleMinCount;

						IF NOT EXISTS(SELECT 1 FROM FormRoleConfiguration WHERE FormID = @IN_ConfigID AND RoleID = @RoleID AND IsDeleted = 0)
						BEGIN
							SET @RoleOrderBy = (ISNULL((SELECT COUNT(1) FROM FormRoleConfiguration WHERE IsDeleted = 0), 1));

							INSERT INTO FormRoleConfiguration (RoleID, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum, FormID, 
								CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy, CompanyID) 
							VALUES (@RoleID, 1, 0, 0, 0, 0, @IN_ConfigID, 
								@IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @RoleOrderBy, @CompanyID);
						END
					END
				END

				IF EXISTS(SELECT 1 FROM FormRoleConfiguration WHERE FormID = @IN_ConfigID AND IsDeleted = 0 AND RoleID NOT IN (SELECT Value FROM STRING_SPLIT(@IN_RoleIDs, ',')))
				BEGIN
					UPDATE FormRoleConfiguration SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime, DeletedDateGMT = @GMTTime 
						WHERE FormID = @IN_ConfigID AND IsDeleted = 0 AND RoleID NOT IN (SELECT Value FROM STRING_SPLIT(@IN_RoleIDs, ','));
				END
			END

			SELECT @MainMenuCount = COUNT(1) FROM CmnFormDetails WHERE ISNULL(MainMenu1, 0) = 0 AND FormType = 0 AND Name = @ParentMenu AND IsDeleted = 0;
  
			SET @FormCount = 0;
			SET @ModuleMenuCount = 0;

			SELECT @MainMenuCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @ParentMenu AND ISNULL(MainMenu1, 0) = 0 AND FormPath = '' AND IsDeleted = 0;
			IF @MainMenuCount = 0 AND @ParentMenu <> ''
			BEGIN
				SET @ModuleFormID = (@ModuleID+ '00');
				SELECT @MainMenuOrder = ISNULL(Max(MainMenuOrder), 0), @MainFormID = ISNULL(MAX(FormID) + 10, @ModuleFormID) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND (ISNULL(MainMenu1, '') = '' OR ISNULL(MainMenu1, 0) = 0);

				IF ISNULL(@MainMenuOrder, 0) = 0
				BEGIN
					SET @MainMenuOrder = 1;
				END

				SELECT @ParentMenuCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @MainFormID;
   
				IF @ParentMenuCount > 0
				BEGIN
				  SELECT @MainFormID = MAX(FormID) + 1 FROM CmnFormDetails ;
				END

				INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,
					FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon,
					IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
				SELECT '', @ParentMenuOrder, 0, NULL, 0, @MainFormID, @ParentMenu, @ParentMenu, @ModuleID, 0, NULL, NULL, @FormIcon,
					0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime; 

				SET @ButtonList = '';
				SET @TabList = ISNULL(SUBSTRING((SELECT ',' + CAST(TabID AS VARCHAR(MAX)) FROM CmnFormTabs WHERE FormID = @MainFormID
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
				SET @ButtonList = ISNULL(SUBSTRING((SELECT ',' + CAST(CodemasterID AS VARCHAR(MAX)) FROM CmnCodeMaster WHERE MenuID = @MainFormID AND Type = 'Menubutton' AND IsDeleted = 0 AND NotActive = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
				SELECT @MainMenuOrder = MainMenuOrder, @SubMenuOrder =SubMenuOrder FROM CmnFormDetails WHERE FormID = @FormID;

				INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
					FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
				SELECT RoleID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
				@MainFormID, HasReadPermission, IsFavourite, FavouriteOrder, 0, Audit, ValidateChecksum
				, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM FormRoleConfiguration WHERE FormID = @IN_ConfigID AND IsDeleted = 0 AND HasReadPermission = 1;

				INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
					FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
				SELECT E.UserID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
				@MainFormID, HasReadPermission, IsFavourite, FavouriteOrder, 0, Audit, ValidateChecksum
				, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM CmnUserDetails E 
				JOIN FormRoleConfiguration RC ON RC.FormID = @IN_ConfigID AND RC.IsDeleted = 0 AND RC.HasReadPermission = 1
				WHERE PATINDEX(CONCAT('%,', CAST(E.RoleID AS VARCHAR(50)), ',%'), CONCAT(',', RC.RoleID, ',')) > 0;
			END

			SET @FormCount = 0;
			SET @FormNameCount = 0;
			SET @ExistingFormID = 0;
			SET @ExistingCount = 0;

			SELECT @MainFormID = FormID FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @ParentMenu AND ISNULL(FormPath, '') = '' AND IsDeleted = 0;
			UPDATE CmnFormDetails SET MainMenuOrder = @ParentMenuOrder, FormIcon = @FormIcon WHERE FormID = @MainFormID;
			UPDATE CmnFormDetails SET FormIcon = @FormIcon WHERE ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND ISNULL(MainMenu1, '') <> '';			
			SELECT @FormNameCount = COUNT(1) FROM CmnFormDetails WHERE Name = @Name AND ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;			
			SELECT @FormCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 0;
			SELECT @DeletedFormCount = COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND IsDeleted = 1;
			
			SET @FormNameID = 0;
			IF @FormNameCount > 0
			BEGIN
				SELECT @FormNameID = FormID FROM CmnFormDetails WHERE Name = @Name AND ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
			END

			SET @ExistingFormID = ISNULL((CASE WHEN @FormNameCount = 0 THEN @FormID ELSE @FormNameID END), 0);
			SET @ExistingCount = ISNULL((CASE WHEN @FormNameCount = 0 THEN @FormCount ELSE @FormNameCount END), 0);

			IF OBJECT_ID('tempdb..#tempUserList') IS NOT NULL
				DROP TABLE #tempUserList

			CREATE TABLE #tempUserList (
				UserID INT NULL,
				Buttons VARCHAR(MAX) NULL,
				Tabs VARCHAR(MAX) NULL,
				MainMenuOrder INT NULL, 
				SubMenuOrder INT NULL,
				HasReadPermission BIT NULL,
				IsFavourite BIT NULL, 
				FavouriteOrder INT NULL,
				Audit BIT NULL,
				ValidateChecksum BIT NULL)	

			IF OBJECT_ID('tempdb..#tempRoleList') IS NOT NULL
				DROP TABLE #tempRoleList

			CREATE TABLE #tempRoleList (
				RoleID INT NULL,
				Buttons VARCHAR(MAX) NULL,
				Tabs VARCHAR(MAX) NULL,
				MainMenuOrder INT NULL, 
				SubMenuOrder INT NULL,
				HasReadPermission BIT NULL,
				IsFavourite BIT NULL, 
				FavouriteOrder INT NULL,
				Audit BIT NULL,
				ValidateChecksum BIT NULL)	

			IF ISNULL(@ExistingFormID, 0) <> 0 AND ISNULL(@ExistingCount, 0) <> 0
			BEGIN				
				INSERT INTO #tempRoleList
				SELECT RoleID, ISNULL(SUBSTRING((SELECT ',' + CM.TypeValues FROM CmnCodeMaster CM WHERE CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.CodemasterID AS VARCHAR(50)) + ',%' , ',' + CAST(Buttons AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM CmnFormTabs FT WHERE PATINDEX('%,' +  CAST(FT.TabID AS VARCHAR(50)) + ',%' , ',' + CAST(Tabs AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					MainMenuOrder, SubMenuOrder, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum
				FROM CmnRolePermission 
				WHERE FormID = @ExistingFormID AND HasReadPermission = 1 AND IsDeleted = 0;

				INSERT INTO #tempUserList
				SELECT UserID, ISNULL(SUBSTRING((SELECT ',' + CM.TypeValues FROM CmnCodeMaster CM WHERE CM.Type = 'Menubutton' AND PATINDEX('%,' +  CAST(CM.CodemasterID AS VARCHAR(50)) + ',%' , ',' + CAST(Buttons AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM CmnFormTabs FT WHERE PATINDEX('%,' +  CAST(FT.TabID AS VARCHAR(50)) + ',%' , ',' + CAST(Tabs AS VARCHAR(MAX)) + ',') > 0
						FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
					MainMenuOrder, SubMenuOrder, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum
				FROM CmnRBSPermission 
				WHERE FormID = @ExistingFormID AND HasReadPermission = 1 AND IsDeleted = 0;

				SET @NewButtons = ISNULL(SUBSTRING((SELECT ',' + FB.TypeValues FROM FormButtonConfig FB
														LEFT JOIN CmnCodeMaster CM ON CM.Type = 'Menubutton' AND CM.MenuID = @ExistingFormID
															AND CM.TypeValues = FB.TypeValues
															AND CM.IsDeleted = 0 AND CM.NotActive = 0 AND CM.IsCurrentVersion = 1
													WHERE FB.FormID = @IN_ConfigID AND CM.CodemasterID IS NULL
														AND FB.IsDeleted = 0 AND FB.NotActive = 0 AND FB.IsCurrentVersion = 1
													FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '')

				SET @NewTabs = ISNULL(SUBSTRING((SELECT ',' + FT.Name FROM FormTabConfig FT
													LEFT JOIN CmnFormTabs CM ON CM.Name = FT.Name AND CM.FormID = @ExistingFormID AND CM.IsDeleted = 0 
												 WHERE FT.FormID = @IN_ConfigID AND (CM.TabID IS NULL OR FT.IsMandatory = 1)
													AND FT.IsDeleted = 0 AND FT.NotActive = 0 AND FT.IsCurrentVersion = 1
												 FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '')
			END
			
			IF (@FormCount > 0 OR @DeletedFormCount > 0) AND ISNULL(@FormID, 0) <> 0 
			BEGIN
				EXEC spCmnClearFormConfiguration @FormID;  
			END 

			IF @FormNameCount > 0 AND ISNULL(@FormNameID, 0) <> 0
			BEGIN
				SET @FormID = @FormNameID;
				EXEC spCmnClearFormConfiguration @FormID;  
			END 						
			IF ISNULL(@MainFormID, 0) = 0 
			BEGIN
				SET @MainFormID = (SELECT ISNULL(MAX(FormID) + 10, 0) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND (ISNULL(MainMenu1, '') = '' OR ISNULL(MainMenu1, 0) = 0) AND IsDeleted = 0);
			END

			IF ISNULL(@FormID, 0) = 0
			BEGIN
				IF @ParentMenu = ''
				BEGIN
					SELECT @SubMenuOrder = ISNULL(MAX(SubMenuOrder) + 1, 1), @MainMenuOrder = ISNULL(MAX(MainMenuOrder) + 1, 1), @FormID = ISNULL(MAX(FormID) + 10, (@MainFormID + 1)) 
					FROM CmnFormDetails WHERE ModuleID = @ModuleID AND (ISNULL(MainMenu1, '') = '' OR ISNULL(MainMenu1, 0) = 0) AND IsDeleted = 0;
				END
				ELSE
				BEGIN
					SELECT @SubMenuOrder = ISNULL(MAX(SubMenuOrder) + 1, 1), @MainMenuOrder = ISNULL(MAX(MainMenuOrder) + 1, 1), @FormID = ISNULL(MAX(FormID) + 1, (@MainFormID + 1)) 
					FROM CmnFormDetails WHERE ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
				END
			END
			ELSE
			BEGIN
				IF @ParentMenu = ''
				BEGIN
					SELECT @SubMenuOrder = ISNULL(MAX(SubMenuOrder) + 1, 1), @MainMenuOrder = ISNULL(MAX(MainMenuOrder) + 1, 1)  
					FROM CmnFormDetails WHERE ModuleID = @ModuleID AND (ISNULL(MainMenu1, '') = '' OR ISNULL(MainMenu1, 0) = 0) AND IsDeleted = 0;
				END
				ELSE
				BEGIN
					SELECT @SubMenuOrder = ISNULL(MAX(SubMenuOrder) + 1, 1), @MainMenuOrder = ISNULL(MAX(MainMenuOrder) + 1, 1)   
					FROM CmnFormDetails WHERE ModuleID = @ModuleID AND MainMenu1 = @MainFormID AND IsDeleted = 0;
				END
			END

			IF ISNULL(@SubMenuOrder, 0) = 0
				SET @SubMenuOrder = 1;

			IF ISNULL(@FormID, 0) = 0
				SET @FormID = @MainFormID + 1;

			IF ISNULL(@MainMenuOrder, 0) = 0
				SET @MainMenuOrder = 1;

			IF @ParentMenu = ''
			BEGIN
				SET @SubMenuOrder = 0;
				SET @MainFormID = NULL;
				SET @MainMenuOrder = @MenuOrder;
			END
			ELSE 
			BEGIN
				SET @MainMenuOrder = 0;
				SET @SubMenuOrder = @MenuOrder;
			END
			
			SET @ExistingFormCount = (SELECT COUNT(1) FROM CmnFormDetails WHERE FormID = @FormID AND Name <> @Name);
			IF @ExistingFormCount > 0
			BEGIN
				SET @FormID = (SELECT (MAX(FormID) + 1) FROM CmnFormDetails);
			END

			UPDATE FormControlConfig SET IsIdentity = 0 WHERE FormID = @IN_ConfigID AND ControlType = 18 OR ControlType = 19;
			
			INSERT INTO CmnFormDetails (FormPath, MainMenuOrder, SubMenuOrder, MainMenu1, FormType,
				FormID, Name, DisplayName, ModuleID, AuditTrail, TableName, KeyColumn, FormIcon, PageOrientation, FormEvents,
				IsMobileMenu, IsOfflineSave, IsDeleted, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate)
			SELECT 'StandardPage', @MainMenuOrder, @SubMenuOrder, @MainFormID, FormType, @FormID, Name, Title, ModuleID, AuditTrail, 
				CASE WHEN ISNULL(Source, 0) = 2 THEN ViewName ELSE TableName END, KeyColumn, FormIcon, PageOrientation, FormEvents, @IsMobileMenu, @IsOfflineSave, 0, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime
			FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
			
			INSERT INTO CmnFormMultiLingual (LanguageID, FormID, Name, IsDeleted)
			SELECT CM.LanguageID, @FormID, ISNULL(CM.Name, ''), 0
			FROM FormConfiguration FC
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'Form' AND CM.ControlID = FC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FC.ReferenceID = @IN_ConfigID AND ISNULL(CM.Name, '') <> '';
		
			UPDATE FormConfiguration SET FormID = @FormID, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_ConfigID;    

			INSERT INTO CmnFormTabs (FormID, Name, DisplayName, TabOrder, IsMandatory, TableName, KeyColumn, IsMobile, IsStatic, Description, ModifiedDate, IsDeleted)
			SELECT @FormID, Name, DisplayName, TabOrder, IsMandatory, TableName, KeyColumn, ISNULL(IsMobile, 1), IsStatic, Description, @UTCTime, 0
			FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0 ORDER BY TabOrder ASC;

			INSERT INTO CmnTabsMultiLingual (LanguageID, TabID, Name, IsDeleted)
			SELECT CM.LanguageID, CFT.TabID, ISNULL(CM.Name, ''), 0
			FROM CmnFormTabs CFT 
				JOIN FormTabConfig FC ON FC.FormID = @IN_ConfigID AND CFT.Name = FC.Name
					AND ISNULL(FC.IsDeleted, 0) = 0 AND ISNULL(FC.NotActive, 0) = 0 AND ISNULL(FC.IsCurrentVersion, 1) = 1
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'Tab' AND CM.ControlID = FC.ReferenceID 
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE CFT.FormID = @FormID AND ISNULL(CFT.IsDeleted, 0) = 0 AND ISNULL(CM.Name, '') <> ''
			ORDER BY CFT.TabOrder;

			INSERT INTO CmnGeneralProperty (Type, TypeID, Name, Value, ModifiedDate, IsDeleted)
			SELECT 'Tab', FT.TabID, 'Condition', TC.AddCondition, @UTCTime, 0
			FROM CmnFormTabs FT  
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.AddCondition <> '' AND TC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC;

			INSERT INTO CmnGroupBoxes (TabID, Name, DisplayName, GroupOrder, CommonGroup, TableName, KeyColumn, ControlPerRow,
				IsMobile, Description, IsChildGroupBox, ControlCount, ModifiedDate, IsDeleted)
			SELECT FT.TabID, GC.Name, GC.DisplayName, GC.GroupOrder, GC.CommonGroup, GC.TableName, GC.KeyColumn, GC.ControlPerRow,
				ISNULL(GC.IsMobile, 1), GC.Description, GC.IsChildGroupBox, GC.ControlCount, @UTCTime, 0
			FROM CmnFormTabs FT  
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND GC.TabID = TC.ReferenceID AND GC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GC.GroupOrder ASC;

			INSERT INTO CmnGroupMultiLingual (LanguageID, GroupID, Name, IsDeleted)
			SELECT CM.LanguageID, GB.GroupID, ISNULL(CM.Name, ''), 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND GC.TabID = TC.ReferenceID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'GroupBox' AND CM.ControlID = GC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 AND ISNULL(CM.Name, '') <> ''
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC;

			INSERT INTO CmnGeneralProperty (Type, TypeID, Name, Value, ModifiedDate, IsDeleted)
			SELECT 'Groupbox', GB.GroupID, 'Condition', GC.AddCondition, @UTCTime, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND GC.TabID = TC.ReferenceID AND GC.Name = GB.Name AND GC.AddCondition <> '' AND GC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC;

			DECLARE @ButtonCount INT, @ButtonMin INT, @UserAccess INT,
					@TypeValues NVARCHAR(100),@Code NVARCHAR(100),@Description NVARCHAR(100),@Category NVARCHAR(100),@Remarks NVARCHAR(1000),@OrderBy INT,
					@AvailableStatus VARCHAR(100),@ImagePath VARCHAR(100),@ButtonKeyColumn VARCHAR(100), @Details NVARCHAR(1000), @MenuCategory INT;

			SET @ButtonCount = (SELECT COUNT(1) FROM FormButtonConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0);
			SET @ButtonMin = 0;

			SELECT @ProcessControl = FC.Name
			FROM FormTabConfig TC
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND GC.TabID = TC.ReferenceID AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.SearchApplicable = 1 AND FC.IsDeleted = 0    
			WHERE TC.FormID = @IN_ConfigID AND TC.IsDeleted = 0
			ORDER BY TC.TabOrder ASC, GC.GroupOrder ASC, FC.ControlOrder ASC;

			IF (@MainMenuCount > 0 AND @ParentMenu <> '')
			BEGIN
				SELECT @ParentFormID = ISNULL(FormID, 0) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @ParentMenu AND ISNULL(MainMenu1, 0) = 0 AND ISNULL(FormPath, '') = '' AND ISNULL(IsDeleted, 0) = 0;

				IF EXISTS (SELECT 1 FROM CmnFormDetails WHERE MainMenu1 = @ParentFormID AND ISNULL(IsMobileMenu, 0) = 1 AND ISNULL(IsDeleted, 0) = 0)
				BEGIN 
					UPDATE CmnFormDetails 
					SET IsMobileMenu = 1 
					WHERE ModuleID = @ModuleID AND Name = @ParentMenu AND ISNULL(MainMenu1, 0) = 0 AND ISNULL(FormPath, '') = '' AND ISNULL(IsDeleted, 0) = 0;
				END
				ELSE
				BEGIN
					UPDATE CmnFormDetails 
					SET IsMobileMenu = 0
					WHERE ModuleID = @ModuleID AND Name = @ParentMenu AND ISNULL(MainMenu1, 0) = 0 AND ISNULL(FormPath, '') = '' AND ISNULL(IsDeleted, 0) = 0;
				END
			END

			IF ISNULL(@ProcessControl, '') <> ''
			BEGIN
				SET @ProcessControl = (SELECT REPLACE(@ProcessControl, ' ', ''));
			END

			IF OBJECT_ID('tempdb..#tempFormButtons') IS NOT NULL
				DROP TABLE #tempFormButtons

			CREATE TABLE #tempFormButtons (
				SNum INT NULL,
				UserAccess INT,
				Name NVARCHAR(500) NULL,
				Code NVARCHAR(500) NULL, 
				Description NVARCHAR(500) NULL,
				Category NVARCHAR(500) NULL,
				OrderBy INT NULL,
				AvailableStatus VARCHAR(500) NULL,
				ImagePath NVARCHAR(500) NULL,
				ButtonKeyColumn VARCHAR(100) NULL, 
				Details NVARCHAR(500) NULL,
				MenuCategory INT NULL,
				Remarks NVARCHAR(500) NULL,
				ButtonType INT NULL,
				ButtonCategory BIT NULL, 
				VisibleTabs VARCHAR(100) NULL, 
				DisableTabs VARCHAR(100) NULL,
				ButtonTriggerEvent VARCHAR(500) NULL,
				IsMultipleApproval BIT NULL,
				IsDml BIT NULL,
				ReqOldRefID BIT NULL,
				ClearControls VARCHAR(MAX) NULL,
				ClearColumns VARCHAR(MAX) NULL,
				AutoClose BIT NULL,
				IsMobile BIT NULL,
				IsAudit BIT NULL)	

			INSERT INTO #tempFormButtons (UserAccess, Name, Code, Description, Category, OrderBy, AvailableStatus, ImagePath, ButtonKeyColumn, 
				Details, MenuCategory, Remarks, ButtonType, ButtonCategory, VisibleTabs, DisableTabs, ButtonTriggerEvent, IsMultipleApproval, 
				IsDml, ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile, IsAudit)
			SELECT UserAccess, TypeValues, Code, Description, Category, OrderBy, AvailableStatus, ImagePath, ButtonKeyColumn, 
				Details, MenuCategory, Remarks, ButtonType, ButtonCategory, VisibleTabs, DisableTabs, ButtonTriggerEvent, IsMultipleApproval, 
				IsDml, ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile, IsAudit
			FROM FormButtonConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0 ORDER BY OrderBy ASC;

			UPDATE #tempFormButtons SET @SCount = SNum = @SCount + 1;
			
			WHILE @ButtonCount > @ButtonMin
			BEGIN
				SET @VisibleTabs = '';
				SET @DisableTabs = '';
				SET @IsMultiApprove = 0;
				SET @ButtonID = 0;
				SET @ReqOldRefID = 0;
				SET @ClearControls = '';
				SET @ClearColumns = '';
				SET @AutoClose = 0;
				SET @IsMobileButton = 1;
				SET @IsAudit = 0;

				SET @Query = 'SELECT @TempUserAccess = UserAccess FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempUserAccess INT OUT', @UserAccess OUT

				SET @Query = 'SELECT @TempTypeValues = Name FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempTypeValues NVARCHAR(500) OUT', @TypeValues OUT

				SET @Query = 'SELECT @TempCode = Code FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempCode NVARCHAR(500) OUT', @Code OUT
				
				SET @Query = 'SELECT @TempDescription = Description FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempDescription NVARCHAR(500) OUT', @Description OUT

				SET @Query = 'SELECT @TempCategory = Category FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempCategory NVARCHAR(500) OUT', @Category OUT

				SET @Query = 'SELECT @TempRemarks = Remarks FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempRemarks INT OUT', @Remarks OUT

				SET @Query = 'SELECT @TempOrderBy = OrderBy FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempOrderBy INT OUT', @OrderBy OUT

				SET @Query = 'SELECT @TempAvailableStatus = AvailableStatus FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempAvailableStatus VARCHAR(500) OUT', @AvailableStatus OUT

				SET @Query = 'SELECT @TempImagePath = ImagePath FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempImagePath NVARCHAR(500) OUT', @ImagePath OUT

				SET @Query = 'SELECT @TempButtonKeyColumn = ButtonKeyColumn FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempButtonKeyColumn VARCHAR(100) OUT', @ButtonKeyColumn OUT

				SET @Query = 'SELECT @TempDetails = Details FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempDetails NVARCHAR(500) OUT', @Details OUT

				SET @Query = 'SELECT @TempMenuCategory = MenuCategory FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempMenuCategory INT OUT', @MenuCategory OUT

				SET @Query = 'SELECT @TempButtonType = ButtonType FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempButtonType INT OUT', @ButtonType OUT

				SET @Query = 'SELECT @TempButtonCategory = ButtonCategory FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempButtonCategory BIT OUT', @ButtonCategory OUT

				SET @Query = 'SELECT @TempVisibleTabs = VisibleTabs FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempVisibleTabs VARCHAR(100) OUT', @VisibleTabs OUT

				SET @Query = 'SELECT @TempDisableTabs = DisableTabs FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempDisableTabs VARCHAR(100) OUT', @DisableTabs OUT

				SET @Query = 'SELECT @TempButtonTriggerEvent = ButtonTriggerEvent FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempButtonTriggerEvent VARCHAR(500) OUT', @ButtonTriggerEvent OUT
				
				SET @Query = 'SELECT @TempIsMultipleApproval = IsMultipleApproval FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempIsMultipleApproval BIT OUT', @IsMultiApprove OUT

				SET @Query = 'SELECT @TempIsDml = IsDml FROM #tempFormButtons WHERE SNum = '+CAST((@ButtonMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempIsDml BIT OUT', @IsDml OUT

				SELECT @ReqOldRefID = ReqOldRefID, @ClearControls = ClearControls, @ClearColumns = ClearColumns, @AutoClose = AutoClose,
					@IsMobileButton = ISNULL(IsMobile, 1), @IsAudit = IsAudit
				FROM #tempFormButtons WHERE SNum = @ButtonMin + 1;

				--IF @MenuCategory = 4
				--BEGIN
				--  SET @MenuCategory = 0;
				--END

				IF @ButtonType = 5
				BEGIN
				  --SET @Details = ('STP.openProcessingPopup('''+@TypeValues+''', '''+@ProcessControl+''')'); 
				  SET @Details = REPLACE(@Details, ''''+@TypeValues+''', ''''', ''''+@TypeValues+''', '''+@ProcessControl+'''');
				END

				SET @VisibleTabs = ISNULL((SELECT(SELECT DISTINCT CONVERT(VARCHAR(100), FT.TabID) + ',' 
							 FROM FormTabConfig TI
							 JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.Name = TI.Name AND FT.IsDeleted = 0
							 WHERE TI.FormID = @IN_ConfigID AND PATINDEX('%,' +  CAST(TI.ReferenceID AS VARCHAR(50)) + ',%' , ',' + @VisibleTabs + ',') > 0
							 FOR XML PATH(''), ROOT('MyString'),TYPE).value('/MyString[1]','NVARCHAR(MAX)')), '');

				SET @DisableTabs = ISNULL((SELECT(SELECT DISTINCT CONVERT(VARCHAR(100), FT.TabID) + ',' 
							 FROM FormTabConfig TI
							 JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.Name = TI.Name AND FT.IsDeleted = 0
							 WHERE TI.FormID = @IN_ConfigID AND PATINDEX('%,' +  CAST(TI.ReferenceID AS VARCHAR(50)) + ',%' , ',' + @DisableTabs + ',') > 0
							 FOR XML PATH(''), ROOT('MyString'),TYPE).value('/MyString[1]','NVARCHAR(MAX)')), '');

				SET @CodemasterID = (SELECT MAX(CodemasterID) + 1 FROM CmnCodeMaster WHERE Type = 'Menubutton');
				INSERT INTO CmnCodeMaster (UserAccess, Type, CodemasterID, DisplayType, TypeValues, Code, Description, Category, Remarks, OrderBy, AvailableStatus, ImagePath, MenuID, ModuleID, 
					ButtonKeyColumn, Details, MenuCategory, ButtonCategory, ButtonType, VisibleTabs, DisableTabs, ButtonTriggerEvent, IsMultipleApproval, IsDml, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @UserAccess, 'Menubutton', @CodemasterID, 'Menubutton', @TypeValues, @Code, @Description, @Category, @Remarks, @OrderBy, @AvailableStatus, @ImagePath, @FormID, @ModuleID, 
					@ButtonKeyColumn, @Details, @MenuCategory, @ButtonCategory, @ButtonType, ISNULL(@VisibleTabs, ''), ISNULL(@DisableTabs, ''), @ButtonTriggerEvent, @IsMultiApprove, @IsDml, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;

				SET @ButtonID = IDENT_CURRENT('CmnCodeMaster');

				INSERT INTO CmnFormButtonProperties (FormID, ButtonID, ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile, IsAudit,
					CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT,
					ModifiedBy, ModifiedDate, ModifiedDateGMT)
				VALUES (@FormID, @ButtonID, @ReqOldRefID, @ClearControls, @ClearColumns, @AutoClose, @IsMobileButton, @IsAudit,
					@CompanyID, @OrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime);

				SET @ButtonMin = @ButtonMin + 1;
			END

			UPDATE CMM
			SET Name = ISNULL(CM.Name, '')
			FROM CmnCodeMaster FB
				JOIN FormButtonConfig FBC ON FBC.FormID = @IN_ConfigID AND FBC.TypeValues = FB.Typevalues
					AND ISNULL(FBC.IsDeleted, 0) = 0 AND ISNULL(FBC.NotActive, 0) = 0 AND ISNULL(FBC.IsCurrentVersion, 1) = 1
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'Button' AND CM.ControlID = FBC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMasterMultiLingual CMM WITH (NOLOCK) ON CMM.Type = FB.[Type] AND CMM.CodeMasterID = FB.CodemasterID 
					AND CMM.TypeValues = FB.TypeValues AND CMM.LanguageID = CM.LanguageID AND CMM.IsDeleted = 0
			WHERE FB.Type = 'Menubutton' AND FB.MenuID = @FormID AND ISNULL(CM.Name, '') <> ''
				AND ISNULL(FB.IsDeleted, 0) = 0 AND ISNULL(FB.NotActive, 0) = 0 AND ISNULL(FB.IsCurrentVersion, 1) = 1;

			INSERT INTO CmnCodeMasterMultiLingual (LanguageID, CodeMasterID, Type, TypeValues, Name, IsDeleted)
			SELECT CM.LanguageID, FB.CodemasterID, FB.Type, FB.Typevalues, ISNULL(CM.Name, ''), 0
			FROM CmnCodeMaster FB
				JOIN FormButtonConfig FBC ON FBC.FormID = @IN_ConfigID AND FBC.TypeValues = FB.Typevalues
					AND ISNULL(FBC.IsDeleted, 0) = 0 AND ISNULL(FBC.NotActive, 0) = 0 AND ISNULL(FBC.IsCurrentVersion, 1) = 1
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'Button' AND CM.ControlID = FBC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FB.Type = 'Menubutton' AND FB.MenuID = @FormID AND ISNULL(CM.Name, '') <> ''
				AND ISNULL(FB.IsDeleted, 0) = 0 AND ISNULL(FB.NotActive, 0) = 0 AND ISNULL(FB.IsCurrentVersion, 1) = 1
				AND NOT EXISTS (SELECT 1 FROM CmnCodeMasterMultiLingual CMM WHERE  CMM.Type = FB.[Type] AND CMM.CodeMasterID = FB.CodemasterID 
											AND CMM.TypeValues = FB.TypeValues AND CMM.LanguageID = CM.LanguageID AND CMM.IsDeleted = 0);

			IF OBJECT_ID('tempdb..#tempFormButtons') IS NOT NULL
				DROP TABLE #tempFormButtons
				
			SET @ButtonList = '';
			SET @TabList = ISNULL(SUBSTRING((SELECT ',' + CAST(TabID AS VARCHAR(50)) FROM CmnFormTabs WHERE FormID = @FormID
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
			SET @ButtonList = ISNULL(SUBSTRING((SELECT ',' + CAST(CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster WHERE MenuID = @FormID AND Type = 'Menubutton' AND IsDeleted = 0 AND NotActive = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');
			SELECT @MainMenuOrder = MainMenuOrder, @SubMenuOrder =SubMenuOrder FROM CmnFormDetails WHERE FormID = @FormID;
			
			IF ISNULL(@ExistingFormID, 0) <> 0 AND ISNULL(@ExistingCount, 0) > 0 
			BEGIN			
				INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
					, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
				SELECT E.RoleID, ISNULL(SUBSTRING((SELECT ',' + CAST(FT.TabID AS VARCHAR(50)) FROM CmnFormTabs FT WHERE FT.FormID = @FormID AND ISNULL(FT.IsStatic, 0) = 0
								AND (PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + CAST(E.Tabs AS VARCHAR(MAX)) + ',') > 0 
								OR PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + @NewTabs + ',') > 0) AND FT.IsDeleted = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 				
						ISNULL(SUBSTRING((SELECT ',' + CAST(CM.CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster CM WHERE MenuID = @FormID AND CM.Type = 'Menubutton' 
								AND (PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + CAST(E.Buttons AS VARCHAR(MAX)) + ',') > 0
								OR PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + @NewButtons + ',') > 0) AND CM.IsDeleted = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
						E.MainMenuOrder, E.SubMenuOrder, @FormID, E.HasReadPermission, E.IsFavourite, E.FavouriteOrder, 0, E.Audit, E.ValidateChecksum, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM #tempRoleList E;
			
				INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
				  , CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
				SELECT E.UserID, ISNULL(SUBSTRING((SELECT ',' + CAST(FT.TabID AS VARCHAR(50)) FROM CmnFormTabs FT WHERE FT.FormID = @FormID AND ISNULL(FT.IsStatic, 0) = 0
								AND (PATINDEX('%,' +  CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + CAST(TU.Tabs AS VARCHAR(MAX)) + ',') > 0
								OR PATINDEX('%,' + CAST(FT.Name AS VARCHAR(MAX)) + ',%' , ',' + @NewTabs + ',') > 0) AND FT.IsDeleted = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 				
						ISNULL(SUBSTRING((SELECT ',' + CAST(CM.CodemasterID AS VARCHAR(50)) FROM CmnCodeMaster CM WHERE MenuID = @FormID AND CM.Type = 'Menubutton' 
								AND (PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + CAST(TU.Buttons AS VARCHAR(MAX)) + ',') > 0
								OR PATINDEX('%,' +  CAST(CM.TypeValues AS VARCHAR(MAX)) + ',%' , ',' + @NewButtons + ',') > 0) AND CM.IsDeleted = 0
							FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), ''), 
						TU.MainMenuOrder, TU.SubMenuOrder, @FormID, TU.HasReadPermission, TU.IsFavourite, TU.FavouriteOrder, 0, TU.Audit, TU.ValidateChecksum, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM CmnUserDetails E 
				  JOIN #tempUserList TU ON TU.UserID = E.UserID
				WHERE E.IsDeleted = 0;
			END
			ELSE
			BEGIN
				INSERT INTO CmnRolePermission (RoleID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
					FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
					, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
				SELECT RoleID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
					@FormID, HasReadPermission, IsFavourite, FavouriteOrder, 0, Audit, ValidateChecksum
					, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM FormRoleConfiguration WHERE FormID = @IN_ConfigID AND IsDeleted = 0 AND HasReadPermission = 1;

				INSERT INTO CmnRBSPermission (UserID, Tabs, Buttons, MainMenuOrder, SubMenuOrder, 
					FormID, HasReadPermission, IsFavourite, FavouriteOrder, SubAudit, Audit, ValidateChecksum
					, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, IsDeleted)
				SELECT E.UserID, @TabList, @ButtonList, @MainMenuOrder, @SubMenuOrder, 
					@FormID, HasReadPermission, IsFavourite, FavouriteOrder, 0, Audit, ValidateChecksum
					, @IN_UserID, @UTCTime, @IN_UserID, @UTCTime, 0
				FROM CmnUserDetails E 
					JOIN FormRoleConfiguration RC ON RC.FormID = @IN_ConfigID AND RC.IsDeleted = 0 AND RC.HasReadPermission = 1
				WHERE PATINDEX(CONCAT('%,', CAST(E.RoleID AS VARCHAR(50)), ',%'), CONCAT(',', RC.RoleID, ',')) > 0 AND E.IsDeleted = 0;
			END

			INSERT INTO CmnFormControls (GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, Maxlength, Events, 
				ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill,
				IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, FKData1, FKData2, AdditionalConditions, FilterConditions, FillEvent, FillType, ButtonID, ButtonDmlType, FkOrder, FkDelete, FkNotActive,
				FkVersion, FkShowActive, VersionCheck, ControlOrder, IsMobile, IsWizard, IsOldRefColumn, DataVariable, IsAutoGenerate, IsSelectAll, ModifiedDate, IsDeleted, DateDifference, Description, AttachmentMaxSize)
			SELECT GB.GroupID, FC.Name, FC.TableColumn, FC.ControlType, FC.DataType, FC.Visibility, FC.Readonly, FC.IsMandatory, FC.Maxlength, FC.Events, FC.ValidationEvent, FC.SearchApplicable, 
				FC.SelectApplicable, FC.DefaultValue, FC.MaxRange, FC.AttachmentPath, FC.IsIdentity, ISNULL(FC.UniqueGroup, 0), ISNULL(FC.IsDmlControl, 0), ISNULL(FC.IsEncrypt, 0), ISNULL(FC.IsReturnFill, 0), 
				ISNULL(FC.IsNoAdd, 0), ISNULL(FC.IsNoUpdate, 0), FC.FkType, FC.FkTable, FC.FkColumn, FC.FkData, FC.FKData1, FC.FKData2, FC.AdditionalConditions, FC.FilterConditions, FC.FillEvent, FC.FillType, ISNULL(CM.CodemasterID, 0), ISNULL(FCM.ProcessButtonTypeID, 0), FC.FkOrder, 
				FC.FkDelete, FC.FkNotActive, FC.FkVersion, FC.FkShowActive, FC.VersionCheck, FC.ControlOrder, FC.IsMobile, FC.IsWizard, 
				FC.IsOldRefColumn, FC.DataVariable, FC.IsAutoGenerate, FC.IsSelectAll, @UTCTime, 0, ISNULL(FC.DateDifference, NULL), ISNULL(FC.Description, ''), ISNULL(FC.AttachmentMaxSize, 0)
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.IsDeleted = 0
				LEFT JOIN FormButtonConfig FCM ON FCM.FormID = @IN_ConfigID AND FCM.ReferenceID = GC.ButtonID AND FCM.IsDeleted = 0
				LEFT JOIN CmnCodeMaster CM ON CM.MenuID = @FormID AND CM.Type = 'Menubutton' AND CM.TypeValues = FCM.TypeValues AND CM.IsDeleted = 0     
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC;
			INSERT INTO CmnControlsMultiLingual (LanguageID, ControlID, Name, IsDeleted)
			SELECT CM.LanguageID, CFC.ControlID, CM.Name, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = FC.TableColumn 
					AND CFC.Name = FC.Name AND CFC.IsDeleted = 0
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'FormControls' AND CM.ControlID = FC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 AND ISNULL(CM.Name, '') <> ''
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC;

			UPDATE  FC 
			SET FC.FillEvent = (CASE WHEN ISNULL(FC.DefaultValue, '') <> '' THEN ('MMS.setProcessingData(''ddl'+REPLACE(CM.TypeValues, ' ', '')+ FC.TableColumn+ ''', '+FC.DefaultValue+');') ELSE '' END), FC.DefaultValue = ''
			FROM CmnFormControls FC
				JOIN CmnCodeMaster CM ON CM.CodemasterID = FC.ButtonID AND Type = 'Menubutton' AND CM.MenuID = @FormID AND CM.IsDeleted = 0 AND CM.ButtonKeyColumn = FC.TableColumn 			
			WHERE ISNULL(FC.ButtonID, 0) <> 0 AND FC.IsDeleted = 0;
						
			INSERT INTO CmnControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
				IsMandatory, Maxlength, Events, ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity,
				UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, FKData1, FKData2, AdditionalConditions, DependentFlag, DependentType, ColumnWidth, FkOrder, FkDelete, FkNotActive, FkVersion,
				FkShowActive, VersionCheck, ColumnOrder, IsMobile, IsWizard, DataVariable, IsAutoGenerate, IsSelectAll, ModifiedDate, IsDeleted, DateDifference, Description, AttachmentMaxSize, IsNoUpdate)
			SELECT CFC.ControlID, CC.ColumnName, CC.ColumnName1, CC.ColumnName2, CC.DisplayName, CC.ControlType, CC.DataType, CC.Visibility, CC.Readonly, CC.IsMandatory, CC.Maxlength, CC.Events,
					CC.ValidationEvent, CC.FillEvent, CC.GridParentControl, CC.SearchApplicable, CC.SelectApplicable, CC.DefaultValue, CC.MaxRange, CC.AttachmentPath, CC.IsIdentity, CASE WHEN ISNULL(CC.UniqueGroup, 0) = 0 OR ISNULL(CC.UniqueGroup, '') = '' THEN 0 ELSE CC.UniqueGroup END,
					ISNULL(CC.IsDmlControl, 0), CC.FkType, CC.FkTable, CC.FkColumn, CC.FkData, CC.FKData1, CC.FKData2, CC.AdditionalConditions, CC.DependentFlag, CC.DependentType, CC.ColumnWidth, CC.FkOrder, CC.FkDelete, CC.FkNotActive, CC.FkVersion, CC.FkShowActive, 
					CC.VersionCheck, CC.ColumnOrder, CC.IsMobile, CC.IsWizard, CC.DataVariable, CC.IsAutoGenerate, CC.SelectAll, @UTCTime, 0, ISNULL(CC.DateDifference, NULL) , ISNULL(CC.Description, ''), ISNULL(CC.AttachmentMaxSize, 0), ISNULL(CC.IsNoUpdate, 0)
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
				JOIN FormControlColumnsConfig CC ON CC.FormID = @IN_ConfigID AND CC.ControlID = FC.ReferenceID AND CC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC, CC.ColumnOrder ASC;

			INSERT INTO CmnColumnsMultiLingual (LanguageID, ColumnID, Name, IsDeleted)
			SELECT CM.LanguageID, CCC.ColumnID, CM.Name, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
				JOIN FormControlColumnsConfig CC ON CC.FormID = @IN_ConfigID AND CC.ControlID = FC.ReferenceID AND CC.IsDeleted = 0
				JOIN CmnControlColumns CCC ON CCC.ControlID = CFC.ControlID AND CCC.ColumnName = CC.ColumnName 
					AND CCC.DisplayName = CC.DisplayName AND CCC.IsDeleted = 0
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'ControlColumns' AND CM.ControlID = CC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 AND ISNULL(CM.Name, '') <> ''
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC, CC.ColumnOrder ASC;

			INSERT INTO CmnGridControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
				IsMandatory, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity,
				UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion,
				FkShowActive, VersionCheck, ColumnOrder, IsMobile, IsWizard, IsDataSource, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, DependentType, ColumnWidth, ModifiedDate, IsDeleted, DateDifference, Description, AttachmentMaxSize)
			SELECT CCC.ColumnID, GCC.ColumnName, GCC.ColumnName1, GCC.ColumnName2, GCC.DisplayName, GCC.ControlType, GCC.DataType, GCC.Visibility, GCC.Readonly, GCC.IsMandatory, GCC.MaxLength, GCC.Events,
				GCC.ValidationEvent, GCC.SearchApplicable, GCC.SelectApplicable, GCC.DefaultValue, GCC.MaxRange, GCC.AttachmentPath, GCC.IsIdentity, CASE WHEN ISNULL(GCC.UniqueGroup, 0) = 0 OR ISNULL(GCC.UniqueGroup, '') = '' THEN 0 ELSE GCC.UniqueGroup END,
				ISNULL(CC.IsDmlControl, 0), GCC.FkType, GCC.FkTable, GCC.FkColumn, GCC.FkData, GCC.AdditionalConditions, GCC.FkOrder, GCC.FkDelete, GCC.FkNotActive, GCC.FkVersion, GCC.FkShowActive, 
				GCC.VersionCheck, GCC.ColumnOrder, GCC.IsMobile, GCC.IsWizard, GCC.IsDataSource, GCC.DecimalLength, GCC.IsCurrency, GCC.CurrencyColumn, GCC.DependentFlag, GCC.DependentType, GCC.ColumnWidth, @UTCTime, 0, 
				ISNULL(GCC.DateDifference, NULL), ISNULL(GCC.Description, ''), ISNULL(GCC.AttachmentMaxSize, 0)
			FROM CmnFormTabs FT   
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.ControlType = 19 AND CFC.IsDeleted = 0
				JOIN CmnControlColumns CCC ON CCC.ControlID = CFC.ControlID AND CCC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.ControlType = 19 AND FC.IsDeleted = 0
				JOIN FormControlColumnsConfig CC ON CC.FormID = @IN_ConfigID AND CC.ControlID = FC.ReferenceID AND CC.ColumnName = CCC.ColumnName AND CC.IsDeleted = 0
				JOIN FormGridControlColumnsConfig GCC ON GCC.FormID = @IN_ConfigID AND GCC.ColumnID = CC.ReferenceID AND GCC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC, CCC.ColumnOrder ASC, GCC.ColumnOrder ASC;

			INSERT INTO CmnGridColumnsMultiLingual (LanguageID, ColumnID, Name, IsDeleted)
			SELECT CM.LanguageID, CGCC.ColumnID, CM.Name, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.ControlType = 19 AND CFC.IsDeleted = 0
				JOIN CmnControlColumns CCC ON CCC.ControlID = CFC.ControlID AND CCC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.ControlType = 19 AND FC.IsDeleted = 0
				JOIN FormControlColumnsConfig CC ON CC.FormID = @IN_ConfigID AND CC.ControlID = FC.ReferenceID AND CC.ColumnName = CCC.ColumnName AND CC.IsDeleted = 0
				JOIN FormGridControlColumnsConfig GCC ON GCC.FormID = @IN_ConfigID AND GCC.ColumnID = CC.ReferenceID AND GCC.IsDeleted = 0
				JOIN CmnGridControlColumns CGCC ON CGCC.ControlID = CCC.ColumnID AND CGCC.ColumnName = GCC.ColumnName 
					AND CGCC.DisplayName = GCC.DisplayName AND CGCC.IsDeleted = 0
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'GridControlColumns' AND CM.ControlID = GCC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 AND ISNULL(CM.Name, '') <> ''
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC, CCC.ColumnOrder ASC, GCC.ColumnOrder ASC;

			IF OBJECT_ID('tempdb..#tempProcessButtons') IS NOT NULL
				DROP TABLE #tempProcessButtons

			CREATE TABLE #tempProcessButtons (
				BNum INT NOT NULL IDENTITY(1,1),
				ProcessColumn VARCHAR(100) NULL)	

			INSERT INTO #tempProcessButtons (ProcessColumn)
			SELECT DISTINCT(ButtonKeyColumn)
			FROM FormButtonConfig
			WHERE FormID = @IN_ConfigID AND (ButtonType = 5 OR ButtonType = 6 OR ISNULL(ButtonKeyColumn, '') <> '') AND IsDeleted = 0;  
			
			-- UPDATE #tempProcessButtons SET @BCount = BNum = @BCount + 1;
			SELECT @ProcessButtonCount = COUNT(1) FROM #tempProcessButtons;
			
			SET @BMin = 0;
			WHILE (@ProcessButtonCount > @BMin)
			BEGIN
				SET @BMin = @BMin + 1;
				SET @GridControlID = 0;
				SET @GridFkTable  = '';
				SET @GridFkColumn  = '';
				SET @ProcessColumn = '';
				SET @ProcessControlType = 0;
				SELECT @ProcessColumn = ProcessColumn FROM #tempProcessButtons WHERE BNum = @BMin;

				SELECT TOP 1 @GridControlID = CFC.ControlID, @GridFkTable = CFC.FkTable, @GridFkColumn = CFC.FkColumn
				FROM CmnFormTabs FT  
					JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
					JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
					JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
					JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.DefaultGroupbox = 1 AND GC.IsDeleted = 0
					JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.ControlType = 19 AND FC.IsDeleted = 0
				WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC;
				
				IF ISNULL(@GridControlID, 0) <> 0 AND @ProcessColumn <> ''
				BEGIN
					SELECT @ViewTableCount = COUNT(1) FROM information_schema.VIEWS WHERE TABLE_NAME = @GridFkTable;
					SELECT @ProcessControlType = ControlType FROM CmnControlColumns WHERE ControlID = @GridControlID AND ColumnName = @ProcessColumn AND IsDeleted = 0;
					
					IF ISNULL(@ProcessControlType, 0) <> 3
					BEGIN
						IF @ViewTableCount = 1
						BEGIN
							INSERT INTO CmnControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
									IsMandatory, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity,
									UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion,
									FkShowActive, VersionCheck, ColumnOrder, IsMobile, IsWizard, ModifiedDate, IsDeleted, DateDifference, Description, AttachmentMaxSize, IsNoUpdate)
							VALUES (@GridControlID, ('Process'+ @ProcessColumn), '', '', ('Process '+ @ProcessColumn), 20, 2, 0, 0, 0, '-1', '',
										'', 0, 0, '', '', 0, 0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 1, 10, 0, 0, @UTCTime, 0, NULL, '', 0, 0);
						END
						ELSE
						BEGIN
							INSERT INTO CmnControlColumns (ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, Visibility, Readonly,
									IsMandatory, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity,
									UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion,
									FkShowActive, VersionCheck, ColumnOrder, IsMobile, IsWizard, ModifiedDate, IsDeleted, DateDifference, Description, AttachmentMaxSize, IsNoUpdate)
							SELECT @GridControlID, ('Process'+ CC.ColumnName), CC.ColumnName1, CC.ColumnName2, ('Process '+ CC.DisplayName), CC.ControlType, CC.DataType, 0, CC.Readonly, CC.IsMandatory, CC.MaxLength, CC.Events,
									CC.ValidationEvent, 0, CC.SelectApplicable, CC.DefaultValue, CC.MaxRange, CC.AttachmentPath, CC.IsIdentity, CC.UniqueGroup,
									CC.IsDmlControl, 0, @GridFkTable, @GridFkColumn, @ProcessColumn, CC.AdditionalConditions, CC.FkOrder, CC.FkDelete, CC.FkNotActive, CC.FkVersion, CC.FkShowActive, 
									CC.VersionCheck, CC.ColumnOrder, CC.IsMobile, CC.IsWizard, @UTCTime, 0, ISNULL(CC.DateDifference, NULL), ISNULL(CC.Description, ''), CC.AttachmentMaxSize, 0
							FROM CmnControlColumns CC WHERE CC.ControlID = @GridControlID AND CC.ColumnName = @ProcessColumn AND CC.IsDeleted = 0;

						END

						UPDATE CmnCodeMaster SET ButtonKeyColumn = ('Process'+ @ProcessColumn) WHERE MenuID = @FormID AND ButtonKeyColumn = @ProcessColumn AND IsDeleted = 0;
					END
				END 				
			END

			IF OBJECT_ID('tempdb..#tempProcessButtons') IS NOT NULL
				DROP TABLE #tempProcessButtons

			INSERT INTO CmnFormSearchControl (ControlID, FormID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory,
				Maxlength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData,
				AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, SearchOrder, IsMobile, ModifiedDate, IsDeleted, ButtonID, 
				Type, DateFilterType, FillEvent, DataVariable, DateDifference, Description)
			SELECT CFC.ControlID, @FormID, SC.Name, SC.TableColumn, SC.ControlType, SC.DataType, SC.Visibility, SC.Readonly, SC.IsMandatory, SC.Maxlength, SC.Events, SC.ValidationEvent, SC.SelectApplicable, 
				SC.DefaultValue, SC.MaxRange, SC.FkType, SC.FkTable, SC.FkColumn, SC.FkData, SC.AdditionalConditions, SC.FkOrder, SC.FkDelete, SC.FkNotActive, SC.FkVersion, SC.SearchOrder, SC.IsMobile, @UTCTime, 0,
				ISNULL(CM.CodemasterID, 0), SC.Type, SC.DateFilterType, SC.FillEvent, SC.DataVariable, ISNULL(SC.DateDifference, NULL) , ISNULL(SC.Description, '')
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
				JOIN FormSearchControlsConfig SC ON SC.FormID = @IN_ConfigID AND SC.ControlID = FC.ReferenceID AND SC.IsDeleted = 0
				LEFT JOIN FormButtonConfig FCM ON FCM.FormID = @IN_ConfigID AND FCM.ReferenceID = SC.ButtonID AND FCM.IsDeleted = 0
				LEFT JOIN CmnCodeMaster CM ON CM.MenuID = @FormID AND CM.Type = 'Menubutton' AND CM.TypeValues = FCM.TypeValues AND CM.IsDeleted = 0     
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC;

			INSERT INTO CmnSearchMultiLingual (LanguageID, SearchID, Name, IsDeleted)
			SELECT CM.LanguageID, CSC.SearchID, CM.Name, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
				JOIN FormSearchControlsConfig SC ON SC.FormID = @IN_ConfigID AND SC.ControlID = FC.ReferenceID AND SC.IsDeleted = 0
				JOIN CmnFormSearchControl CSC ON CSC.ControlID = CFC.ControlID AND CSC.TableColumn = SC.TableColumn
					AND CSC.Name = SC.Name AND CSC.IsDeleted = 0
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'Filters' AND CM.ControlID = SC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 AND ISNULL(CM.Name, '') <> ''
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC;

			INSERT INTO CmnSearchControlColumns (SearchID, DisplayName, ColumnName, ControlType, DataType, Visibility, Readonly, IsMandatory,
				Maxlength, Events, ValidationEvent, SelectApplicable, DefaultValue, MaxRange, FkType, FkTable, FkColumn, FkData,
				AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, ColumnOrder, DependentType, ModifiedDate, IsDeleted, DateDifference, Description)
			SELECT SFC.SearchID, SCC.Name, SCC.TableColumn, SCC.ControlType, SCC.DataType, SCC.Visibility, SCC.Readonly, SCC.IsMandatory, 
				SCC.Maxlength, SCC.Events, SCC.ValidationEvent, SCC.SelectApplicable, SCC.DefaultValue, SCC.MaxRange, SCC.FkType, SCC.FkTable, SCC.FkColumn, 
				SCC.FkData, SCC.AdditionalConditions, SCC.FkOrder, SCC.FkDelete, SCC.FkNotActive, SCC.FkVersion, 
				SCC.SearchOrder, SCC.DependentType, @UTCTime, 0, ISNULL(SCC.DateDifference, NULL) , ISNULL(SCC.Description, '')
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0 AND CFC.SearchApplicable = 1
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0 AND FC.SearchApplicable = 1
				JOIN FormSearchControlsConfig SC ON SC.FormID = @IN_ConfigID AND SC.ControlID = FC.ReferenceID AND SC.IsDeleted = 0 --AND SC.DependentFlag = 1
				JOIN CmnFormSearchControl SFC ON SFC.ControlID = CFC.ControlID AND SFC.IsDeleted = 0 AND SFC.Name = SC.Name AND SFC.TableColumn = SC.TableColumn
				JOIN FormSearchColumnsConfig SCC ON SCC.FormID = @IN_ConfigID AND SCC.SearchID = SC.ReferenceID AND SCC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC, SC.SearchOrder ASC;

			INSERT INTO CmnSearchColumnsMultiLingual (LanguageID, ColumnID, Name, IsDeleted)
			SELECT CM.LanguageID, CSCC.ColumnID, CM.Name, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0 AND CFC.SearchApplicable = 1
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0 AND FC.SearchApplicable = 1
				JOIN FormSearchControlsConfig SC ON SC.FormID = @IN_ConfigID AND SC.ControlID = FC.ReferenceID AND SC.IsDeleted = 0 --AND SC.DependentFlag = 1
				JOIN CmnFormSearchControl SFC ON SFC.ControlID = CFC.ControlID AND SFC.IsDeleted = 0 AND SFC.Name = SC.Name AND SFC.TableColumn = SC.TableColumn
				JOIN FormSearchColumnsConfig SCC ON SCC.FormID = @IN_ConfigID AND SCC.SearchID = SC.ReferenceID AND SCC.IsDeleted = 0
				JOIN CmnSearchControlColumns CSCC ON CSCC.SearchID = SFC.SearchID AND CSCC.ColumnName = SCC.TableColumn
					AND CSCC.DisplayName = SCC.Name AND CSCC.IsDeleted = 0
				JOIN FormControlMultilingual CM ON CM.ConfigType = 'FilterColumns' AND CM.ControlID = SCC.ReferenceID
					AND ISNULL(CM.IsDeleted, 0) = 0 AND ISNULL(CM.NotActive, 0) = 0 AND ISNULL(CM.IsCurrentVersion, 1) = 1
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, CFC.ControlOrder ASC, SC.SearchOrder ASC;

			SELECT @ControlCount = COUNT(1) 
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls FC ON FC.GroupID = GB.GroupID AND FC.IsDeleted = 0 AND (FC.ControlType = 18 OR FC.ControlType = 19 OR 
					FC.ControlType = 24 OR FC.ControlType = 25 OR FC.ControlType = 7 OR FC.ControlType = 8 OR FC.ControlType = 12 OR FC.ControlType = 16 OR FC.ControlType = 20 OR FC.ControlType = 27 OR FC.ControlType = 30 OR FC.ControlType = 31 OR FC.DataType = 5) 
			WHERE FT.FormID = @FormID AND FC.IsDeleted = 0;
  
			SET @SCount = 0;
			IF OBJECT_ID('tempdb..#tempFormControls') IS NOT NULL
				DROP TABLE #tempFormControls

			CREATE TABLE #tempFormControls (
				SNum INT NULL,
				ControlID INT,
				Name NVARCHAR(500) NULL,
				ControlType INT NULL)	

			INSERT INTO #tempFormControls (ControlID, Name, ControlType)
			SELECT FC.ControlID, FC.Name, FC.ControlType
			FROM CmnFormTabs FT
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls FC ON FC.GroupID = GB.GroupID AND FC.IsDeleted = 0 AND (FC.ControlType = 18 OR FC.ControlType = 19 OR FC.ControlType = 1 OR FC.ControlType = 2 OR FC.ControlType = 9 
						OR FC.ControlType = 24 OR FC.ControlType = 25 OR FC.ControlType = 7 OR FC.ControlType = 8 OR FC.ControlType = 12 OR FC.ControlType = 16 OR FC.ControlType = 20 OR FC.ControlType = 27 OR FC.ControlType = 30 OR FC.ControlType = 31 OR FC.DataType = 5)
			WHERE FT.FormID = @FormID AND FC.IsDeleted = 0
			ORDER BY FT.TabOrder ASC, GB.GroupOrder ASC, FC.ControlOrder ASC
			
			UPDATE #tempFormControls SET @SCount = SNum = @SCount + 1;
			SELECT @ControlCount = COUNT(1) FROM #tempFormControls;

			SET @ControlMin = 0;
			WHILE @ControlCount > @ControlMin
			BEGIN
				SET @Query = 'SELECT @TempControlID = ControlID FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempControlID INT OUT',@ControlID OUT

				SET @Query = 'SELECT @TempControlName = Name FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempControlName NVARCHAR(500) OUT', @ControlName OUT

				SET @Query = 'SELECT @TempControlType = ControlType FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
				EXEC SP_EXECUTESQL @Query, N'@TempControlType INT OUT', @ControlType OUT
				
				IF @ControlType = 18
				BEGIN
					INSERT INTO CmnControlProperty VALUES (@ControlID, 'Tree Header', @ControlName, @UTCTime, 0);
					INSERT INTO CmnControlProperty VALUES (@ControlID, 'Tree Access Type', 1, @UTCTime, 0);      
				END
				INSERT INTO CmnControlProperty
				SELECT DISTINCT CFC.ControlID, CP.PropertyName, (CASE WHEN CFC.ControlType= 8 AND CP.PropertyValue = 1 THEN 'Fixed' ELSE CP.PropertyValue END), @UTCTime, 0
				FROM CmnFormTabs FT  
					JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
					JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.ControlID = @ControlID AND CFC.IsDeleted = 0
					JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
					JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
					JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND  FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
					JOIN FormControlPropertyConfig CP ON CP.FormID = @IN_ConfigID AND CP.ControlID = FC.ReferenceID AND CP.Type = 'Control' AND CP.IsDeleted = 0
				WHERE FT.FormID = @FormID AND FT.IsDeleted = 0
					AND NOT EXISTS(SELECT 1 FROM CmnControlProperty WHERE ControlID = CFC.ControlID AND Name = CP.PropertyName);
				
				INSERT INTO CmnControlProperty
				SELECT DISTINCT CFC.ControlID, 'Data Tree Condition', FC.DataTreeCondition, @UTCTime, 0
				FROM CmnFormTabs FT  
				   JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				   JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.ControlID = @ControlID AND CFC.IsDeleted = 0
				   JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				   JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				   JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND  FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND ISNULL(FC.DataTreeCondition, '') <> '' AND FC.IsDeleted = 0
				WHERE FT.FormID = @FormID AND FT.IsDeleted = 0
					AND NOT EXISTS(SELECT 1 FROM CmnControlProperty WHERE ControlID = CFC.ControlID AND Name = 'Data Tree Condition');
				
				SET @ControlMin = @ControlMin + 1;
			END

			INSERT INTO CmnColumnProperty
			SELECT DISTINCT CC.ColumnID, CP.PropertyName, CP.PropertyValue, @UTCTime, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN CmnControlColumns CC ON CC.ControlID = CFC.ControlID AND CC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND  FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
				JOIN FormControlColumnsConfig CCC ON CCC.FormID = @IN_ConfigID AND CCC.GroupID = GC.ReferenceID AND CCC.ControlID = FC.ReferenceID AND CCC.ColumnName = CC.ColumnName 
					AND CCC.DisplayName = CC.DisplayName AND ISNULL(CCC.DefaultValue, '') = ISNULL(CC.DefaultValue, '')
					AND ISNULL(CCC.DependentType, 0) = ISNULL(CC.DependentType, 0) AND CCC.IsDeleted = 0
				JOIN FormControlPropertyConfig CP ON CP.FormID = @IN_ConfigID AND CP.ControlID = CCC.ReferenceID AND CP.Type = 'Column' AND CP.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 
				AND NOT EXISTS(SELECT 1 FROM CmnColumnProperty WHERE ColumnID = CC.ColumnID AND Name = CP.PropertyName);
			
			INSERT INTO CmnGeneralProperty VALUES('Form', @FormID, 'Footer', ISNULL(@Footer, 1), @UTCTime, 0);			

			INSERT INTO CmnControlProperty
			SELECT DISTINCT CFC.ControlID, PC.PropertyName, PC.PropertyValue, @UTCTime, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0               
				JOIN FormAdditionalPropertyConfig PC ON PC.FormID = @IN_ConfigID AND PC.Type = 'Control' AND PC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND FC.ReferenceID = PC.ControlID AND FC.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = FC.TableColumn AND CFC.Name = FC.Name AND CFC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0
				AND NOT EXISTS(SELECT 1 FROM CmnControlProperty WHERE ControlID = CFC.ControlID AND Name = PC.PropertyName);

			INSERT INTO CmnColumnProperty
			SELECT DISTINCT CC.ColumnID, PC.PropertyName, PC.PropertyValue, @UTCTime, 0
			FROM CmnFormTabs FT  
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN CmnControlColumns CC ON CC.ControlID = CFC.ControlID AND CC.IsDeleted = 0
				JOIN FormTabConfig TC ON TC.FormID = @IN_ConfigID AND TC.Name = FT.Name AND TC.IsDeleted = 0
				JOIN FormGroupboxConfig GC ON GC.FormID = @IN_ConfigID AND TC.ReferenceID = GC.TabID AND GC.Name = GB.Name AND GC.IsDeleted = 0
				JOIN FormControlConfig FC ON FC.FormID = @IN_ConfigID AND  FC.GroupID = GC.ReferenceID AND FC.TableColumn = CFC.TableColumn AND FC.IsDeleted = 0
				JOIN FormControlColumnsConfig CCC ON CCC.FormID = @IN_ConfigID AND CCC.GroupID = GC.ReferenceID AND CCC.ControlID = FC.ReferenceID AND CCC.ColumnName = CC.ColumnName 
					AND CCC.DisplayName = CC.DisplayName AND ISNULL(CCC.DefaultValue, '') = ISNULL(CC.DefaultValue, '')
					AND ISNULL(CCC.DependentType, 0) = ISNULL(CC.DependentType, 0) AND CCC.IsDeleted = 0
				JOIN FormAdditionalPropertyConfig PC ON PC.FormID = @IN_ConfigID AND PC.ControlID = CCC.ReferenceID AND PC.Type = 'Column' AND PC.IsDeleted = 0
			WHERE FT.FormID = @FormID AND FT.IsDeleted = 0 
				AND NOT EXISTS(SELECT 1 FROM CmnColumnProperty WHERE ColumnID = CC.ColumnID AND Name = PC.PropertyName);

			UPDATE BP
			SET ClearControls = ISNULL((SUBSTRING((SELECT DISTINCT ',' + CONVERT(VARCHAR(50), CFC.ControlID)
							 FROM FormControlConfig FCC
								JOIN CmnFormTabs FT ON FT.FormID = BP.FormID AND FT.IsDeleted = 0
								JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0               
								JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = FCC.TableColumn 
									AND CFC.Name = FCC.Name AND CFC.IsDeleted = 0
							 WHERE FCC.FormID = @IN_ConfigID AND PATINDEX('%,' +  CAST(FCC.ReferenceID AS VARCHAR(50)) + ',%' , ',' + ISNULL(BP.ClearControls, '') + ',') > 0
							 FOR XML PATH(''), ROOT('MyString'),TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 2000000000)), '')
			FROM CmnFormButtonProperties BP
			WHERE BP.FormID = @FormID AND ISNULL(BP.ClearControls, '') <> ''
				AND BP.IsDeleted = 0 AND BP.NotActive = 0 AND BP.IsCurrentVersion = 1;

			UPDATE BP
			SET ClearColumns = ISNULL((SUBSTRING((SELECT DISTINCT ',' + CONVERT(VARCHAR(100), CCC.ColumnID)
							 FROM FormControlColumnsConfig FCCC
								JOIN FormControlConfig FCC ON FCC.FormID = FCCC.FormID AND FCC.ReferenceID = FCCC.ControlID
								JOIN CmnFormTabs FT ON FT.FormID = BP.FormID AND FT.IsDeleted = 0
								JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0               
								JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.TableColumn = FCC.TableColumn 
									AND CFC.Name = FCC.Name AND CFC.IsDeleted = 0
								JOIN CmnControlColumns CCC ON CCC.ControlID = CFC.ControlID AND CCC.ColumnName = FCCC.ColumnName 
									AND CCC.DisplayName = FCCC.DisplayName AND CCC.IsDeleted = 0
							 WHERE FCCC.FormID = @IN_ConfigID AND PATINDEX('%,' +  CAST(FCCC.ReferenceID AS VARCHAR(50)) + ',%' , ',' + ISNULL(BP.ClearColumns, '') + ',') > 0
							 FOR XML PATH(''), ROOT('MyString'),TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 2000000000)), '')
			FROM CmnFormButtonProperties BP
			WHERE BP.FormID = @FormID AND ISNULL(BP.ClearColumns, '') <> ''
				AND BP.IsDeleted = 0 AND BP.NotActive = 0 AND BP.IsCurrentVersion = 1;

			INSERT INTO CmnControlAutoGenerateConfig (FormID, ConfigTypeID, ControlID, CountBasisID, ResetPeriodID, StartingNumber, DigitsCount, ERPID, CompanyID, 
				OrderBy, Version, IsCurrentVersion, IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT FT.FormID, AG.ConfigTypeID, CFC.ControlID, AG.CountBasisID, AG.ResetPeriodID, AG.StartingNumber, AG.DigitsCount, AG.ReferenceID,
				@CompanyID, AG.OrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
			FROM FormControlAutoGenerateConfig AG
				JOIN FormControlConfig FCC ON FCC.FormID = AG.FormID AND FCC.ReferenceID = AG.ControlID AND FCC.IsAutoGenerate = 1
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupboxConfig GBC ON GBC.FormID = FCC.FormID AND GBC.ReferenceID = FCC.GroupID AND GBC.IsDeleted = 0
				JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0 AND GB.Name = GBC.Name
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
					AND CFC.IsAutoGenerate = 1 AND CFC.TableColumn = FCC.TableColumn
			WHERE AG.FormID = @IN_ConfigID AND AG.ConfigTypeID = 1
				AND AG.IsDeleted = 0 AND AG.NotActive = 0 AND AG.IsCurrentVersion = 1;

			INSERT INTO CmnControlAutoGenerateConfig (FormID, ConfigTypeID, ControlID, CountBasisID, ResetPeriodID, StartingNumber, DigitsCount, ERPID, CompanyID, 
				OrderBy, Version, IsCurrentVersion, IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
			SELECT FT.FormID, AG.ConfigTypeID, CC.ColumnID, AG.CountBasisID, AG.ResetPeriodID, AG.StartingNumber, AG.DigitsCount, AG.ReferenceID,
				@CompanyID, AG.OrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
			FROM FormControlAutoGenerateConfig AG
				JOIN FormControlColumnsConfig FCCC ON FCCC.FormID = AG.FormID AND FCCC.ReferenceID = AG.ControlID AND FCCC.IsAutoGenerate = 1
					AND ISNULL(FCCC.IsDeleted, 0) = 0 AND ISNULL(FCCC.NotActive, 0) = 0 AND ISNULL(FCCC.IsCurrentVersion, 1) = 1
				JOIN FormGroupboxConfig GBC ON GBC.FormID = FCCC.FormID AND GBC.ReferenceID = FCCC.GroupID AND GBC.IsDeleted = 0
				JOIN CmnFormTabs FT ON FT.FormID = @FormID AND FT.IsDeleted = 0
				JOIN CmnGroupboxes GB ON GB.TabID = FT.TabID AND GB.IsDeleted = 0 AND GB.Name = GBC.Name
				JOIN CmnFormControls CFC ON CFC.GroupID = GB.GroupID AND CFC.IsDeleted = 0
				JOIN CmnControlColumns CC ON CC.ControlID = CFC.ControlID AND CC.IsDeleted = 0
					AND CC.IsAutoGenerate = 1 AND CC.ColumnName = FCCC.ColumnName
			WHERE AG.FormID = @IN_ConfigID AND AG.ConfigTypeID = 2
				AND AG.IsDeleted = 0 AND AG.NotActive = 0 AND AG.IsCurrentVersion = 1;

			INSERT INTO CmnControlCodeAutoConfig (ControlConfigID, FormID, ControlID, CodeTypeID, MasterID, FixedCode, FieldTypeID, FieldName, SeparatorChar,
				CompanyID, OrderBy, Version, IsCurrentVersion, IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT) 
			SELECT CAG.ReferenceID, CAG.FormID, CAG.ControlID, AC.CodeTypeID, AC.MasterID, AC.FixedCode, AC.FieldTypeID, AC.FieldName, AC.SeparatorChar, 
				@CompanyID, AC.OrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
			FROM FormControlCodeAutoConfig AC
				JOIN FormControlAutoGenerateConfig AG ON AG.ReferenceID = AC.ControlConfigID 
					AND AG.FormID = AC.FormID AND AG.ControlID = AC.ControlID
					AND AG.IsDeleted = 0 AND AG.NotActive = 0 AND AG.IsCurrentVersion = 1
				JOIN CmnControlAutoGenerateConfig CAG ON ISNULL(CAG.ERPID, '') = CAST(AG.ReferenceID AS VARCHAR(50))
					AND CAG.IsDeleted = 0 AND CAG.NotActive = 0 AND CAG.IsCurrentVersion = 1
			WHERE AC.FormID = @IN_ConfigID AND CAG.FormID = @FormID
				AND AC.IsDeleted = 0 AND AC.NotActive = 0 AND AC.IsCurrentVersion = 1;

			EXEC spFormTableStructureChange @IN_ConfigID, @IN_FormID, @IN_UserID, @CompanyID

			IF OBJECT_ID('tempdb..#tempUserList') IS NOT NULL
				DROP TABLE #tempUserList

			IF OBJECT_ID('tempdb..#tempRoleList') IS NOT NULL
				DROP TABLE #tempRoleList
			
			UPDATE FormConfiguration SET Status = 4, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_ConfigID; 
			
			SELECT @FormID;
			
			UPDATE FormConfiguration SET FormIcon = @FormIcon WHERE ParentMenu = @ParentMenu AND ParentMenu <> '' AND IsDeleted = 0;

			UPDATE ASD SET ASD.FormID = FC.FormID
			FROM FormConfiguration FC 
				JOIN CmnAfterSaveDML ASD ON ASD.ERPID = FC.ReferenceID AND ASD.FormID = 0 AND ASD.IsDeleted = 0
			WHERE FC.ReferenceID = @IN_ConfigID AND FC.IsDeleted = 0;
			
			EXEC spCmnPrepareFormQuery @FormID, @IN_UserID;

		COMMIT TRANSACTION tran_spPublishForm;
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_spPublishForm;
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spSaveButtonConfigData]'
GO

CREATE PROCEDURE [dbo].[spSaveButtonConfigData](@IN_Event VARCHAR(10), @IN_ReferenceID INT, @IN_ButtonType INT, @IN_ButtonName NVARCHAR(100), 
          @IN_ButtonIcon NVARCHAR(100), @IN_Order INT, @IN_ButtonEvent VARCHAR(500), @IN_MenuCategory INT, @IN_ButtonKeyColumn VARCHAR(100), 
          @IN_ButtonStatus VARCHAR(100), @IN_ProcessButtonType INT, @IN_ButtonCategory BIT, @IN_VisibleTabs VARCHAR(500), 
		  @IN_DisableTabs VARCHAR(500), @IN_TriggerEvent VARCHAR(500), @IN_IsMultipleApprove BIT, @IN_IsDelete BIT, @IN_IsDml BIT, 
		  @IN_ReqOldRefID BIT, @IN_ClearControls VARCHAR(MAX), @IN_ClearColumns VARCHAR(MAX), @IN_AutoClose BIT,
		  @IN_IsMobile BIT, @IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT, @IN_IsAudit BIT, @IN_BuiltProcessButtonID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_ButtonConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@ButtonCompanyID INT = 0,
				@ButtonID INT = 0,
				@GroupID INT = 0,
				@TabID INT = 0,
				@TabOrder INT = 0,
				@GroupOrder INT = 0,
				@TableName VARCHAR(100),
				@SourceID INT = 0,
				@ColumnCount INT = 0,
				@AlterColumnQuery NVARCHAR(MAX),
				@VisibleTabs VARCHAR(100),
				@DisableTabs VARCHAR(100),
				@ProcessCategory VARCHAR(100),
				@ProcessDescription VARCHAR(100),
				@Min INT = 1,
				@Max INT = 0;

		SELECT @ButtonCompanyID = ISNULL(ED.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
		WHERE UD.UserID = @IN_UserID;

		IF @ButtonCompanyID = 0
			SET @ButtonCompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), 0);
		IF @IN_Order = 0
		BEGIN
			SET @IN_Order = ISNULL((SELECT MAX(OrderBy)+ 1 FROM FormButtonConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0), 1);
		END

		SET @VisibleTabs = ISNULL((SELECT(SELECT DISTINCT CONVERT(VARCHAR(100), TI.ReferenceID) + ',' 
							 FROM FormTabConfig TI
							 WHERE TI.FormID = @IN_ConfigID AND PATINDEX('%,' + TI.Name + ',%' , ',' + @IN_VisibleTabs + ',') > 0
							 FOR XML PATH(''), ROOT('MyString'),TYPE).value('/MyString[1]','NVARCHAR(MAX)')), '');

		SET @DisableTabs = ISNULL((SELECT(SELECT DISTINCT CONVERT(VARCHAR(100), TI.ReferenceID) + ',' 
							 FROM FormTabConfig TI
							 WHERE TI.FormID = @IN_ConfigID AND PATINDEX('%,' + TI.Name + ',%' , ',' + @IN_DisableTabs + ',') > 0
							 FOR XML PATH(''), ROOT('MyString'),TYPE).value('/MyString[1]','NVARCHAR(MAX)')), '');

		IF @IN_Event = 'add' OR ISNULL(@IN_ReferenceID, 0) = 0
		BEGIN
			INSERT INTO FormButtonConfig (FormID, Type, DisplayType, UserAccess, ButtonType, TypeValues, Code, Description, Details, ImagePath, MenuCategory, ButtonKeyColumn, 
				AvailableStatus, ProcessButtonTypeID, OrderBy, ButtonCategory, VisibleTabs, DisableTabs, ButtonTriggerEvent, IsMultipleApproval, IsDml, 
				ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile, IsAudit, BuiltProcessButtonID, CreatedBy, CreatedDate, 
				CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, IsCurrentVersion, Version, CompanyID) 
			VALUES (@IN_ConfigID, 'Menubutton', 'Menubutton', 1, @IN_ButtonType, @IN_ButtonName, '', '', @IN_ButtonEvent, @IN_ButtonIcon, @IN_MenuCategory, @IN_ButtonKeyColumn,
				@IN_ButtonStatus, @IN_ProcessButtonType, @IN_Order, @IN_ButtonCategory, @VisibleTabs, @DisableTabs, @IN_TriggerEvent, @IN_IsMultipleApprove, @IN_IsDml, 
				@IN_ReqOldRefID, @IN_ClearControls, @IN_ClearColumns, @IN_AutoClose, @IN_IsMobile, @IN_IsAudit, @IN_BuiltProcessButtonID,
				@IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 1, 1, @ButtonCompanyID);
		END
		ELSE
		BEGIN
			IF @IN_IsDelete = 1
			BEGIN
				UPDATE FormButtonConfig SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime, DeletedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END
			ELSE
			BEGIN
				UPDATE FormButtonConfig SET ButtonType = @IN_ButtonType, TypeValues = @IN_ButtonName, Details = @IN_ButtonEvent, ImagePath = @IN_ButtonIcon, MenuCategory = @IN_MenuCategory, 
						ButtonKeyColumn = @IN_ButtonKeyColumn, AvailableStatus = @IN_ButtonStatus, ProcessButtonTypeID = @IN_ProcessButtonType, ButtonCategory = @IN_ButtonCategory, 
						VisibleTabs = @VisibleTabs, DisableTabs = @DisableTabs, ButtonTriggerEvent = @IN_TriggerEvent, IsMultipleApproval = @IN_IsMultipleApprove, IsDml = @IN_IsDml, OrderBy = @IN_Order, 
						ReqOldRefID = @IN_ReqOldRefID, ClearControls = @IN_ClearControls, ClearColumns = @IN_ClearColumns, AutoClose = @IN_AutoClose,
						IsMobile = @IN_IsMobile, IsAudit = @In_IsAudit, BuiltProcessButtonID = @IN_BuiltProcessButtonID, ModifiedBy = @IN_UserID,  ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END
		END
		IF @IN_ReqOldRefID = 1 AND NOT EXISTS (SELECT 1 FROM FormControlConfig WHERE FormID = @IN_ConfigID AND IsOldRefColumn = 1
			AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1)
		BEGIN
			SELECT TOP 1 @TabID = CC.TabID, @GroupID = CC.GroupID, @IN_Order = CC.ControlOrder 
			FROM FormControlConfig CC
				JOIN FormGroupboxConfig GB ON GB.ReferenceID = CC.GroupID AND GB.FormID = CC.FormID
					AND GB.IsDeleted = 0 AND GB.NotActive = 0 AND GB.IsCurrentVersion = 1
				JOIN FormTabConfig TB ON TB.ReferenceID = CC.TabID AND TB.ReferenceID = GB.TabID AND TB.FormID = CC.FormID
					AND TB.IsDeleted = 0 AND TB.NotActive = 0 AND TB.IsCurrentVersion = 1
			WHERE CC.FormID = @IN_ConfigID AND CC.IsIdentity = 1 AND ISNULL(CC.ButtonID, 0) = 0
				AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1
			ORDER BY TB.TabOrder, GB.GroupOrder, CC.ControlOrder;

			IF @TabID <> 0 AND @GroupID <> 0
			BEGIN
				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, 
					IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, 
					IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, 
					AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnCreation, ControlOrder, IsOldRefColumn, CompanyID, OrderBy, 
					Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, 'OldRefID', 'OldRefID', 1, 2, 0, 1, 0, 1, 1, -1, '', '', 0, 0, '', '', 0, 
					0, 1, 0, 1, 0, 0, 0, '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, ISNULL(@IN_Order, 0) + 1, 1,
					@ButtonCompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;
			END
		END

		SELECT @ButtonID = ReferenceID FROM FormButtonConfig WHERE TypeValues = @IN_ButtonName AND FormID = @IN_ConfigID AND IsDeleted = 0;
			
		IF @IN_ButtonType = 5 AND ISNULL(@ButtonID, 0) <> 0 AND @IN_IsDelete = 0
		BEGIN
			SET @TabID = 0;
			SET @GroupID = 0;
			SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
			SELECT @GroupID = ReferenceID FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
			
			
			SELECT @Max = COUNT(1) FROM FormBuildInProcessControls WHERE ProcessID = @IN_BuiltProcessButtonID AND IsDeleted = 0 AND IsCurrentVersion = 1 AND NotActive = 0;


			IF OBJECT_ID('tempdb..#temp_tables') IS NOT NULL
				DROP TABLE #temp_tables

			SELECT  ROW_NUMBER() OVER (ORDER BY OrderBy) AS RowNum, ControlTypeID, ControlName, ColumnName, DataTypeID, IsIdentity, IsVisibility
			INTO #temp_tables
			FROM FormBuildInProcessControls 
			WHERE ProcessID = @IN_BuiltProcessButtonID AND IsDeleted = 0 AND IsCurrentVersion = 1 AND NotActive = 0;
				
			--SELECT @ProcessCategory = Category, @ProcessDescription = Description
			--FROM CmnCodeMaster CM 
			--WHERE CM.Type= 'Built In process Buttons' AND CM.ReferenceID = @IN_BuiltProcessButtonID 
			--	AND CM.IsDeleted = 0 AND CM.IsCurrentVersion = 1 AND CM.NotActive = 0;

			IF ISNULL(@TabID, 0) = 0
			BEGIN      
				SET @TabOrder = ISNULL((SELECT MAX(TabOrder)+1 FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0), 1);

				INSERT INTO FormTabConfig (FormID, Name, DisplayName, IsMandatory, TableName, KeyColumn, TabOrder, ButtonID, IsMobile, OrderBy, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
				VALUES (@IN_ConfigID, ('Process '+ @IN_ButtonName), ('Process '+ @IN_ButtonName), 1, '', '', @TabOrder, @ButtonID, @IN_IsMobile,
					@TabOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @ButtonCompanyID);
				
				SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;			
			END
			ELSE
			BEGIN
				UPDATE FormTabConfig SET Name = ('Process '+ @IN_ButtonName), DisplayName = ('Process '+ @IN_ButtonName),
					IsMobile = @IN_IsMobile, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime
				WHERE ReferenceID = @TabID AND FormID = @IN_ConfigID;
			END 

			IF ISNULL(@GroupID, 0) = 0
			BEGIN      
				SET @GroupOrder = ISNULL((SELECT MAX(GroupOrder)+1 FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0), 1);

				INSERT INTO FormGroupboxConfig (FormID, TabID, Name, DisplayName, CommonGroup, TableName, KeyColumn, GroupOrder, ButtonID,  IsMobile, OrderBy, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
				VALUES (@IN_ConfigID, @TabID, ('Process '+ @IN_ButtonName), ('Process '+ @IN_ButtonName), 0, '', '', @GroupOrder, @ButtonID, @IN_IsMobile,
					@GroupOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @ButtonCompanyID);

				SELECT @GroupID = ReferenceID FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
			END
			ELSE
			BEGIN
				UPDATE FormGroupboxConfig SET TabID = @TabID, Name = ('Process '+ @IN_ButtonName), DisplayName = ('Process '+ @IN_ButtonName),
					IsMobile = @IN_IsMobile, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime
				WHERE ReferenceID = @GroupID AND FormID = @IN_ConfigID;
			END 
			IF (ISNULL(@IN_BuiltProcessButtonID, 0) <> 0)
			BEGIN
				IF NOT EXISTS (SELECT 1 FROM FormControlConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0) 
				BEGIN
					WHILE(@Min <= @Max)
					BEGIN
						INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ButtonID, Description, MaxRange, Datavariable, ColumnCreation, DateDifference, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				
						SELECT @IN_ConfigID, @TabID, @GroupID, TT.ControlName, TT.ColumnName, TT.ControlTypeID, TT.DataTypeID, TT.IsVisibility, 0, 0, 1, 1, -1, '', '', 0, 0, '', '',
							CASE WHEN TT.ColumnName  = 'ReferenceID' THEN 1 ELSE 0 END, '0', 0, 0, 1, 0, 0, 0, '', '', '', '', 
							CASE WHEN TT.ColumnName LIKE '%Date' THEN 'CMNF.fillCurrentDate('''' + CMNF.getControlIdByType('''+ @IN_ButtonName + @IN_ButtonName + 'Date'', 4) + '''')'
								WHEN TT.ColumnName LIKE '%ByID' THEN 'CMNF.fillDefaultUser('''' + CMNF.getControlIdByType('''+ @IN_ButtonName + @IN_ButtonName + 'ByID'', 2) + '''')' ELSE '' END,
							0, 0, 0, 0, 0, 0, 0, 0, 0, @Min, @ButtonID, '', '', 0, 0, NULL, @ButtonCompanyID, (SELECT (MAX(OrderBy) + 1) FROM FormControlConfig), 1, 1, 0, 0, @IN_UserID,
							@UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
						FROM #temp_tables TT WHERE RowNum = @Min;
				
						SET @Min = @Min + 1;
					END
				END
			END
		END 

		--IF @IN_ButtonKeyColumn <> ''
		--BEGIN
		--	SELECT @TableName = TableName, @SourceID = Source FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
		--	SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND --COLUMN_NAME = @IN_ButtonKeyColumn;
            
		--	IF @ColumnCount = 0 AND ISNULL(@SourceID, 0) = 1
		--	BEGIN
		--		SET @AlterColumnQuery = ('ALTER TABLE '+ @TableName+' ADD '+ @IN_ButtonKeyColumn+' INT NOT NULL DEFAULT 0');

		--		EXEC (@AlterColumnQuery);                    
		--	END 
		--END
		
		COMMIT TRANSACTION tran_ButtonConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_ButtonConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveDefaultControl]'
GO

CREATE PROCEDURE [dbo].[spSaveDefaultControl](@IN_Event VARCHAR(10), @IN_FormFlag INT, @IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_ControlConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@OrderBy INT = 0,
				@TabID INT = 0,
				@FormType INT = 0,
				@Title NVARCHAR(500) = '',
				@TableName NVARCHAR(500) = '',
				@KeyColumn NVARCHAR(500) = '',
				@CommonTabID INT = 0,
				@CommonGroupID INT = 0,
				@GroupID INT = 0,
				@ControlCount INT = 0,
				@GroupboxName NVARCHAR(500) = '',
				@TabTableColumn VARCHAR(100) = '',
				@TabTableName VARCHAR(100) = '',
				@TabKeyColumn VARCHAR(100) = '',
				@SCount INT = 0,
				@TabCount INT = 0,
				@TabMin INT = 0,
				@TableCount INT = 0,
				@DataType VARCHAR(100) = '',
				@CreateTableQuery NVARCHAR(MAX) = '',
				@ControlID BIGINT = 0,
				@ColumnID BIGINT = 0,
				@GridPropCount INT = 0,
				@ControlList NVARCHAR(MAX) = '',
				@ColumnCount INT = 0

		SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
		WHERE UD.UserID = @IN_UserID;

		IF @CompanyID = 0
			SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID), 0);

		SELECT @FormType = FormType, @Title = Title, @TableName = TableName, @KeyColumn = KeyColumn FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
		SET @TabID = ISNULL((SELECT TOP 1 ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND TabOrder = 1 AND IsDeleted = 0), 0);
	
		--IF @IN_FormFlag = 1 OR @IN_Event = 'add'
		--BEGIN    			
			IF @FormType = 2
			BEGIN
				SELECT @GroupID = ReferenceID, @GroupboxName = Name FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND GroupOrder = 1 AND TabID = @TabID AND IsDeleted = 0;  
			END
			ELSE
			BEGIN
				SELECT @GroupID = ReferenceID, @GroupboxName = Name FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND CommonGroup = 1 AND TabID = @TabID AND IsDeleted = 0;  
			END  
			SET @ControlCount = (SELECT COUNT(1) FROM FormControlConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupID = @GroupID AND IsDeleted = 0);
		
			IF @ControlCount = 0
			BEGIN
				IF @FormType = 2
				BEGIN
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 1, 1, 2, 1, 1, 0, '-1', 0, 0, 0, '', '', 0, '', 0, '', '', '', '', '', 0, 0, 0, 0, 0, 0,
						  1, 0, 1, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);
				END
				IF @FormType = 1 OR @FormType = 5
				BEGIN
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 1, 18, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search(),STP.selectListBox()', '', 1, '', 2, @TableName, @KeyColumn, @KeyColumn, '', '', 4, 1, 1, 1, 0, 0,
							1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);
				END
				ELSE IF @FormType IN (3, 9, 10, 13)
				BEGIN
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @Title, @KeyColumn, 1, 19, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search()', '', 1, '', 2, @TableName, @KeyColumn, @KeyColumn, '', '', 4, 1, 1, 1, 0, 0,
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);

					SET @ControlID = (SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupID AND Name = @Title AND TableColumn = @KeyColumn AND ControlType = 19 AND IsDeleted = 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND PropertyName = 'Grid Header' AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Header', @Title, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Access Type', 1, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END
				END
				ELSE IF @FormType = 4
				BEGIN
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 1, 18, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search(),STP.selectListBox()', '', 1, '', 0, '', '', '', '', '', 4, 1, 1, 1, 0, 0, 
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);
        
					SELECT @GroupID = ReferenceID, @GroupboxName = Name FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupOrder = 2 AND IsDeleted = 0;
  
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 2, 19, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search()', '', 0, '', 2, @TableName, @KeyColumn, @KeyColumn, 'ParentID', '', 4, 1, 1, 1, 0, 0, 
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 2);

					SET @ControlID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupID AND Name = @GroupboxName AND TableColumn = @KeyColumn AND ControlType = 19 AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND PropertyName = 'Grid Header' AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Header', @GroupboxName, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Access Type', 1, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END
				END
				ELSE IF @FormType = 11
				BEGIN
					-- Survey List Control
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 1, 19, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search()', '', 1, '', 2, '', @KeyColumn, @KeyColumn, 'UserID = @UserID', '', 4, 1, 1, 1, 0, 0,
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);

					SET @ControlID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupID AND Name = @GroupboxName AND TableColumn = @KeyColumn AND ControlType = 19 AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND PropertyName = 'Grid Header' AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Header', @Title, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Access Type', 1, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Setup', 'CMNF.loadJs(''/assets/javascripts/MasterPages/ExamForm.js'', typeof SURVEY);', '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END

					SET @ColumnCount = ISNULL((SELECT COUNT(1) FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND IsDeleted = 0), 0);

					IF @ColumnCount = 0
					BEGIN
						SET @ControlList = 'Survey ID,ReferenceID,1,1,1#Name,Name,9,0,2#Is Randomise,IsRandomise,3,0,3#Start Date,StartDate,4,0,4#End Date,EndDate,4,0,5#Instructions,Instructions,9,0,6#Quest. per Page,QuestionsPerPage,2,0,7#No. Of Quest.,NoOfQuestions,2,0,8#Is Mandatory,IsMandatory,3,0,9#Back Allowed,BackAllowed,3,0,10#Skip Allowed,SkipAllowed,3,0,11#Duration,Duration,2,0,12#Time Validation,TimeValidation,2,0,13#Auto Save,AutoSave,3,0,14#TypeID,TypeID,2,0,15#UserID,UserID,2,0,16';

						INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
						SELECT @IN_ConfigID, @TabID, @GroupID, @ControlID, dbo.fn_SplitString(CL.items, ',', 1), dbo.fn_SplitString(CL.items, ',', 2), '', '', 20, 
							dbo.fn_SplitString(CL.items, ',', 3), CASE WHEN dbo.fn_SplitString(CL.items, ',', 2) IN ('TypeID', 'UserID', 'ReferenceID', 'Instructions', 'IsMandatory', 'BackAllowed', 'SkipAllowed', 'TimeValidation', 'AutoSave') THEN 0 ELSE 1 END, 
							0, 0, 1, 1, -1, '', '', 0, 0, '', '', dbo.fn_SplitString(CL.items, ',', 4),
							0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, dbo.fn_SplitString(CL.items, ',', 5), 
							0, @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
						FROM dbo.fn_DataSplit(@ControlList, '#') CL
					END

					-- Question List Control
					SELECT @GroupID = ReferenceID, @GroupboxName = Name FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupOrder = 2 AND IsDeleted = 0;
  
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 2, 19, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search()', '', 0, '', 2, '', @KeyColumn, @KeyColumn, 'SurveyID', '', 4, 1, 1, 1, 0, 0, 
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 2);

					SET @ControlID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupID AND Name = @GroupboxName AND TableColumn = @KeyColumn AND ControlType = 19 AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND PropertyName = 'Grid Header' AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Header', @GroupboxName, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Access Type', 1, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END

					SET @ColumnCount = ISNULL((SELECT COUNT(1) FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND IsDeleted = 0), 0);

					IF @ColumnCount = 0
					BEGIN
						SET @ControlList = 'Question ID,ReferenceID,1,1,1#Question,Question,9,0,2#Is Mandatory,IsMandatory,3,0,3#Question Type,QuestionType,2,0,4#Options,Options,9,0,5#Question No.,QuestionNo,2,0,6#SurveyID,SurveyID,2,0,7#UserID,UserID,2,0,8';

						INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, 
							DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
							MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
							FkType, FkTable, FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete,
							FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
						SELECT @IN_ConfigID, @TabID, @GroupID, @ControlID, dbo.fn_SplitString(CL.items, ',', 1), dbo.fn_SplitString(CL.items, ',', 2), '', '', 20, 
							dbo.fn_SplitString(CL.items, ',', 3), CASE WHEN dbo.fn_SplitString(CL.items, ',', 2) IN ('SurveyID', 'UserID', 'ReferenceID', 'IsMandatory', 'QuestionType') THEN 0 ELSE 1 END, 
							0, 0, 1, 1, -1, '', '', 0, 0, '', '', dbo.fn_SplitString(CL.items, ',', 4),
							0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, dbo.fn_SplitString(CL.items, ',', 5), 
							0, @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
						FROM dbo.fn_DataSplit(@ControlList, '#') CL
					END
				END
				ELSE IF @FormType = 12
				BEGIN
					-- Attendance Planner Grid Control
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 1, 19, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search()', '', 1, '', 2, '', @KeyColumn, @KeyColumn, '', '', 4, 1, 1, 1, 0, 0,
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);

					SET @ControlID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupID AND Name = @GroupboxName AND TableColumn = @KeyColumn AND ControlType = 19 AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND PropertyName = 'Grid Header' AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Header', @GroupboxName, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Access Type', 1, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Type', 0, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Calendar Type', 'Monthly', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END

					-- Attendance Detail Grid Control
					SELECT @GroupID = ReferenceID, @GroupboxName = Name FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupOrder = 2 AND IsDeleted = 0;

					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, MaxLength, VersionCheck, SelectApplicable, IsEncrypt, Events,
						ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, ButtonID,
						IsMobile, IsWizard, IsIdentity, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @GroupboxName, @KeyColumn, 1, 19, 2, 1, 0, 0, '-1', 0, 0, 0, 'STP.search()', '', 0, '', 2, @TableName, @KeyColumn, @KeyColumn, '', '', 4, 1, 1, 1, 0, 0,
						1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);

					SET @ControlID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupID AND Name = @GroupboxName AND TableColumn = @KeyColumn AND ControlType = 19 AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND PropertyName = 'Grid Header' AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Header', @GroupboxName, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Access Type', 1, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, PropertyType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Grid Type', 0, '', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;

						INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ControlID, 'Control', 'Attendance Control', '1', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END
  
					INSERT INTO FormControlColumnsConfig(FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
						ColumnOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, ColumnWidth, UniqueGroup,
						MaxLength, VersionCheck, SelectApplicable, Events, ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, 
						FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive,
						IsMobile, IsWizard, IsIdentity, IsDmlControl, ColumnCreation, IsIndex, 
						CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @ControlID, @KeyColumn, @KeyColumn, '', '', 1, 1, 1, 1, 1, 0, '100', '', -1, 0, 0, '', '', 0, '', 0, '', '', '', '', '', 
						0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 1);

					INSERT INTO FormControlColumnsConfig(FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2,
						ColumnOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, ColumnWidth, UniqueGroup,
						MaxLength, VersionCheck, SelectApplicable, Events, ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, 
						FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive,
						IsMobile, IsWizard, IsIdentity, IsDmlControl, ColumnCreation, IsIndex, 
						CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @ControlID, 'ParentID', 'ParentID', '', '', 2, 1, 1, 1, 1, 0, '100', '', -1, 0, 0, '', '', 0, '', 0, '', '', '', '', '', 
						0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 2);

					SET @ColumnID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND ColumnName = 'ParentID' AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormAdditionalPropertyConfig WHERE FormID = @IN_ConfigID AND Type = 'Column' AND ControlID = @ColumnID AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ColumnID, 'Column', 'ParentID Column', 1, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END

					INSERT INTO FormControlColumnsConfig(FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2,
						ColumnOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, ColumnWidth, UniqueGroup,
						MaxLength, VersionCheck, SelectApplicable, Events, ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, 
						FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive,
						IsMobile, IsWizard, IsIdentity, IsDmlControl, ColumnCreation, IsIndex, 
						CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @ControlID, 'Attendance Date', 'AttendanceDate', '', '', 3, 4, 4, 0, 1, 0, '100', '', -1, 0, 0, '', '', 0, '', 0, '', '', '', '', '', 
						0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 3);

					SET @ColumnID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND ColumnName = 'AttendanceDate' AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormAdditionalPropertyConfig WHERE FormID = @IN_ConfigID AND Type = 'Column' AND ControlID = @ColumnID AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ColumnID, 'Column', 'Date Column', 1, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END

					INSERT INTO FormControlColumnsConfig(FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2,
						ColumnOrder, ControlType, DataType, Visibility, ReadOnly, IsMandatory, ColumnWidth, UniqueGroup,
						MaxLength, VersionCheck, SelectApplicable, Events, ValidationEvent, SearchApplicable, DefaultValue, FkType, FKTable, 
						FKColumn, FKData, AdditionalConditions, FillEvent, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive,
						IsMobile, IsWizard, IsIdentity, IsDmlControl, ColumnCreation, IsIndex, 
						CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, CompanyID, OrderBy)
					VALUES (@IN_ConfigID, @TabID, @GroupID, @ControlID, 'Attendance Status', 'StatusID', '', '', 4, 2, 2, 0, 1, 0, '100', '', -1, 0, 0, '', '', 0, '', 0, '', '', '', '', '', 
						0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, @CompanyID, 4);

					SET @ColumnID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND ColumnName = 'StatusID' AND IsDeleted = 0), 0);
					SET @GridPropCount = ISNULL((SELECT COUNT(1) FROM FormAdditionalPropertyConfig WHERE FormID = @IN_ConfigID AND Type = 'Column' AND ControlID = @ColumnID AND IsDeleted = 0), 0);
					
					IF @GridPropCount = 0 
					BEGIN
						INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
						SELECT @IN_ConfigID, @ColumnID, 'Column', 'Value Column', 1, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1;
					END
				END
			END
		-- END

			SET @SCount = 0;
			IF OBJECT_ID('tempdb..#tempTableList') IS NOT NULL
				DROP TABLE #tempTableList
			
			CREATE TABLE #tempTableList(    
				SNum INT NULL,
				TableName VARCHAR(100) NULL,
				KeyColumn VARCHAR(100) NULL
			);

			INSERT INTO #tempTableList (TableName, KeyColumn)
			SELECT DISTINCT(TableName), KeyColumn
			FROM FormTabConfig 
			WHERE FormID = @IN_ConfigID AND TableName <> '' AND IsDeleted = 0;

			UPDATE #tempTableList SET @SCount = SNum = @SCount + 1;
			SELECT @TabCount = COUNT(1) FROM #tempTableList;
			SET @TabMin = 0;  

			WHILE @TabCount > @TabMin
			BEGIN
				SET @TabMin = @TabMin + 1;
				SET @TableName = '';
				SELECT @TabTableName = TableName, @TabKeyColumn = KeyColumn FROM #tempTableList WHERE SNum = @TabMin;

				IF @TabTableName = @TableName AND @TabKeyColumn <> @KeyColumn AND @TabKeyColumn <> 'ReferenceID'
				BEGIN
					SET @TabKeyColumn = @KeyColumn;
				END
				SELECT @TableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @TabTableName;
				SELECT @DataType = DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @KeyColumn;
				
				IF @TableCount = 0
				BEGIN
					IF @TabKeyColumn = 'ReferenceID' 
					BEGIN
						SET @CreateTableQuery = 'CREATE TABLE '+ @TabTableName+ '('+ @TabKeyColumn+' BIGINT IDENTITY(1,1) NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
										NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
										DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
										[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_'+@TabTableName+'] PRIMARY KEY ('+@TabKeyColumn+' ASC)'
										+')';
					END
					ELSE
					BEGIN
						SET @CreateTableQuery = 'CREATE TABLE '+ @TabTableName+ '(ReferenceID BIGINT IDENTITY(1,1) NOT NULL, '+ @TabKeyColumn+' '+@DataType+' NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
										NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NNotActiveReason VARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
										DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, NDeleteReason VARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
										[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_'+@TabTableName+'] PRIMARY KEY (ReferenceID ASC)'
										+')';
					END

					EXEC (@CreateTableQuery);
				END
			END

		COMMIT TRANSACTION tran_ControlConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_ControlConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveFormAdditionalProperty]'
GO

CREATE PROCEDURE [dbo].[spSaveFormAdditionalProperty](@IN_ConfigID BIGINT, @IN_ControlID BIGINT, @IN_Type VARCHAR(10), @IN_PropertyID BIGINT, @IN_PropertyName VARCHAR(250), 
		@IN_PropertyValue NVARCHAR(2000), @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_PropertyConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@PropCount INT = 0,
				@CompanyID INT = 0

		SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID DESC), 0);

		SET @PropCount = (SELECT COUNT(1) FROM FormAdditionalPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @IN_ControlID AND PropertyName = @IN_PropertyName AND Type = @IN_Type AND IsDeleted = 0);

		IF @PropCount = 0
		BEGIN
			INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_ConfigID, @IN_ControlID, @IN_Type, @IN_PropertyName, @IN_PropertyValue, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		ELSE
		BEGIN
			UPDATE FormAdditionalPropertyConfig SET PropertyValue = @IN_PropertyValue, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime 
			WHERE FormID = @IN_ConfigID AND ControlID = @IN_ControlID AND PropertyName = @IN_PropertyName AND Type = @IN_Type AND ReferenceID = @IN_PropertyID;

		END

		UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_ConfigID;   

		
		COMMIT TRANSACTION tran_PropertyConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_PropertyConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveFormColumnProperty]'
GO

CREATE PROCEDURE [dbo].[spSaveFormColumnProperty](@IN_FormConfigID BIGINT, @IN_ColumnID BIGINT, @IN_Column1Table VARCHAR(100), @IN_Column1Parent VARCHAR(100), @IN_Column1Data VARCHAR(100), 
        @IN_Column1Type VARCHAR(10), @IN_Column2Table VARCHAR(100), @IN_Column2Parent VARCHAR(100), @IN_Column2Data VARCHAR(100), @IN_Column2Type VARCHAR(10), @IN_Column3Table VARCHAR(100),
        @IN_Column3Parent VARCHAR(100), @IN_Column3Data VARCHAR(100), @IN_Column3Type VARCHAR(10), @IN_Datasource VARCHAR(5), @IN_Condition VARCHAR(250), @IN_DSParentColumn VARCHAR(100), @IN_DSChildColumn VARCHAR(100),
        @IN_ChildCount INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_PropertyConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@ButtonID INT = 0,
				@GroupID INT = 0,
				@TabID INT = 0,
				@GroupOrder INT = 0,
				@TableName VARCHAR(100),
				@ColumnCount INT = 0,
				@AlterColumnQuery NVARCHAR(MAX),
				@Type VARCHAR(10) = 'Column',
				@Min INT = 0,
				@ControlID BIGINT = 0,
				@ChildColumnID BIGINT = 0,
				@PropertyCount INT = 0,
				@ColumnName VARCHAR(100) = ''

		SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID DESC), 0);
		UPDATE FormControlPropertyConfig SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ColumnID AND Type = 'Column' AND PropertyName <> 'DS Select All' AND ISNULL(PropertyType, '') = '';

		IF @IN_Column1Table <> ''
		BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Column1 Table', @IN_Column1Table, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
						(@IN_FormConfigID, @IN_ColumnID, @Type, 'Column1 Parent', @IN_Column1Parent, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 2),
						(@IN_FormConfigID, @IN_ColumnID, @Type, 'Column1 Data', @IN_Column1Data, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 3);
    
			IF @IN_Column1Type = 1
			BEGIN
			  INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Column1 Type', @IN_Column1Type, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 4);
			END
		 END

		  IF @IN_Column2Table <> ''
		  BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Column2 Table', @IN_Column2Table, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
						(@IN_FormConfigID, @IN_ColumnID, @Type, 'Column2 Parent', @IN_Column2Parent, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 2),
						(@IN_FormConfigID, @IN_ColumnID, @Type, 'Column2 Data', @IN_Column2Data, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 3);
    
			IF @IN_Column2Type = 1
			BEGIN
			  INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Column2 Type', @IN_Column2Type, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 4);
			END
		  END

		  IF @IN_Column3Table <> ''
		  BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Column3 Table', @IN_Column3Table, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
						(@IN_FormConfigID, @IN_ColumnID, @Type, 'Column3 Parent', @IN_Column3Parent, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 2),
						(@IN_FormConfigID, @IN_ColumnID, @Type, 'Column3 Data', @IN_Column3Data, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 3);
    
			IF @IN_Column3Type = 1
			BEGIN
			  INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Column3 Type', @IN_Column3Type, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 4);
			END
		  END

		  IF @IN_Condition <> ''
		  BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Condition', @IN_Condition, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		  END
  
		  IF @IN_DSParentColumn <> ''
		  BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'DS ParentColumn', @IN_DSParentColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		  
			IF @IN_DSChildColumn <> ''
			BEGIN
			  INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES (@IN_FormConfigID, @IN_ColumnID, @Type, 'DS ChildColumn', @IN_DSChildColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 2);

			  SET @Min = 0;
			  WHILE @IN_ChildCount > @Min
			  BEGIN     
				SET @ColumnName = dbo.fn_SplitString(@IN_DSChildColumn, ',', @IN_ChildCount -(@IN_ChildCount - @Min));
				SET @Min = @Min + 1;

				SELECT @ControlID = ControlID FROM FormControlColumnsConfig WHERE ReferenceID = @IN_ColumnID AND IsDeleted = 0;
				SELECT @ChildColumnID = ReferenceID FROM FormControlColumnsConfig WHERE ControlID = @ControlID AND ColumnName = @ColumnName AND IsDeleted = 0; 

				SELECT @PropertyCount = COUNT(1) FROM FormControlPropertyConfig WHERE ControlID = @ChildColumnID AND PropertyName = 'DS ParentColumn' AND IsDeleted = 0;
				IF @PropertyCount > 0
				BEGIN
				  UPDATE FormControlPropertyConfig SET PropertyValue = @IN_DSParentColumn WHERE ControlID = @ChildColumnID AND PropertyName = 'DS ParentColumn' AND IsDeleted = 0;
				END
				ELSE 
				BEGIN
				  INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					  VALUES  (@IN_FormConfigID, @ChildColumnID, @Type, 'DS ParentColumn', @IN_DSParentColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
				END

			  END
			END
		  END

		  IF @IN_Datasource = '0'
		  BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ColumnID, @Type, 'Datasource', @IN_Datasource, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		  END
  
		UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID; 
		
		COMMIT TRANSACTION tran_PropertyConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_PropertyConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveFormConfigData]'
GO

CREATE PROCEDURE [dbo].[spSaveFormConfigData](@IN_Event VARCHAR(10), @IN_FormFlag INT, @IN_ConfigID INT, @IN_FormName NVARCHAR(100), @IN_FormTitle NVARCHAR(100), 
    @IN_ModuleID INT, @IN_ParentMenu VARCHAR(100), @IN_ParentMenuOrder INT, @IN_MenuOrder INT, @IN_Source INT, @IN_TableName NVARCHAR(100), @IN_ViewName NVARCHAR(100),
    @IN_KeyColumn NVARCHAR(100), @IN_FormType INT, @IN_FormIcon VARCHAR(100), @IN_AuditTrail BIT, @IN_PageOrientation INT, @IN_Footer BIT, 
	@IN_IsWorkflow BIT, @IN_WorkflowID INT, @IN_BaseFormID INT, @IN_FormEvents NVARCHAR(MAX), @IN_IsMobileMenu BIT, @IN_IsOfflineSave BIT, @IN_IndustryIDs VARCHAR(MAX),
	@IN_Status INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY		
	
		BEGIN TRANSACTION tran_FormConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@OrderBy INT = 0,
				@FormType INT = 0,
				@TabID INT = 0,
				@TableCount INT = 0,
				@CreateTableQuery NVARCHAR(MAX),
				@ExistingKeyColumn VARCHAR(100),
				@ColumnCount INT,
				@AlterTableQuery NVARCHAR(MAX),
				@AutoIncrement NVARCHAR(MAX),
				@PrimaryKey VARCHAR(100)

		SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
		WHERE UD.UserID = @IN_UserID;

		IF @CompanyID = 0
			SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID), 0);

		SET @ExistingKeyColumn = ISNULL((SELECT TOP 1 KeyColumn FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0), '');

		IF @IN_FormFlag = 1
		BEGIN
			SELECT @FormType = FormType FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
			SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND TabOrder = 1 AND IsDeleted = 0;
    
			UPDATE FormTabConfig SET IsDeleted = 1, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE FormID = @IN_ConfigID AND DefaultTab = 1;
			UPDATE FormGroupboxConfig SET IsDeleted = 1, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE FormID = @IN_ConfigID AND DefaultGroupbox = 1;

			UPDATE FormControlConfig SET IsDeleted = 1, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime 
			WHERE FormID = @IN_ConfigID AND TabID = @TabID AND (((@FormType = 1 OR @FormType = 5) AND ControlType = 18) OR (@FormType = 3 AND ControlType = 19) OR (@FormType = 4 AND (ControlType = 18 OR ControlType = 19)));
		END

		IF @IN_Event = 'add'
		BEGIN
			SET @OrderBy = (ISNULL((SELECT COUNT(1) FROM FormConfiguration WHERE IsDeleted = 0), 1));
    
			INSERT INTO FormConfiguration (Name, Title, ModuleID, ParentMenu, ParentMenuOrder, MenuOrder, Source, TableName, ViewName, 
				KeyColumn, FormType, FormIcon, AuditTrail, PageOrientation, [Status], Footer, IsWorkflow, WorkflowID, BaseFormID, FormEvents,
				IsMobileMenu, IsOfflineSave, IndustryIDs, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy) 
			VALUES (@IN_FormName, @IN_FormTitle, @IN_ModuleID, @IN_ParentMenu, @IN_ParentMenuOrder, @IN_MenuOrder, @IN_Source, @IN_TableName, 
				@IN_ViewName, @IN_KeyColumn, @IN_FormType, @IN_FormIcon, @IN_AuditTrail, @IN_PageOrientation, @IN_Status, @IN_Footer, 
				@IN_IsWorkflow, @IN_WorkflowID, @IN_BaseFormID, @IN_FormEvents, @IN_IsMobileMenu, @IN_IsOfflineSave, @IN_IndustryIDs,
				@CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @OrderBy);
    
			SET @IN_ConfigID = SCOPE_IDENTITY();
		END
		ELSE
		BEGIN
			UPDATE FormConfiguration SET Name = @IN_FormName, Title = @IN_FormTitle, ModuleID = @IN_ModuleID, ParentMenu = @IN_ParentMenu, 
				ParentMenuOrder = @IN_ParentMenuOrder, MenuOrder = @IN_MenuOrder, Source = @IN_Source, TableName = @IN_TableName, ViewName = @IN_ViewName, 
				KeyColumn = @IN_KeyColumn, FormType = @IN_FormType, FormIcon = @IN_FormIcon, AuditTrail = @IN_AuditTrail, PageOrientation = @IN_PageOrientation, 
				[Status] = @IN_Status, Footer = @IN_Footer, IsWorkflow = @IN_IsWorkflow, WorkflowID = @IN_WorkflowID, BaseFormID = @IN_BaseFormID,
				FormEvents = @IN_FormEvents, IsMobileMenu = @IN_IsMobileMenu, IsOfflineSave = @IN_IsOfflineSave, IndustryIDs = @IN_IndustryIDs, 
				ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime
			WHERE ReferenceID = @IN_ConfigID;
			
		END

		IF @IN_Source = 1
		BEGIN
			SELECT @TableCount = COUNT(1) FROM sys.objects WHERE TYPE IN (N'U') AND Name = @IN_TableName;
			SET @PrimaryKey = '';
			--IF @IN_KeyColumn <> 'ReferenceID'
			--BEGIN
			--  SET @PrimaryKey = (', '+ @IN_KeyColumn+ ' INT NOT NULL');
			--END

			IF @TableCount = 0
			BEGIN    
				SET @CreateTableQuery = 'CREATE TABLE '+ @IN_TableName+ '('+ @IN_KeyColumn + ' BIGINT IDENTITY(1,1) NOT NULL, CompanyID INT NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL,'+ 
										'ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,'+
										'NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0,'+
										'DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1,'+
										'[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_'+@IN_TableName+'] PRIMARY KEY CLUSTERED ('+ @IN_KeyColumn + ' ASC))';

				EXEC (@CreateTableQuery);
			END 
			ELSE
			BEGIN
				SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @IN_TableName AND COLUMN_NAME = @IN_KeyColumn;
				IF @ColumnCount = 0
				BEGIN
				  SET @AlterTableQuery = ('ALTER TABLE '+ @IN_TableName+' ADD '+@IN_KeyColumn+' INT NOT NULL');

				  EXEC (@AlterTableQuery);
				END
			END
		END

		SELECT @IN_ConfigID;

		COMMIT TRANSACTION tran_FormConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_FormConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveFormControlProperty]'
GO

CREATE PROCEDURE [dbo].[spSaveFormControlProperty](@IN_FormConfigID BIGINT, @IN_ControlID BIGINT, @IN_ControlType INT, @IN_GridHeader NVARCHAR(500), @IN_GridType VARCHAR(25), 
		@IN_GridAccessType VARCHAR(25), @IN_GridPageSize VARCHAR(50), @IN_GridRowEvent VARCHAR(1000), @IN_GridDmlEvent VARCHAR(1000), @IN_GridOrderBy VARCHAR(250), @IN_GridFillName NVARCHAR(500), 
		@IN_GridDmlName NVARCHAR(500), @IN_FKParentColumn NVARCHAR(MAX), @IN_FKParentGrid VARCHAR(150), @IN_GridOrderByColumn VARCHAR(500), @IN_GridSetup VARCHAR(1000), 
        @IN_GridDmlType VARCHAR(25), @IN_TreePageSize VARCHAR(50), @IN_TreeType VARCHAR(25), @IN_AttachmentType VARCHAR(250), 
		@IN_UploadingCount VARCHAR(10), @IN_LabelHeader VARCHAR(25), @IN_LabelHeight VARCHAR(250), @IN_MultiLineType VARCHAR(25), @IN_MultilineHeight VARCHAR(250),
        @IN_MultilineWidth VARCHAR(250), @IN_CkEditorType VARCHAR(50), @IN_CkEditorHeader NVARCHAR(250), @IN_CkEditorHeight VARCHAR(250), @IN_CkEditorWidth VARCHAR(250),
        @IN_InputType VARCHAR(250), @IN_OnChange VARCHAR(10), @IN_ChildKey VARCHAR(100), @IN_ChildParent VARCHAR(100), @IN_ChildTable VARCHAR(100), @IN_FilePath VARCHAR(100),
		@IN_FilterBy VARCHAR(100), @IN_FilterKey VARCHAR(100), @IN_FilterTable VARCHAR(100), @IN_FilterUniqueKey VARCHAR(100),
		@IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_PropertyConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@ButtonID INT = 0,
				@GroupID INT = 0,
				@TabID INT = 0,
				@GroupOrder INT = 0,
				@TableName VARCHAR(100),
				@ColumnCount INT = 0,
				@AlterColumnQuery NVARCHAR(MAX),
				@Type VARCHAR(10) = 'Control',
				@ParentGrid NVARCHAR(500) = ''

		SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID DESC), 0);
		UPDATE FormControlPropertyConfig SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime WHERE FormID = @IN_FormConfigID AND ControlID = @IN_ControlID AND Type = 'Control' AND ISNULL(PropertyType, '') = '';

		IF @IN_ControlType = 18
		BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Page Size', @IN_TreePageSize, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Tree Type', @IN_TreeType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END

		IF @IN_ControlType = 19 OR @IN_ControlType = 24 OR @IN_ControlType = 25
		BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Grid Header', @IN_GridHeader, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
					(@IN_FormConfigID, @IN_ControlID, @Type, 'Grid Type', @IN_GridType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
					(@IN_FormConfigID, @IN_ControlID, @Type, 'Page Size', @IN_GridPageSize, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
					(@IN_FormConfigID, @IN_ControlID, @Type, 'Grid Access Type', @IN_GridAccessType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
					(@IN_FormConfigID, @IN_ControlID, @Type, 'Row Event', @IN_GridRowEvent, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);

			IF @IN_GridDmlEvent <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'DML Event', @IN_GridDmlEvent, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
			IF @IN_GridOrderBy <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Order By', @IN_GridOrderBy, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
			IF @IN_GridOrderByColumn <> ''
			BEGIN
			   INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				  VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Order By Column', @IN_GridOrderByColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
			IF @IN_GridFillName <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Fill Grid Control', @IN_GridFillName, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
			IF @IN_GridDmlName <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Dml Grid Control', @IN_GridDmlName, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
			IF @IN_GridSetup <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Setup', @IN_GridSetup, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
			IF @IN_GridDmlType <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
					VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Dml Type', @IN_GridDmlType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

			IF @IN_FKParentColumn <> ''
			BEGIN
			   INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				  VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Fk Parent Column', @IN_FKParentColumn, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
    
				SELECT @ParentGrid = FC.Name
				FROM FormControlConfig FC 
				WHERE FC.ReferenceID = @IN_FKParentGrid AND FC.FormID = @IN_FormConfigID AND FC.IsDeleted = 0;     
    
			   INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				  VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Fk Parent Grid', @ParentGrid, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
    
			END
		END
		ELSE IF (@IN_ControlType = 1 OR @IN_ControlType = 9) AND @IN_InputType <> ''
		BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			VALUES (@IN_FormConfigID, @IN_ControlID, @Type, 'Type', 'password', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		ELSE IF @IN_ControlType = 16
		BEGIN
			IF @IN_AttachmentType <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Type', @IN_AttachmentType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
    
			IF @IN_UploadingCount <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Uploading Count', @IN_UploadingCount, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
		END
		ELSE IF @IN_ControlType = 7
		BEGIN
			IF @IN_MultiLineType <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Type', @IN_MultiLineType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

			IF @IN_MultilineHeight <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Height', @IN_MultilineHeight, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

			IF @IN_MultilineWidth <> '' 
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Width', @IN_MultilineWidth, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END    
		END
		ELSE IF @IN_ControlType = 20
		BEGIN
			IF @IN_LabelHeader <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Type', @IN_LabelHeader, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);

				UPDATE FormControlConfig SET IsReturnFill = 0 WHERE ReferenceID = @IN_ControlID AND FormID = @IN_FormConfigID;
			END

			IF @IN_LabelHeight <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Height', @IN_LabelHeight, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END
		END
		ELSE IF @IN_ControlType = 27
		BEGIN
			IF @IN_CkEditorType <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'CKEditor Type', @IN_CkEditorType, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

			IF @IN_CkEditorHeader <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'CKEditor Header', @IN_CkEditorHeader, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

			IF @IN_CkEditorHeight <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Height', @IN_CkEditorHeight, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

			IF @IN_CkEditorWidth <> ''
			BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Width', @IN_CkEditorWidth, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
			END

		END

		IF @IN_OnChange <> ''
		BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'On Change', @IN_OnChange, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END 
		IF @IN_ChildKey <> ''
		BEGIN
			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Child Key', @IN_ChildKey, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_ChildParent <> ''
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Child Parent', @IN_ChildParent, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_ChildTable <> ''
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Child Table', @IN_ChildTable, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_FilePath <> '' 
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'File Path', @IN_FilePath, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_FilterBy <> ''
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Filter By', @IN_FilterBy, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_FilterKey <> ''
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Filter Key', @IN_FilterKey, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_FilterTable <> ''
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Filter Table', @IN_FilterTable, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
		IF @IN_FilterUniqueKey <> ''
		BEGIN
				INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
				VALUES  (@IN_FormConfigID, @IN_ControlID, @Type, 'Filter Unique Key', @IN_FilterUniqueKey, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END	
  
		UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime WHERE ReferenceID = @IN_FormConfigID; 
		
		COMMIT TRANSACTION tran_PropertyConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_PropertyConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveGroupboxConfigData]'
GO

CREATE PROCEDURE [dbo].[spSaveGroupboxConfigData](@IN_Event VARCHAR(10), @IN_FormFlag INT, @IN_ReferenceID INT, @IN_TabName NVARCHAR(100), @IN_Name NVARCHAR(100), @IN_DisplayName NVARCHAR(100), @IN_GroupOrder INT, 
      @IN_CommonGroup BIT, @IN_TableName VARCHAR(100), @IN_KeyColumn VARCHAR(100), @IN_AddCondition VARCHAR(250), @IN_DefaultGroupbox BIT, 
	  @IN_IsDelete BIT, @IN_ControlPerRow INT, @IN_IsMobile BIT, @IN_Description NVARCHAR(MAX), @IN_IsChildGroupBox BIT, @IN_ControlCount INT, @IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_GroupboxConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@OrderBy INT = 0,
				@TabID INT = 0,
				@FormType INT = 0,
				@TabOrder INT = 0,
				@FormTableName NVARCHAR(100),
				@TabTableName NVARCHAR(100),
				@FormKeyColumn NVARCHAR(100),
				@TabKeyColumn NVARCHAR(100),
				@ExistingKeyColumn NVARCHAR(100),
				@GroupOrderCount INT,
				@TableCount INT,
				@GroupboxID INT,
				@ParentTable NVARCHAR(100),
				@ParentKey NVARCHAR(100),
				@DataType NVARCHAR(100),
				@CreateTableQuery NVARCHAR(MAX),
				@AlterTableQuery NVARCHAR(MAX),
				@ColumnCount INT,
				@KeyPrimaryCount INT,
				@TabName NVARCHAR(100)

		SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
		WHERE UD.UserID = @IN_UserID;

		IF @CompanyID = 0
			SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), 0);
		SELECT @FormType = FormType, @FormTableName = TableName, @FormKeyColumn = KeyColumn FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
		  
		IF @IN_FormFlag = 1 AND @FormType <> 2 
		BEGIN
			SET @OrderBy = (ISNULL((SELECT COUNT(1) FROM FormGroupboxConfig WHERE IsDeleted = 0), 1));			
			SET @TabOrder = (SELECT MIN(TabOrder) FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0);
			SELECT TOP 1 @TabID = ReferenceID, @TabName = Name FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0 AND TabOrder = @TabOrder;

			--INSERT INTO FormGroupboxConfig (DefaultGroupbox, TabID, Name, DisplayName, GroupOrder, CommonGroup, TableName, KeyColumn, AddCondition, FormID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy) 
			--VALUES (1, @TabID, @TabName, @TabName, 1, 1, '', '', '', @IN_ConfigID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @OrderBy);

			--IF @FormType = 4 
			--BEGIN
			--	SET @TabName = ('Grid'+ @TabName);
			--	INSERT INTO FormGroupboxConfig (DefaultGroupbox, TabID, Name, DisplayName, GroupOrder, CommonGroup, TableName, KeyColumn, AddCondition, FormID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy) 
			--	VALUES (1, @TabID, 'Default Groupbox 2', 'Default Groupbox 2', 2, 0, '', '', '', @IN_ConfigID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, (@OrderBy+1));
			--END 
    
		END

		SELECT TOP 1 @TabID = ReferenceID, @TabOrder = TabOrder, @TabTableName = TableName, @TabKeyColumn = KeyColumn FROM FormTabConfig WHERE Name = @IN_TabName AND FormID = @IN_ConfigID AND IsDeleted = 0;

		SET @ExistingKeyColumn = ISNULL((SELECT TOP 1 KeyColumn FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND ReferenceID = @IN_ReferenceID AND IsDeleted = 0), '');

		IF @IN_GroupOrder = 0
		BEGIN   
			SET @IN_GroupOrder = ISNULL((SELECT MAX(GroupOrder) + 1 FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0), 1);
		END

		IF @IN_Event <> 'add' OR @FormType = 2
		BEGIN
			SET @IN_DefaultGroupbox = 0;
			SET @IN_CommonGroup = 0;
		END

		IF @IN_Event = 'add' OR ISNULL(@IN_ReferenceID, 0) = 0 
		BEGIN
			SET @OrderBy = (ISNULL((SELECT COUNT(1) FROM FormGroupboxConfig WHERE IsDeleted = 0 AND TabID = @TabID AND FormID = @IN_ConfigID), 1));
			SET @GroupOrderCount = (SELECT MAX(GroupOrder) + 1 FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupOrder = @IN_GroupOrder AND IsDeleted = 0);
			IF @GroupOrderCount > 0
			BEGIN
			  SET @IN_GroupOrder = ISNULL((SELECT MAX(GroupOrder) + 1 FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0), 1);
			END

			INSERT INTO FormGroupboxConfig (DefaultGroupbox, TabID, Name, DisplayName, GroupOrder, CommonGroup, TableName, KeyColumn, AddCondition, ControlPerRow,
				IsMobile, Description, IsChildGroupBox, ControlCount, FormID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy, CompanyID) 
			VALUES (@IN_DefaultGroupbox, @TabID, @IN_Name, @IN_DisplayName, @IN_GroupOrder, @IN_CommonGroup, @IN_TableName, @IN_KeyColumn, @IN_AddCondition,
				@IN_ControlPerRow, @IN_IsMobile, @IN_Description, @IN_IsChildGroupBox, @IN_ControlCount, @IN_ConfigID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @OrderBy, @CompanyID);
		END
		ELSE
		BEGIN
			IF @IN_IsDelete = 1
			BEGIN
				UPDATE FormGroupboxConfig SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime, DeletedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END
			ELSE
			BEGIN
				UPDATE FormGroupboxConfig SET TabID = @TabID, Name = @IN_Name, DisplayName = @IN_DisplayName, GroupOrder = @IN_GroupOrder, 
					TableName = @IN_TableName, KeyColumn = @IN_KeyColumn, AddCondition = @IN_AddCondition, ControlPerRow = @IN_ControlPerRow,
					IsMobile = @IN_IsMobile, Description = @IN_Description, IsChildGroupBox = @IN_IsChildGroupBox,	ControlCount = @IN_ControlCount, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END

		END

		IF ISNULL(@IN_TableName, '') <> '' AND @IN_IsDelete = 0
		BEGIN
			SELECT @TableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @IN_TableName;
			SELECT TOP 1 @GroupboxID = ReferenceID FROM FormGroupboxConfig WHERE Name = @IN_Name AND FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0;

			SET @ParentTable = '';
			SET @ParentKey = '';
			IF ISNULL(@TabTableName, '') <> ''
			BEGIN
			  SET @ParentTable = @TabTableName;
			END
			ELSE 
			BEGIN
			  SET @ParentTable = @FormTableName;

			  UPDATE FormTabConfig SET TableName = @FormTableName, KeyColumn = @FormKeyColumn WHERE ReferenceID = @TabID AND FormID = @IN_ConfigID;
			END

			IF ISNULL(@ParentTable, '') <> ''
			BEGIN
			  SELECT @ParentKey = Col.Column_Name FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col WHERE Col.Constraint_Name = Tab.Constraint_Name
									AND Col.Table_Name = Tab.Table_Name AND Constraint_Type = 'PRIMARY KEY' AND Col.Table_Name = @ParentTable
			END

			IF @IN_TableName = @ParentTable AND @IN_KeyColumn <> @ParentKey AND @IN_KeyColumn <> 'ReferenceID'
			BEGIN
			  SET @IN_KeyColumn = @ParentKey;

			  UPDATE FormGroupboxConfig SET KeyColumn = @IN_KeyColumn
			  WHERE ReferenceID = @GroupboxID;
			END

			SELECT @DataType = DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @ParentTable AND COLUMN_NAME = @ParentKey;
  
			IF @TableCount = 0
			BEGIN
				IF @IN_KeyColumn = 'ReferenceID' 
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE '+ @IN_TableName+ '('+ @IN_KeyColumn+' BIGINT IDENTITY(1,1) NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_'+@IN_TableName+'] PRIMARY KEY ('+@IN_KeyColumn+' ASC)'
									+')';

				END
				ELSE
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE '+ @IN_TableName+ '(ReferenceID BIGINT IDENTITY(1,1) NOT NULL, '+ @IN_KeyColumn+' '+@DataType+' NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT [PK_'+@IN_TableName+'] PRIMARY KEY (ReferenceID ASC)'
									+')';
				END

				EXEC (@CreateTableQuery);			  
			END
			ELSE
			BEGIN
			  SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @IN_TableName AND COLUMN_NAME = @IN_KeyColumn;
			  IF @ColumnCount = 0
			  BEGIN
					SET @AlterTableQuery = 'ALTER TABLE '+ @IN_TableName+ ' ADD '+ @IN_KeyColumn+ '  '+ @DataType+ ' NULL;'      
					EXEC (@AlterTableQuery);
			  END
			  ELSE IF @ExistingKeyColumn <> '' AND @ColumnCount = 0
			  BEGIN
					SELECT @KeyPrimaryCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @IN_TableName AND COLUMN_NAME = @IN_KeyColumn;
					IF @KeyPrimaryCount > 0
					BEGIN 
						SET @AlterTableQuery = ('ALTER TABLE '+ @IN_TableName+' DROP COLUMN '+@IN_KeyColumn);
						EXEC (@AlterTableQuery);
					END

					SET @AlterTableQuery = ('EXEC sp_rename '''+ @IN_TableName+'.'+ @ExistingKeyColumn+''', '''+ @IN_KeyColumn+''', ''COLUMN''');
					EXEC (@AlterTableQuery);
			  END
			END

		END

		COMMIT TRANSACTION tran_GroupboxConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_GroupboxConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveRearrangementData]'
GO
CREATE PROCEDURE [dbo].[spSaveRearrangementData](
	@IN_RearrangeType VARCHAR(100), 
	@IN_FromID BIGINT, 
	@IN_TOID BIGINT, 
	@IN_DataID BIGINT,
	@IN_ControlIndex INT,
	@IN_ConfigID BIGINT,
	@IN_UserID INT
)
AS
BEGIN
  SET NOCOUNT ON
  BEGIN TRY			
	BEGIN TRANSACTION tran_FormConfig	
			DECLARE @ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),			
					@TabID INT = 0,
					@GMTTime DATETIME, @UTCTime DATETIME,
					@GroupID BIGINT,
					@PasteTabID BIGINT = 0,
					@ButtonID BIGINT = 0,
					@SearchID BIGINT = 0,
					@RefID BIGINT = 0,
					@DualCount INT = 0,
					@ControlName NVARCHAR(200) = '',
					@ReferenceID BIGINT = 0,
					@DualNextID BIGINT = 0,
					@DualCurrentID BIGINT = 0;
			SET @GMTTime = dbo.fn_GMTCalculation(@IN_UserID);
			SET @UTCTime = GETUTCDATE();

			SELECT TOP 1 @TabID = TabID 
				FROM FormGroupboxConfig
				WHERE FormID = @IN_ConfigID  AND ReferenceID = @IN_TOID 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;	
			IF @IN_RearrangeType = 'MoveControl'
			BEGIN				
				SELECT @DualCount = COUNT(1), @ControlName = ISNULL(Name, '') FROM FormControlConfig
				WHERE FormID = @IN_ConfigID AND GroupID = @IN_FromID AND ReferenceID = @IN_DataID 
					AND ControlType IN (9, 10, 12, 13, 14, 15, 30, 31)
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1
				GROUP BY Name;

				IF (@DualCount > 0)
				BEGIN  
					SELECT @ReferenceID = ISNULL(ReferenceID, 0) FROM FormControlConfig WHERE FormID = @IN_ConfigID AND Name = @ControlName AND ReferenceID <> @IN_DataID AND IsDeleted = 0;
					
					SELECT TOP 1 @DualNextID = ISNULL(ReferenceID, 0) FROM FormControlConfig WHERE FormID = @IN_ConfigID AND Name = @ControlName AND IsDeleted = 0 order by ControlOrder asc;
					
					UPDATE FormControlConfig
					SET GroupID = @IN_TOID, TabID = @TabID, ControlOrder = (CASE WHEN @DualNextID = @IN_DataID THEN @IN_ControlIndex + 1 ELSE @IN_ControlIndex END)
					WHERE FormID = @IN_ConfigID AND GroupID = @IN_FromID AND ReferenceID = @ReferenceID AND Name = @ControlName
						AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
				END

				UPDATE FormControlConfig
				SET GroupID = @IN_TOID, TabID = @TabID, ControlOrder = (CASE WHEN @DualCount > 0 THEN (CASE WHEN @DualNextID <> @IN_DataID THEN @IN_ControlIndex + 1 ELSE @IN_ControlIndex END) ELSE @IN_ControlIndex END)
				WHERE FormID = @IN_ConfigID AND GroupID = @IN_FromID AND ReferenceID = @IN_DataID 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

				UPDATE FCC 
				SET FCC.ControlOrder = CASE WHEN @DualCount > 0 THEN ISNULL(FCC.ControlOrder, '') + 2 ELSE ISNULL(FCC.ControlOrder, '') + 1 END
				FROM FormControlConfig FCC					
				WHERE FCC.FormID = @IN_ConfigID AND FCC.GroupID = @IN_TOID AND ISNULL(FCC.ControlOrder, '') >= @IN_ControlIndex AND FCC.ReferenceID NOT IN (@IN_DataID, @ReferenceID)
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
			
				UPDATE FCC 
				SET FCC.GroupID = @IN_TOID, FCC.TabID = @TabID
				FROM FormControlColumnsConfig FCC
					JOIN FormControlConfig FC ON FC.ReferenceID = FCC.ControlID 
						AND (FC.ControlType IN (19, 24, 25) OR ISNULL(FC.DependentFlag, 0) = 1)
						AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
				WHERE FCC.FormID = @IN_ConfigID AND FCC.GroupID = @IN_FromID AND FCC.ControlID = @IN_DataID
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
			
				UPDATE GCC 
				SET GCC.GroupID = @IN_TOID, GCC.TabID = @TabID
				FROM FormGridControlColumnsConfig GCC
					JOIN FormControlColumnsConfig FCC ON FCC.ReferenceID = GCC.ColumnID 
						AND (FCC.ControlType IN (24, 25) OR ISNULL(FCC.DependentFlag, 0) = 1)
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
				WHERE GCC.FormID = @IN_ConfigID AND GCC.ColumnID = FCC.ReferenceID   
					AND GCC.IsDeleted = 0 AND GCC.NotActive = 0 AND GCC.IsCurrentVersion = 1;			
			END
			ELSE IF @IN_RearrangeType = 'MoveGroupbox'
			BEGIN
				UPDATE FormGroupboxConfig 
				SET TabID = @IN_TOID, GroupOrder = 	@IN_ControlIndex	
				WHERE FormID = @IN_ConfigID AND TabID = @IN_FromID  AND ReferenceID = @IN_DataID 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

				UPDATE FCC 
				SET FCC.GroupOrder = ISNULL(FCC.GroupOrder, '') + 1 
				FROM FormGroupboxConfig FCC					
				WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @IN_TOID AND ISNULL(FCC.GroupOrder, '') >= @IN_ControlIndex AND FCC.ReferenceID <> @IN_DataID
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;
			
				UPDATE FormControlConfig
				SET TabID = @IN_TOID		
				WHERE FormID = @IN_ConfigID AND TabID = @IN_FromID  AND GroupID = @IN_DataID 
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;

				UPDATE FCC 
				SET FCC.TabID = @IN_TOID
				FROM FormControlColumnsConfig FCC
					JOIN FormControlConfig FC ON FC.ReferenceID = FCC.ControlID 
						AND (FC.ControlType IN (19, 24, 25) OR ISNULL(FC.DependentFlag, 0) = 1)
						AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1
				WHERE FC.FormID = @IN_ConfigID AND FC.GroupID = @IN_DataID 
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;

				UPDATE GCC 
				SET GCC.TabID = @IN_TOID
				FROM FormGridControlColumnsConfig GCC
					JOIN FormControlColumnsConfig FCC ON FCC.ReferenceID = GCC.ColumnID 
						AND (FCC.ControlType IN (24, 25) OR ISNULL(FCC.DependentFlag, 0) = 1)
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
				WHERE FCC.FormID = @IN_ConfigID AND FCC.GroupID = @IN_DataID  
					AND GCC.IsDeleted = 0 AND GCC.NotActive = 0 AND GCC.IsCurrentVersion = 1;
			END
			ELSE IF @IN_RearrangeType = 'CopyGroupbox' 			
			BEGIN	
				IF ((SELECT ISNULL(ButtonId, 0) FROM FormGroupboxConfig WHERE ReferenceID = @IN_DataID) <> 0)
				BEGIN
					INSERT INTO FormButtonConfig (FormID, ButtonType, DisplayType, Type, TypeValues, Code, Description, Remarks, Category, 
						UserAccess, ImagePath, Details, MenuCategory, ButtonKeyColumn, AvailableStatus, ButtonTriggerEvent, ProcessButtonTypeID,
						ButtonCategory, VisibleTabs, DisableTabs, IsMultipleApproval, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy,
						ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, VersionID, IsCurrentVersion, ERPID, CompanyID, IsDml,
						ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile)
					SELECT @IN_ConfigID, FBC.ButtonType, FBC.DisplayType, FBC.Type, FBC.TypeValues, FBC.Code, FBC.Description, FBC.Remarks, FBC.Category, 
						FBC.UserAccess, FBC.ImagePath, FBC.Details, FBC.MenuCategory, FBC.ButtonKeyColumn, FBC.AvailableStatus, FBC.ButtonTriggerEvent,
						FBC.ProcessButtonTypeID, FBC.ButtonCategory, FBC.VisibleTabs, FBC.DisableTabs, FBC.IsMultipleApproval, @IN_UserID, @UTCTime,
						@GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormButtonConfig), 0) + 1, 1, 1, FBC.ERPID, 1, FBC.IsDml,
						FBC.ReqOldRefID, FBC.ClearControls, FBC.ClearColumns, FBC.AutoClose, 1
					FROM FormConfiguration FC 
						JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
							AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
						JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
							AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
						JOIN FormButtonConfig FBC ON FBC.ReferenceID = FGC.ButtonID AND FBC.FormID = FC.ReferenceID AND FBC.ButtonType = 5							
							AND FBC.IsDeleted = 0 AND FBC.NotActive = 0 AND FBC.IsCurrentVersion = 1						
					WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID
						AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

					SET @ButtonID = IDENT_CURRENT('FormButtonConfig');

					INSERT INTO FormTabConfig (FormID, Name, DisplayName, TabOrder, IsMandatory, TableName, KeyColumn, DefaultTab, ButtonID,
						AddCondition, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, 
						IsDeleted, OrderBy, Version, IsCurrentVersion, IsMobile) 
					SELECT @IN_ConfigID,  FTC.Name, FTC.DisplayName, (SELECT MAX(FTC.TabOrder) 
																		FROM FormConfiguration FC 
																			JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
																				AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1																			
																		WHERE FC.ReferenceID = @IN_ConfigID 
																			AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1) + 1, 
						FTC.IsMandatory, FTC.TableName, FTC.KeyColumn, FTC.DefaultTab, 
						CASE WHEN @ButtonID = 0 THEN FTC.ButtonID ELSE @ButtonID END, FTC.AddCondition, FTC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
						@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormTabConfig), 0) + 1, 1, 1, 1
					FROM FormConfiguration FC 
						JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
							AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
						JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
							AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID
						AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

					SET @PasteTabID = IDENT_CURRENT('FormTabConfig');
				END

				INSERT INTO FormGroupboxConfig (FormID, TabID, Name, DisplayName, GroupOrder, CommonGroup, TableName, KeyColumn, 
					DefaultGroupbox, ButtonID, AddCondition, CompanyID, CreatedBy, CreatedDate,	CreatedDateGMT, ModifiedBy, ModifiedDate, 
					ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion, IsMobile) 
				SELECT @IN_ConfigID, CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END, FGC.Name, FGC.DisplayName, @IN_ControlIndex, FGC.CommonGroup, FGC.TableName, FGC.KeyColumn, 
					FGC.DefaultGroupbox, CASE WHEN @ButtonID = 0 THEN FGC.ButtonID ELSE @ButtonID END, FGC.AddCondition, FGC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormGroupboxConfig), 0) + 1, 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				SET @GroupID = IDENT_CURRENT('FormGroupboxConfig');	

				UPDATE FCC 
				SET FCC.GroupOrder = ISNULL(FCC.GroupOrder, '') + 1 
				FROM FormGroupboxConfig FCC					
				WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END
					AND ISNULL(FCC.GroupOrder, '') >= @IN_ControlIndex AND FCC.ReferenceID <> @GroupID
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;

				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue,
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable,
					FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FillType,
					ButtonID, DependentFlag, DefaultControl, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, FilterConditions, FKData1, 
					FKData2, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ColumnCreation, IsOldRefColumn,
					DataVariable, IsAutoGenerate, IsSelectAll, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate,
					ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END, @GroupID, FCC.Name, FCC.TableColumn, FCC.ControlType, FCC.DataType, 
					FCC.Visibility, FCC.Readonly, FCC.IsMandatory, FCC.IsMobile, FCC.IsWizard, FCC.MaxLength, FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable,
					FCC.SelectApplicable, FCC.DefaultValue, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup, FCC.IsDmlControl, 
					FCC.IsEncrypt, FCC.IsReturnFill, FCC.IsNoAdd, FCC.IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData,
					FCC.AdditionalConditions, FCC.FillEvent, FCC.ControlEventType, FCC.ValidationEventType, FCC.FillEventType, 
					FCC.FillType,  CASE WHEN @ButtonID = 0 THEN FCC.ButtonID ELSE @ButtonID END, FCC.DependentFlag, FCC.DefaultControl, FCC.DecimalLength, FCC.IsCurrency, 
					FCC.CurrencyColumn, FCC.IsIndex, FCC.FilterConditions, FCC.FKData1, FCC.FKData2, FCC.FkOrder, FCC.FkDelete, 
					FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, FCC.ControlOrder, FCC.ColumnCreation, 
					FCC.IsOldRefColumn, FCC.DataVariable, FCC.IsAutoGenerate, FCC.IsSelectAll, FCC.CompanyID, @IN_UserID,
					@UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName,  
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, 
					ControlEventType, ValidationEventType, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity,  
					UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive,  
					FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength, IsCurrency, 
					CurrencyColumn, IsIndex, GridParentControl, FillEvent, DependentType, FKData1, FKData2, ColumnCreation, DataVariable, 
					IsAutoGenerate, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive,
					IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END, @GroupID, ISNULL((SELECT TOP 1 TT.ReferenceID FROM FormControlConfig TT
														  WHERE TT.FormID = @IN_ConfigID AND TT.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END 
															AND TT.GroupID = @GroupID AND TT.Name = FCC.Name AND TT.ControlType = FCC.ControlType
															AND TT.IsDeleted = 0 AND TT.NotActive = 0 AND TT.IsCurrentVersion = 1), 0), 
					CCC.ColumnName, CCC.ColumnName1, CCC.ColumnName2, CCC.DisplayName, CCC.ControlType, CCC.DataType, CCC.Visibility, CCC.Readonly, 
					CCC.IsMandatory, CCC.IsMobile, CCC.IsWizard, CCC.MaxLength, CCC.Events, CCC.ValidationEvent, CCC.ControlEventType, CCC.ValidationEventType,
					CCC.SearchApplicable, CCC.SelectApplicable, CCC.DefaultValue, CCC.AttachmentPath, CCC.IsIdentity, CCC.UniqueGroup, CCC.IsDmlControl, 
					CCC.FkType, CCC.FkTable, CCC.FkColumn, CCC.FkData, CCC.AdditionalConditions, CCC.FkOrder, CCC.FkDelete, CCC.FkNotActive, CCC.FkVersion, 
					CCC.FkShowActive, CCC.VersionCheck, CCC.ColumnOrder, CCC.DependentFlag, CCC.SelectAll, CCC.ColumnWidth, CCC.DecimalLength, CCC.IsCurrency, 
					CCC.CurrencyColumn, CCC.IsIndex, CCC.GridParentControl, CCC.FillEvent, CCC.DependentType, CCC.FKData1, CCC.FKData2, CCC.ColumnCreation, 
					CCC.DataVariable, CCC.IsAutoGenerate, CCC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 
					ISNULL((SELECT MAX(OrderBy) FROM FormControlColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, ColumnName, ColumnName1, ColumnName2, DisplayName, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, 
					ControlEventType, ValidationEventType, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, 
					UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, 
					FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength, IsCurrency, CurrencyColumn, 
					DependentType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive,
					IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END, @GroupID, 
					ISNULL((SELECT TOP 1 TT.ReferenceID FROM FormControlColumnsConfig TT 
							WHERE TT.FormID = @IN_ConfigID AND TT.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END 
							AND TT.GroupID = @GroupID AND TT.ColumnName = CCC.ColumnName
							AND TT.IsDeleted = 0 AND TT.NotActive = 0 AND TT.IsCurrentVersion = 1), 0), 
					GCC.ColumnName, GCC.ColumnName1, GCC.ColumnName2, GCC.DisplayName, GCC.ControlType, GCC.DataType, GCC.Visibility, GCC.Readonly,
					GCC.IsMandatory, GCC.IsMobile, GCC.IsWizard, GCC.MaxLength, GCC.Events, GCC.ValidationEvent, GCC.ControlEventType, GCC.ValidationEventType,
					GCC.SearchApplicable, GCC.SelectApplicable, GCC.DefaultValue, GCC.AttachmentPath, GCC.IsIdentity, GCC.UniqueGroup, GCC.IsDmlControl, 
					GCC.FkType, GCC.FkTable, GCC.FkColumn, GCC.FkData, GCC.AdditionalConditions, GCC.FkOrder, GCC.FkDelete, GCC.FkNotActive, GCC.FkVersion, 
					GCC.FkShowActive, GCC.VersionCheck, GCC.ColumnOrder, GCC.DependentFlag, GCC.SelectAll, GCC.ColumnWidth, GCC.DecimalLength, GCC.IsCurrency, 
					GCC.CurrencyColumn, GCC.DependentType, GCC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 
					ISNULL((SELECT MAX(OrderBy) FROM FormGridControlColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
					JOIN FormGridControlColumnsConfig GCC ON GCC.FormID = FC.ReferenceID AND GCC.TabID = FTC.ReferenceID
						AND GCC.GroupID = FGC.ReferenceID AND GCC.ColumnID = CCC.ReferenceID 
						AND GCC.IsDeleted = 0 AND GCC.NotActive = 0 AND GCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, PropertyName, PropertyValue, Type, PropertyType, CompanyID, CreatedBy, 
					CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END
										AND TC.GroupID = @GroupID AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0), 
					CPC.PropertyName, CPC.PropertyValue, CPC.Type, CPC.PropertyType, CPC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = FC.ReferenceID AND CPC.Type = 'Control' AND CPC.ControlID = FCC.ReferenceID 
						AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID  AND FGC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, PropertyName, PropertyValue, Type, PropertyType, CompanyID, CreatedBy, 
					CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TCC.ReferenceID FROM FormControlColumnsConfig TCC
										JOIN FormControlConfig TC ON TC.FormID = TCC.FormID AND TC.TabID = TCC.TabID AND TC.GroupID = TCC.GroupID
											AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType AND TC.ReferenceID = TCC.ControlID
											AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
									  WHERE TCC.FormID = @IN_ConfigID AND TCC.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END 
										AND TCC.GroupID = @GroupID AND TCC.DisplayName = CCC.DisplayName AND TCC.ControlType = CCC.ControlType
										AND TCC.IsDeleted = 0 AND TCC.NotActive = 0 AND TCC.IsCurrentVersion = 1), 0), 
					CPC.PropertyName, CPC.PropertyValue, CPC.Type, CPC.PropertyType, CPC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = FC.ReferenceID AND CPC.Type = 'Column' AND CPC.ControlID = CCC.ReferenceID 
						AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID  AND FGC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END 
										AND TC.GroupID = @GroupID AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0), APC.Type,
					APC.PropertyName, APC.PropertyValue, APC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 
					0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormAdditionalPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1	
					JOIN FormAdditionalPropertyConfig APC ON APC.FormID = FC.ReferenceID AND APC.Type = 'Control' AND APC.ControlID = FCC.ReferenceID 
						AND APC.IsDeleted = 0 AND APC.NotActive = 0 AND APC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, ISNULL((SELECT TOP 1 TCC.ReferenceID FROM FormControlColumnsConfig TCC
										JOIN FormControlConfig TC ON TC.FormID = TCC.FormID AND TC.TabID = TCC.TabID AND TC.GroupID = TCC.GroupID
											AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType AND TC.ReferenceID = TCC.ControlID
											AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
									  WHERE TCC.FormID = @IN_ConfigID AND TCC.TabID = CASE WHEN @PasteTabID = 0 THEN @IN_TOID ELSE @PasteTabID END 
										AND TCC.GroupID = @GroupID AND TCC.DisplayName = CCC.DisplayName AND TCC.ControlType = CCC.ControlType
										AND TCC.IsDeleted = 0 AND TCC.NotActive = 0 AND TCC.IsCurrentVersion = 1), 0), APC.Type,
					APC.PropertyName, APC.PropertyValue, APC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 
					0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormAdditionalPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1	
					JOIN FormAdditionalPropertyConfig APC ON APC.FormID = FC.ReferenceID AND APC.Type = 'Column' AND APC.ControlID = CCC.ReferenceID 
						AND APC.IsDeleted = 0 AND APC.NotActive = 0 AND APC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID AND FGC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

			END
			ELSE IF @IN_RearrangeType = 'CopyTab' 			
			BEGIN
				IF ((SELECT ISNULL(ButtonId, 0) FROM FormTabConfig WHERE ReferenceID = @IN_DataID) <> 0)
				BEGIN
					INSERT INTO FormButtonConfig (FormID, ButtonType, DisplayType, Type, TypeValues, Code, Description, Remarks, Category, 
						UserAccess, ImagePath, Details, MenuCategory, ButtonKeyColumn, AvailableStatus, ButtonTriggerEvent, ProcessButtonTypeID,
						ButtonCategory, VisibleTabs, DisableTabs, IsMultipleApproval, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy,
						ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, VersionID, IsCurrentVersion, ERPID, CompanyID, IsDml,
						ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile)
					SELECT @IN_ConfigID, FBC.ButtonType, FBC.DisplayType, FBC.Type, FBC.TypeValues, FBC.Code, FBC.Description, FBC.Remarks, FBC.Category, 
						FBC.UserAccess, FBC.ImagePath, FBC.Details, FBC.MenuCategory, FBC.ButtonKeyColumn, FBC.AvailableStatus, FBC.ButtonTriggerEvent,
						FBC.ProcessButtonTypeID, FBC.ButtonCategory, FBC.VisibleTabs, FBC.DisableTabs, FBC.IsMultipleApproval, @IN_UserID, @UTCTime,
						@GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormButtonConfig), 0) + 1, 1, 1, FBC.ERPID, 1, FBC.IsDml,
						FBC.ReqOldRefID, FBC.ClearControls, FBC.ClearColumns, FBC.AutoClose, 1
					FROM FormConfiguration FC 
						JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
							AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1						
						JOIN FormButtonConfig FBC ON FBC.ReferenceID = FTC.ButtonID AND FBC.FormID = FC.ReferenceID AND FBC.ButtonType = 5
							AND FBC.IsDeleted = 0 AND FBC.NotActive = 0 AND FBC.IsCurrentVersion = 1						
					WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

					SET @ButtonID = IDENT_CURRENT('FormButtonConfig');
				END
				INSERT INTO FormTabConfig (FormID, Name, DisplayName, TabOrder, IsMandatory, TableName, KeyColumn, DefaultTab, ButtonID,
					AddCondition, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, 
					IsDeleted, OrderBy, Version, IsCurrentVersion, IsMobile) 
				SELECT @IN_ConfigID,  FTC.Name, FTC.DisplayName, @IN_ControlIndex, FTC.IsMandatory, FTC.TableName, FTC.KeyColumn, FTC.DefaultTab, 
					CASE WHEN @ButtonID = 0 THEN FTC.ButtonID ELSE @ButtonID END, FTC.AddCondition, FTC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormTabConfig), 0) + 1, 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				SET @PasteTabID = IDENT_CURRENT('FormTabConfig');

				UPDATE FCC 
				SET FCC.TabOrder = ISNULL(FCC.TabOrder, '') + 1 
				FROM FormTabConfig FCC					
				WHERE FCC.FormID = @IN_ConfigID AND ISNULL(FCC.TabOrder, '') >= @IN_ControlIndex AND FCC.ReferenceID <> @PasteTabID
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;

				INSERT INTO FormGroupboxConfig (FormID, TabID, Name, DisplayName, GroupOrder, CommonGroup, TableName, KeyColumn, DefaultGroupbox, 
					ButtonID, AddCondition, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, 
					IsDeleted, OrderBy, Version, IsCurrentVersion, IsMobile) 
				SELECT @IN_ConfigID, @PasteTabID, FGC.Name, FGC.DisplayName, FGC.GroupOrder, FGC.CommonGroup, FGC.TableName, FGC.KeyColumn, 
					FGC.DefaultGroupbox, CASE WHEN @ButtonID = 0 THEN FGC.ButtonID ELSE @ButtonID END, FGC.AddCondition, FGC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormGroupboxConfig), 0) + 1, 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue,
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FillType, 
					ButtonID, DependentFlag, DefaultControl, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, FilterConditions, FKData1, 
					FKData2, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ColumnCreation, IsOldRefColumn,
					DataVariable, IsAutoGenerate, IsSelectAll, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, 
					ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @PasteTabID, ISNULL((SELECT TOP 1 GC.ReferenceID FROM FormGroupboxConfig GC 
														  WHERE GC.FormID = @IN_ConfigID AND GC.TabID = @PasteTabID AND GC.Name = FGC.Name
															AND GC.IsDeleted = 0 AND GC.NotActive = 0 AND GC.IsCurrentVersion = 1), 0), 
					FCC.Name, FCC.TableColumn, FCC.ControlType, FCC.DataType, FCC.Visibility, FCC.Readonly, FCC.IsMandatory, FCC.IsMobile, FCC.IsWizard, FCC.MaxLength,
					FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup,
					FCC.IsDmlControl, FCC.IsEncrypt, FCC.IsReturnFill, FCC.IsNoAdd, FCC.IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, 
					FCC.AdditionalConditions, FCC.FillEvent, FCC.ControlEventType, FCC.ValidationEventType, FCC.FillEventType, FCC.FillType, 
					CASE WHEN @ButtonID = 0 THEN FCC.ButtonID ELSE @ButtonID END, FCC.DependentFlag, FCC.DefaultControl, FCC.DecimalLength, FCC.IsCurrency,
					FCC.CurrencyColumn, FCC.IsIndex, FCC.FilterConditions, FCC.FKData1, FCC.FKData2, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, 
					FCC.FkShowActive, FCC.VersionCheck, FCC.ControlOrder, FCC.ColumnCreation, FCC.IsOldRefColumn, FCC.DataVariable, FCC.IsAutoGenerate, FCC.IsSelectAll,
					FCC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, 
					Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, ControlEventType, ValidationEventType, SearchApplicable, 
					SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions,
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength, 
					IsCurrency, CurrencyColumn, IsIndex, GridParentControl, FillEvent, DependentType, FKData1, FKData2, ColumnCreation, DataVariable, IsAutoGenerate,
					CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @PasteTabID, ISNULL((SELECT TOP 1 TT.ReferenceID FROM FormGroupboxConfig TT
														  WHERE TT.FormID = @IN_ConfigID AND TT.TabID = @PasteTabID AND TT.Name = FGC.Name
															AND TT.IsDeleted = 0 AND TT.NotActive = 0 AND TT.IsCurrentVersion = 1), 0),
					ISNULL((SELECT TOP 1 CC.ReferenceID FROM FormControlConfig CC
							WHERE CC.FormID = @IN_ConfigID AND CC.TabID = @PasteTabID  
								AND GroupID = ISNULL((SELECT TOP 1 GB.ReferenceID FROM FormGroupboxConfig GB
													   WHERE GB.FormID = @IN_ConfigID AND GB.TabID = @PasteTabID AND GB.Name = FGC.Name
														AND GB.IsDeleted = 0 AND GB.NotActive = 0 AND GB.IsCurrentVersion = 1), 0)
								AND CC.Name = FCC.Name AND ControlType = FCC.ControlType AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1), 0), 
					CCC.ColumnName, CCC.ColumnName1, CCC.ColumnName2, CCC.DisplayName, CCC.ControlType, CCC.DataType, CCC.Visibility, CCC.Readonly, CCC.IsMandatory, 
					CCC.IsMobile, CCC.IsWizard, CCC.MaxLength, CCC.Events, CCC.ValidationEvent, CCC.ControlEventType, CCC.ValidationEventType, CCC.SearchApplicable,
					CCC.SelectApplicable, CCC.DefaultValue, CCC.AttachmentPath, CCC.IsIdentity, CCC.UniqueGroup, CCC.IsDmlControl, CCC.FkType, CCC.FkTable,
					CCC.FkColumn, CCC.FkData, CCC.AdditionalConditions, CCC.FkOrder, CCC.FkDelete, CCC.FkNotActive, CCC.FkVersion, CCC.FkShowActive, CCC.VersionCheck,
					CCC.ColumnOrder, CCC.DependentFlag, CCC.SelectAll, CCC.ColumnWidth, CCC.DecimalLength, CCC.IsCurrency, CCC.CurrencyColumn, CCC.IsIndex, 
					CCC.GridParentControl, CCC.FillEvent, CCC.DependentType, CCC.FKData1, CCC.FKData2, CCC.ColumnCreation, CCC.DataVariable, CCC.IsAutoGenerate, 
					CCC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, ColumnName, ColumnName1, ColumnName2, DisplayName, ControlType, DataType, 
					Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, ControlEventType, ValidationEventType, SearchApplicable,
					SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, 
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength,
					IsCurrency, CurrencyColumn, DependentType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive,
					IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @PasteTabID, ISNULL((SELECT TOP 1 CC.ReferenceID FROM FormGroupboxConfig CC 
														  WHERE CC.FormID = @IN_ConfigID AND CC.TabID = @PasteTabID AND CC.Name = FGC.Name
															AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1), 0),
					ISNULL((SELECT TCC.ReferenceID FROM FormControlColumnsConfig TCC
							WHERE TCC.FormID = @IN_ConfigID AND TCC.TabID = @PasteTabID 
								AND GroupID = ISNULL((SELECT TOP 1 FF.ReferenceID FROM FormGroupboxConfig  FF
													   WHERE FF.FormID = @IN_ConfigID AND FF.TabID = @PasteTabID 
														  AND FF.Name = FGC.Name AND FF.IsDeleted = 0 AND FF.NotActive = 0 AND FF.IsCurrentVersion = 1), 0) 
						AND TCC.ColumnName = CCC.ColumnName AND TCC.ControlType = CCC.ControlType
						AND TCC.IsDeleted = 0 AND TCC.NotActive = 0 AND TCC.IsCurrentVersion = 1), 0),  
					GCC.ColumnName, GCC.ColumnName1, GCC.ColumnName2, GCC.DisplayName, GCC.ControlType, GCC.DataType, GCC.Visibility, GCC.Readonly, GCC.IsMandatory, GCC.IsMobile, GCC.IsWizard, 
					GCC.MaxLength, GCC.Events, GCC.ValidationEvent, GCC.ControlEventType, GCC.ValidationEventType, GCC.SearchApplicable, GCC.SelectApplicable, GCC.DefaultValue, GCC.AttachmentPath, GCC.IsIdentity,
					GCC.UniqueGroup, GCC.IsDmlControl, GCC.FkType, GCC.FkTable, GCC.FkColumn, GCC.FkData, GCC.AdditionalConditions, GCC.FkOrder, GCC.FkDelete, GCC.FkNotActive, GCC.FkVersion, 
					GCC.FkShowActive, GCC.VersionCheck, GCC.ColumnOrder, GCC.DependentFlag, GCC.SelectAll, GCC.ColumnWidth, GCC.DecimalLength, GCC.IsCurrency, GCC.CurrencyColumn, GCC.DependentType, GCC.CompanyID,
					@IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormGridControlColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
					JOIN FormGridControlColumnsConfig GCC ON GCC.FormID = FC.ReferenceID AND GCC.TabID = FTC.ReferenceID
						AND GCC.GroupID = FGC.ReferenceID AND GCC.ColumnID = CCC.ReferenceID 
						AND GCC.IsDeleted = 0 AND GCC.NotActive = 0 AND GCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, PropertyName, PropertyValue, Type, PropertyType, CompanyID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = @PasteTabID 
										AND TC.GroupID = ISNULL((SELECT TOP 1 CC.ReferenceID FROM FormGroupboxConfig CC
																  WHERE CC.FormID = @IN_ConfigID AND CC.TabID = @PasteTabID
																	AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1), 0)
										AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0),  
					CPC.PropertyName, CPC.PropertyValue, CPC.Type, CPC.PropertyType, CPC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime,
					0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1					
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = FC.ReferenceID AND CPC.Type = 'Control' AND CPC.ControlID = FCC.ReferenceID 
						AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1		
				WHERE FC.ReferenceID = @IN_FromID  AND FTC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, PropertyName, PropertyValue, Type, PropertyType, CompanyID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlColumnsConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = @PasteTabID 
										AND TC.GroupID = ISNULL((SELECT TOP 1 ReferenceID FROM FormGroupboxConfig CC
																 WHERE CC.FormID = @IN_ConfigID AND CC.TabID = @PasteTabID
																	AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1), 0)
										AND TC.DisplayName = CCC.DisplayName AND TC.ControlType = CCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0),
					CPC.PropertyName, CPC.PropertyValue, CPC.Type, CPC.PropertyType, CPC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime,
					0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = FC.ReferenceID AND CPC.Type = 'Column' AND CPC.ControlID = CCC.ReferenceID 
						AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1		
				WHERE FC.ReferenceID = @IN_FromID  AND FTC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;


				INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT,  
					ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = @PasteTabID
										AND TC.GroupID = ISNULL((SELECT TOP 1 CC.ReferenceID FROM FormGroupboxConfig CC
																 WHERE CC.FormID = @IN_ConfigID AND CC.TabID = @PasteTabID
																	AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1), 0)
										AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0), APC.Type,
					APC.PropertyName, APC.PropertyValue, APC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 
					ISNULL((SELECT MAX(OrderBy) FROM FormAdditionalPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1	
					JOIN FormAdditionalPropertyConfig APC ON APC.FormID = FC.ReferenceID AND APC.Type = 'Control' AND APC.ControlID = FCC.ReferenceID
						AND APC.IsDeleted = 0 AND APC.NotActive = 0 AND APC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;
				
				INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT,  
					ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlColumnsConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = @PasteTabID
										AND TC.GroupID = ISNULL((SELECT TOP 1 CC.ReferenceID FROM FormGroupboxConfig CC
																 WHERE CC.FormID = @IN_ConfigID AND CC.TabID = @PasteTabID
																	AND CC.IsDeleted = 0 AND CC.NotActive = 0 AND CC.IsCurrentVersion = 1), 0)
										AND TC.DisplayName = CCC.DisplayName AND TC.ControlType = CCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0),  APC.Type,
					APC.PropertyName, APC.PropertyValue, APC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 
					ISNULL((SELECT MAX(OrderBy) FROM FormAdditionalPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1	
					JOIN FormAdditionalPropertyConfig APC ON APC.FormID = FC.ReferenceID AND APC.Type = 'Column' AND APC.ControlID = CCC.ReferenceID
						AND APC.IsDeleted = 0 AND APC.NotActive = 0 AND APC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID AND FTC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;
			END	
			ELSE IF @IN_RearrangeType = 'CopyControl'
			BEGIN
				SELECT @DualCount = COUNT(1), @ControlName = ISNULL(Name, '') FROM FormControlConfig
				WHERE FormID = @IN_FromID AND ReferenceID = @IN_DataID 
					AND ControlType IN (9, 10, 12, 13, 14, 15, 30, 31)
					AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1
				GROUP BY Name;

				IF (@DualCount > 0)
				BEGIN  
					SELECT @ReferenceID = ISNULL(ReferenceID, 0) FROM FormControlConfig WHERE FormID = @IN_FromID AND Name = @ControlName AND ReferenceID <> @IN_DataID AND IsDeleted = 0;
					
					SELECT TOP 1 @DualNextID = ISNULL(ReferenceID, 0) FROM FormControlConfig WHERE FormID = @IN_FromID AND Name = @ControlName AND IsDeleted = 0 order by ControlOrder asc;
				
					INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
						IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue,
						AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable,
						FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FillType,
						ButtonID, DependentFlag, DefaultControl, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, FilterConditions, FKData1, 
						FKData2, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ColumnCreation, IsOldRefColumn,
						DataVariable, IsAutoGenerate, IsSelectAll, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate,
						ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
					SELECT @IN_ConfigID, @TabID, @IN_TOID, FCC.Name, FCC.TableColumn, FCC.ControlType, FCC.DataType, FCC.Visibility, FCC.Readonly, 
						FCC.IsMandatory, FCC.IsMobile, FCC.IsWizard, FCC.MaxLength, FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable,
						FCC.SelectApplicable, FCC.DefaultValue, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup, FCC.IsDmlControl, 
						FCC.IsEncrypt, FCC.IsReturnFill, FCC.IsNoAdd, FCC.IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData,
						FCC.AdditionalConditions, FCC.FillEvent, FCC.ControlEventType, FCC.ValidationEventType, FCC.FillEventType, 
						FCC.FillType, FCC.ButtonID, FCC.DependentFlag, FCC.DefaultControl, FCC.DecimalLength, FCC.IsCurrency, 
						FCC.CurrencyColumn, FCC.IsIndex, FCC.FilterConditions, FCC.FKData1, FCC.FKData2, FCC.FkOrder, FCC.FkDelete, 
						FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, CASE WHEN @DualNextID = @IN_DataID THEN @IN_ControlIndex + 1 ELSE @IN_ControlIndex END, FCC.ColumnCreation, 
						FCC.IsOldRefColumn, FCC.DataVariable, FCC.IsAutoGenerate, FCC.IsSelectAll, FCC.CompanyID, @IN_UserID,
						@UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlConfig), 0) + 1, 1, 1
					FROM FormConfiguration FC 
						JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
							AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
						JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
							AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
						JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
							AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					WHERE FC.ReferenceID = @IN_FromID AND FCC.ReferenceID = @ReferenceID AND FCC.Name = @ControlName
						AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

					SET @DualCurrentID = IDENT_CURRENT('FormControlConfig');
				END
				
				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue,
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable,
					FkColumn, FkData, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FillType,
					ButtonID, DependentFlag, DefaultControl, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, FilterConditions, FKData1, 
					FKData2, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, ColumnCreation, IsOldRefColumn,
					DataVariable, IsAutoGenerate, IsSelectAll, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate,
					ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @TabID, @IN_TOID, FCC.Name, FCC.TableColumn, FCC.ControlType, FCC.DataType, FCC.Visibility, FCC.Readonly, 
					FCC.IsMandatory, FCC.IsMobile, FCC.IsWizard, FCC.MaxLength, FCC.Events, FCC.ValidationEvent, FCC.SearchApplicable,
					FCC.SelectApplicable, FCC.DefaultValue, FCC.AttachmentPath, FCC.IsIdentity, FCC.UniqueGroup, FCC.IsDmlControl, 
					FCC.IsEncrypt, FCC.IsReturnFill, FCC.IsNoAdd, FCC.IsNoUpdate, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData,
					FCC.AdditionalConditions, FCC.FillEvent, FCC.ControlEventType, FCC.ValidationEventType, FCC.FillEventType, 
					FCC.FillType, FCC.ButtonID, FCC.DependentFlag, FCC.DefaultControl, FCC.DecimalLength, FCC.IsCurrency, 
					FCC.CurrencyColumn, FCC.IsIndex, FCC.FilterConditions, FCC.FKData1, FCC.FKData2, FCC.FkOrder, FCC.FkDelete, 
					FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, CASE WHEN @DualCount > 0 THEN (CASE WHEN @DualNextID <> @IN_DataID THEN @IN_ControlIndex + 1 ELSE @IN_ControlIndex END) ELSE @IN_ControlIndex END, 
					FCC.ColumnCreation, FCC.IsOldRefColumn, FCC.DataVariable, FCC.IsAutoGenerate, FCC.IsSelectAll, FCC.CompanyID, @IN_UserID,
					@UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FCC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				SET @RefID = IDENT_CURRENT('FormControlConfig');

				UPDATE FCC 
				SET FCC.ControlOrder = CASE WHEN @DualCount > 0 THEN ISNULL(FCC.ControlOrder, '') + 2 ELSE ISNULL(FCC.ControlOrder, '') + 1 END
				FROM FormControlConfig FCC					
				WHERE FCC.FormID = @IN_ConfigID AND FCC.GroupID = @IN_TOID AND ISNULL(FCC.ControlOrder, '') >= @IN_ControlIndex AND FCC.ReferenceID NOT IN (@RefID, @DualCurrentID)
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, ColumnName, ColumnName1, ColumnName2, DisplayName,  
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, 
					ControlEventType, ValidationEventType, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity,  
					UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive,  
					FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength, IsCurrency, 
					CurrencyColumn, IsIndex, GridParentControl, FillEvent, DependentType, FKData1, FKData2, ColumnCreation, DataVariable, 
					IsAutoGenerate, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive,
					IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @TabID, @IN_TOID, ISNULL((SELECT TOP 1 TT.ReferenceID FROM FormControlConfig TT
														  WHERE TT.FormID = @IN_ConfigID AND TT.TabID = @TabID AND TT.GroupID = @IN_TOID 
															AND TT.Name = FCC.Name AND TT.ControlType = FCC.ControlType
															AND TT.IsDeleted = 0 AND TT.NotActive = 0 AND TT.IsCurrentVersion = 1), 0), 
					CCC.ColumnName, CCC.ColumnName1, CCC.ColumnName2, CCC.DisplayName, CCC.ControlType, CCC.DataType, CCC.Visibility, CCC.Readonly, 
					CCC.IsMandatory, CCC.IsMobile, CCC.IsWizard, CCC.MaxLength, CCC.Events, CCC.ValidationEvent, CCC.ControlEventType, CCC.ValidationEventType,
					CCC.SearchApplicable, CCC.SelectApplicable, CCC.DefaultValue, CCC.AttachmentPath, CCC.IsIdentity, CCC.UniqueGroup, CCC.IsDmlControl, 
					CCC.FkType, CCC.FkTable, CCC.FkColumn, CCC.FkData, CCC.AdditionalConditions, CCC.FkOrder, CCC.FkDelete, CCC.FkNotActive, CCC.FkVersion, 
					CCC.FkShowActive, CCC.VersionCheck, CCC.ColumnOrder, CCC.DependentFlag, CCC.SelectAll, CCC.ColumnWidth, CCC.DecimalLength, CCC.IsCurrency, 
					CCC.CurrencyColumn, CCC.IsIndex, CCC.GridParentControl, CCC.FillEvent, CCC.DependentType, CCC.FKData1, CCC.FKData2, CCC.ColumnCreation, 
					CCC.DataVariable, CCC.IsAutoGenerate, CCC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 
					ISNULL((SELECT MAX(OrderBy) FROM FormControlColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FCC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, ColumnName, ColumnName1, ColumnName2, DisplayName, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, 
					ControlEventType, ValidationEventType, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, 
					UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, FkNotActive, FkVersion, 
					FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength, IsCurrency, CurrencyColumn, 
					DependentType, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive,
					IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @TabID, @IN_TOID, ISNULL((SELECT TOP 1 TT.ReferenceID FROM FormControlColumnsConfig TT 
														  WHERE TT.FormID = @IN_ConfigID AND TT.TabID = @TabID 
															AND TT.GroupID = @IN_TOID AND TT.ColumnName = CCC.ColumnName
															AND TT.IsDeleted = 0 AND TT.NotActive = 0 AND TT.IsCurrentVersion = 1), 0), 
					GCC.ColumnName, GCC.ColumnName1, GCC.ColumnName2, GCC.DisplayName, GCC.ControlType, GCC.DataType, GCC.Visibility, GCC.Readonly,
					GCC.IsMandatory, GCC.IsMobile, GCC.IsWizard, GCC.MaxLength, GCC.Events, GCC.ValidationEvent, GCC.ControlEventType, GCC.ValidationEventType,
					GCC.SearchApplicable, GCC.SelectApplicable, GCC.DefaultValue, GCC.AttachmentPath, GCC.IsIdentity, GCC.UniqueGroup, GCC.IsDmlControl, 
					GCC.FkType, GCC.FkTable, GCC.FkColumn, GCC.FkData, GCC.AdditionalConditions, GCC.FkOrder, GCC.FkDelete, GCC.FkNotActive, GCC.FkVersion, 
					GCC.FkShowActive, GCC.VersionCheck, GCC.ColumnOrder, GCC.DependentFlag, GCC.SelectAll, GCC.ColumnWidth, GCC.DecimalLength, GCC.IsCurrency, 
					GCC.CurrencyColumn, GCC.DependentType, GCC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 
					ISNULL((SELECT MAX(OrderBy) FROM FormGridControlColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
					JOIN FormGridControlColumnsConfig GCC ON GCC.FormID = FC.ReferenceID AND GCC.TabID = FTC.ReferenceID
						AND GCC.GroupID = FGC.ReferenceID AND GCC.ColumnID = CCC.ReferenceID 
						AND GCC.IsDeleted = 0 AND GCC.NotActive = 0 AND GCC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FCC.ReferenceID = @IN_DataID
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, PropertyName, PropertyValue, Type, PropertyType, CompanyID, CreatedBy, 
					CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = @TabID AND TC.GroupID = @IN_TOID 
										AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0), 
					CPC.PropertyName, CPC.PropertyValue, CPC.Type, CPC.PropertyType, CPC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = FC.ReferenceID AND CPC.Type = 'Control' AND CPC.ControlID = FCC.ReferenceID 
						AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID  AND FCC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormControlPropertyConfig (FormID, ControlID, PropertyName, PropertyValue, Type, PropertyType, CompanyID, CreatedBy, 
					CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT	@IN_ConfigID, ISNULL((SELECT TOP 1 TCC.ReferenceID FROM FormControlColumnsConfig TCC
										JOIN FormControlConfig TC ON TC.FormID = TCC.FormID AND TC.TabID = TCC.TabID AND TC.GroupID = TCC.GroupID
											AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType AND TC.ReferenceID = TCC.ControlID
											AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
									  WHERE TCC.FormID = @IN_ConfigID AND TCC.TabID = @TabID AND TCC.GroupID = @IN_TOID 
										AND TCC.DisplayName = CCC.DisplayName AND TCC.ControlType = CCC.ControlType
										AND TCC.IsDeleted = 0 AND TCC.NotActive = 0 AND TCC.IsCurrentVersion = 1), 0), 
					CPC.PropertyName, CPC.PropertyValue, CPC.Type, CPC.PropertyType, CPC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, 
					@UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormControlPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
					JOIN FormControlPropertyConfig CPC ON CPC.FormID = FC.ReferenceID AND CPC.Type = 'Column' AND CPC.ControlID = CCC.ReferenceID 
						AND CPC.IsDeleted = 0 AND CPC.NotActive = 0 AND CPC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID  AND FCC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1; 

				INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, ISNULL((SELECT TOP 1 TC.ReferenceID FROM FormControlConfig TC
									  WHERE TC.FormID = @IN_ConfigID AND TC.TabID = @TabID AND TC.GroupID = @IN_TOID 
										AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType
										AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1), 0), APC.Type,
					APC.PropertyName, APC.PropertyValue, APC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 
					0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormAdditionalPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1	
					JOIN FormAdditionalPropertyConfig APC ON APC.FormID = FC.ReferenceID AND APC.Type = 'Control' AND APC.ControlID = FCC.ReferenceID 
						AND APC.IsDeleted = 0 AND APC.NotActive = 0 AND APC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID AND FCC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				INSERT INTO FormAdditionalPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, ISNULL((SELECT TOP 1 TCC.ReferenceID FROM FormControlColumnsConfig TCC
										JOIN FormControlConfig TC ON TC.FormID = TCC.FormID AND TC.TabID = TCC.TabID AND TC.GroupID = TCC.GroupID
											AND TC.Name = FCC.Name AND TC.ControlType = FCC.ControlType AND TC.ReferenceID = TCC.ControlID
											AND TC.IsDeleted = 0 AND TC.NotActive = 0 AND TC.IsCurrentVersion = 1
									  WHERE TCC.FormID = @IN_ConfigID AND TCC.TabID = @TabID AND TCC.GroupID = @IN_TOID 
										AND TCC.DisplayName = CCC.DisplayName AND TCC.ControlType = CCC.ControlType
										AND TCC.IsDeleted = 0 AND TCC.NotActive = 0 AND TCC.IsCurrentVersion = 1), 0), APC.Type,
					APC.PropertyName, APC.PropertyValue, APC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 
					0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormAdditionalPropertyConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormTabConfig FTC ON FTC.FormID = FC.ReferenceID 
						AND FTC.IsDeleted = 0 AND FTC.NotActive = 0 AND FTC.IsCurrentVersion = 1
					JOIN FormGroupboxConfig FGC ON FGC.FormID = FC.ReferenceID AND FGC.TabID = FTC.ReferenceID
						AND FGC.IsDeleted = 0 AND FGC.NotActive = 0 AND FGC.IsCurrentVersion = 1
					JOIN FormControlConfig FCC ON FCC.FormID = FC.ReferenceID AND FCC.TabID = FTC.ReferenceID AND FCC.GroupID = FGC.ReferenceID
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					JOIN FormControlColumnsConfig CCC ON CCC.FormID = FC.ReferenceID AND CCC.TabID = FTC.ReferenceID 
						AND CCC.GroupID = FGC.ReferenceID AND CCC.ControlID = FCC.ReferenceID 
						AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1	
					JOIN FormAdditionalPropertyConfig APC ON APC.FormID = FC.ReferenceID AND APC.Type = 'Column' AND APC.ControlID = CCC.ReferenceID 
						AND APC.IsDeleted = 0 AND APC.NotActive = 0 AND APC.IsCurrentVersion = 1	
				WHERE FC.ReferenceID = @IN_FromID AND FCC.ReferenceID = @IN_DataID AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;
			END
			ELSE IF @IN_RearrangeType = 'CopySearch'
			BEGIN
				INSERT INTO FormSearchControlsConfig (FormID, ControlID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile,
                    MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, DependentFlag, FkOrder,
					FkDelete, FkNotActive, FkVersion, SearchOrder, VersionID, ERPID, ControlEventType, ValidationEventType, ButtonID, Type, DateFilterType, DataVariable,
					FillEventType, FillEvent, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, ISNULL((SELECT TOP 1 TCC.ControlID FROM FormSearchControlsConfig TCC
												JOIN FormConfiguration FC ON FC.ReferenceID = TCC.FormID
											WHERE TCC.FormID = @IN_ConfigID AND TCC.IsDeleted = 0 AND TCC.NotActive = 0 AND TCC.IsCurrentVersion = 1), 0), FSC.name, FSC.TableColumn, FSC.ControlType,
					FSC.DataType, FSC.Visibility, FSC.Readonly, FSC.IsMandatory, FSC.IsMobile, FSC.MaxLength, FSC.Events, FSC.ValidationEvent, FSC.SelectApplicable, FSC.DefaultValue, FSC.FkType,
					FSC.fktable, FSC.FkColumn, FSC.FkData, FSC.AdditionalConditions, FSC.DependentFlag, FSC.FkOrder, FSC.FkDelete, FSC.FkNotActive, FSC.FkVersion, @IN_ControlIndex, FSC.VersionID, FSC.ERPID, FSC.ControlEventType,
					FSC.ValidationEventType, ISNULL((SELECT TOP 1 FCC.ReferenceID FROM FormButtonConfig FCC	
													WHERE FCC.FormID = @IN_ConfigID AND FCC.ButtonType IN (11, 12) AND FCC.ReferenceID = @IN_TOID									 
														AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1), 0), 
					CASE WHEN (ISNULL((SELECT TOP 1 FCC.ReferenceID FROM FormButtonConfig FCC	
										WHERE FCC.FormID = @IN_ConfigID AND FCC.ButtonType IN (11, 12) AND FCC.ReferenceID = @IN_TOID									 
											AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1), 0)) <> 0 THEN 'Button' ELSE '' END, FSC.DateFilterType, FSC.DataVariable, FSC.FillEventType, FSC.FillEvent, 
					FSC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormSearchControlsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC 
					JOIN FormSearchControlsConfig FSC ON FSC.FormID = FC.ReferenceID
						AND FSC.IsDeleted = 0 AND FSC.NotActive = 0 AND FSC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FSC.ReferenceID = @IN_DataID 
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;

				SET @SearchID = IDENT_CURRENT('FormSearchControlsConfig');

				UPDATE FCC 
				SET FCC.SearchOrder = ISNULL(FCC.SearchOrder, '') + 1 
				FROM FormSearchControlsConfig FCC					
				WHERE FCC.FormID = @IN_ConfigID AND ISNULL(FCC.SearchOrder, '') >= @IN_ControlIndex AND FCC.ReferenceID <> @SearchID
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;

				INSERT INTO FormSearchColumnsConfig (FormID, SearchID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile,
							MaxLength, Events, ValidationEvent, SelectApplicable, DefaultValue, FkType, FkTable, FkColumn, FkData, AdditionalConditions, DependentFlag,
							FkOrder, FkDelete, FkNotActive, FkVersion, SearchOrder, VersionID, ERPID, ControlEventType, ValidationEventType, DependentType, DateDifference, Description,							
							CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, OrderBy, Version, IsCurrentVersion)
				SELECT @IN_ConfigID, @SearchID, FSC.Name, FSC.TableColumn, FSC.ControlType, FSC.DataType, FSC.Visibility, fsc.Readonly, FSC.IsMandatory, FSC.IsMobile, FSC.MaxLength,
					FSC.Events, FSC.ValidationEvent, FSC.SelectApplicable, FSC.DefaultValue, FSC.FkType, FSC.FkTable, FSC.FkColumn, FSC.FkData, FSC.AdditionalConditions, FSC.DependentFlag,
					FSC.FkOrder, FSC.FkDelete, FSC.FkNotActive, FSC.FkVersion, FSC.SearchOrder, FSC.VersionID, FSC.ERPID, FSC.ControlEventType, FSC.ValidationEventType, FSC.DependentType, 
					FSC.DateDifference, FSC.Description, FSC.CompanyID, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, ISNULL((SELECT MAX(OrderBy) FROM FormSearchColumnsConfig), 0) + 1, 1, 1
				FROM FormConfiguration FC
					JOIN FormSearchControlsConfig FS ON FS.FormID = FC.ReferenceID
						AND FS.IsDeleted = 0 AND FS.NotActive = 0 AND FS.IsCurrentVersion = 1
					JOIN FormSearchColumnsConfig FSC ON FSC.SearchID = FS.ReferenceID
						AND FSC.IsDeleted = 0 AND FSC.NotActive = 0 AND FSC.IsCurrentVersion = 1
				WHERE FC.ReferenceID = @IN_FromID AND FSC.SearchID = @IN_DataID and (FS.DependentFlag = 1 OR FS.ControlType IN (24, 25))
					AND FC.IsDeleted = 0 AND FC.NotActive = 0 AND FC.IsCurrentVersion = 1;				
			END
			
		COMMIT TRANSACTION tran_FormConfig
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_FormConfig
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);		
	END CATCH		
END
GO
PRINT N'Creating [dbo].[spSaveRoleConfigData]'
GO

CREATE PROCEDURE [dbo].[spSaveRoleConfigData](@IN_Event VARCHAR(10), @IN_ReferenceID INT, @IN_RoleID INT, @IN_HasReadPermission BIT, @IN_IsFavourite BIT, @IN_FavouriteOrder INT,
    @IN_Audit BIT, @IN_ValidateChecksum BIT, @IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		
	
		BEGIN TRANSACTION tran_RoleConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@OrderBy INT = 0
			
		SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
		WHERE UD.UserID = @IN_UserID;

		IF @CompanyID = 0
			SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), 0);

		IF @IN_Event = 'add' OR ISNULL(@IN_ReferenceID, 0) = 0
		BEGIN
			SET @OrderBy = (ISNULL((SELECT COUNT(1) FROM FormRoleConfiguration WHERE IsDeleted = 0), 1));

			INSERT INTO FormRoleConfiguration (RoleID, HasReadPermission, IsFavourite, FavouriteOrder, Audit, ValidateChecksum, FormID, 
				CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy, CompanyID) 
			VALUES (@IN_RoleID, @IN_HasReadPermission, @IN_IsFavourite, @IN_FavouriteOrder, @IN_Audit, @IN_ValidateChecksum, @IN_ConfigID, 
				@IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @OrderBy, @CompanyID);
		END
		ELSE
		BEGIN
			IF @IN_HasReadPermission = 'false'
			BEGIN
				UPDATE FormRoleConfiguration SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime, DeletedDateGMT = @GMTTime WHERE ReferenceID = @IN_ReferenceID;
			END
			ELSE
			BEGIN
				UPDATE FormRoleConfiguration SET RoleID = @IN_RoleID, HasReadPermission = @IN_HasReadPermission, IsFavourite = @IN_IsFavourite, FavouriteOrder = @IN_FavouriteOrder,
					Audit = @IN_Audit, ValidateChecksum = @IN_ValidateChecksum, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END 
		END

		COMMIT TRANSACTION tran_RoleConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_RoleConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spSaveSwitchFormType]'
GO

CREATE PROCEDURE [dbo].[spSaveSwitchFormType] (
	@IN_FormConfigID BIGINT,
	@IN_FormID BIGINT, 
	@IN_OldFormType INT = 0,
	@IN_NewFormType INT = 0,
	@IN_ControlIDs VARCHAR(MAX) = '',
	@IN_UserID INT = 0
)
AS
BEGIN
	SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
			@UTCTime DATETIME = GETUTCDATE(),
			@ControlID INT,
			@GridHeader VARCHAR(100),
			@CompanyID INT = ISNULL((SELECT CompanyID FROM FormConfiguration WHERE ReferenceID = @IN_FormConfigID), 0),
			@ChildGridCount INT,
			@MinCount INT = 0,
			@MaxCount INT = 0,
			@ColumnName VARCHAR(300) = '',
			@ColumnName1 VARCHAR(300) = '',
			@ColumnName2 VARCHAR(300) = '',
			@FkTable VARCHAR(200) = '',
			@ColumnOrderBy INT = 0;

		IF @IN_OldFormType = 1 AND @IN_NewFormType = 3 
		BEGIN		
			IF CHARINDEX('ReferenceID', @IN_ControlIDs) = 0
			BEGIN
				SET @IN_ControlIDs = 'ReferenceID' + ',' + @IN_ControlIDs;
			END
			ELSE
			BEGIN
				SET @IN_ControlIDs = 'ReferenceID' + ',' + REPLACE(@IN_ControlIDs, 'ReferenceID' + ',', '');
				SET @IN_ControlIDs = REPLACE(@IN_ControlIDs, ',' + 'ReferenceID', '');
			END

			IF CHARINDEX('CodemasterID', @IN_ControlIDs) = 0
			BEGIN
				SET @IN_ControlIDs = 'CodemasterID' + ',' + @IN_ControlIDs;
			END
			ELSE
			BEGIN
				SET @IN_ControlIDs = 'CodemasterID' + ',' + REPLACE(@IN_ControlIDs, 'CodemasterID' + ',', '');
				SET @IN_ControlIDs = REPLACE(@IN_ControlIDs, ',' + 'CodemasterID', '');
			END

			UPDATE FormConfiguration set FormType = @IN_NewFormType, Status = 2 where ReferenceID = @IN_FormConfigID;

			SELECT TOP 1 @ControlID = ReferenceID, @FkTable = ISNULL(FkTable, '')
			FROM FormControlConfig 
			WHERE FormID = @IN_FormConfigID AND ControlType = 18 AND IsDeleted = 0;

			UPDATE FormControlConfig SET ControlType = 19, Events = 'STP.search()' WHERE ControlType = 18 AND FormID = @IN_FormConfigID AND IsDeleted = 0;

			SET @GridHeader = ISNULL((SELECT TOP 1 Name FROM FormControlConfig WHERE FormID = @IN_FormConfigID 
							AND ControlType = 19 AND ReferenceID = @ControlID AND IsDeleted = 0), '');

			UPDATE FormControlConfig 
			SET FillEvent = REPLACE(FillEvent, 'CMNF.applyTreeValuetoTextBox', 'CMNF.applyGridIDtoControl')
			WHERE FillEvent LIKE '%CMNF.applyTreeValuetoTextBox%' AND FormID = @IN_FormConfigID AND IsDeleted = 0;	

			UPDATE FormControlColumnsConfig
			SET FillEvent = REPLACE(FillEvent, 'CMNF.applyTreeValuetoTextBox', 'CMNF.applyGridIDtoControl')
			WHERE FillEvent LIKE '%CMNF.applyTreeValuetoTextBox%' AND FormID = @IN_FormConfigID AND IsDeleted = 0;	

			UPDATE FormControlColumnsConfig SET IsDeleted = 1
			WHERE FormID = @IN_FormConfigID AND ControlID = @ControlID AND IsDeleted = 0;

			IF OBJECT_ID('tempdb..#TempColumnTable') IS NOT NULL
			DROP TABLE #TempColumnTable

			SELECT ROW_NUMBER() OVER (ORDER BY Value) AS RowNum,
				Value AS ColumnName 
			INTO #TempColumnTable
			FROM STRING_SPLIT(@IN_ControlIDs, ',');

			SELECT @MaxCount = COUNT(1) FROM #TempColumnTable;

			WHILE @MinCount < @MaxCount
			BEGIN
				SET @MinCount = @MinCount + 1;
				SELECT @ColumnName = ColumnName FROM #TempColumnTable WHERE RowNum = @MinCount;

				SET @ColumnOrderBy = (ISNULL((SELECT COUNT(1) FROM #TempColumnTable), 0));

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, DataType, Visibility, Readonly, IsMandatory,
					IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, Description,
					DataVariable, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
				SELECT TOP 1 @IN_FormConfigID, FC.TabID, FC.GroupID, @ControlID, @ColumnName, @ColumnName, '', '', 20,
					CM.CodemasterID, CASE WHEN @ColumnName IN ('ReferenceID', 'CodemasterID') THEN 0 ELSE 1 END, CASE WHEN @ColumnName IN ('ReferenceID', 'CodemasterID') THEN 1 ELSE 0 END,
					0, 1, 0, -1, '', '', 0, 0, '', '', CASE WHEN @ColumnName IN ('ReferenceID', 'CodemasterID') THEN 1 ELSE 0 END, 
					0, 0, 0, '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, CASE WHEN @ColumnName IN ('ReferenceID', 'CodemasterID') THEN 1 ELSE @ColumnOrderBy END,
					0, '', 0, @CompanyID, CASE WHEN @ColumnName IN ('ReferenceID', 'CodemasterID') THEN 1 ELSE @ColumnOrderBy END, 1, 1, 0, 0, 
					@IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
				FROM FormControlConfig FC 
					--JOIN FormControlColumnsConfig FCC ON FCC.ControlID = FC.ReferenceID
					JOIN INFORMATION_SCHEMA.COLUMNS A on A.TABLE_NAME = FC.FkTable AND COLUMN_NAME = @ColumnName
					LEFT JOIN CmnCodeMaster CM ON CM.TypeValues = A.DATA_TYPE AND CM.IsDeleted = 0
				WHERE FC.FormID = @IN_FormConfigID AND FC.ReferenceID = @ControlID AND FC.FKTABLE = @FkTable AND FC.IsDeleted = 0;
			END

			IF NOT EXISTS (SELECT 1 FROM FormButtonConfig WHERE FormID = @IN_FormConfigID AND TypeValues = 'View' AND IsDeleted = 0) 
			BEGIN
				INSERT INTO FormButtonConfig (FormID, Type, DisplayType, UserAccess, ButtonType, TypeValues, Code, Description, Details, ImagePath, MenuCategory, ButtonKeyColumn, 
					AvailableStatus, ProcessButtonTypeID, OrderBy, ButtonCategory, VisibleTabs, DisableTabs, ButtonTriggerEvent, IsMultipleApproval, IsDml, 
					ReqOldRefID, ClearControls, ClearColumns, AutoClose, IsMobile, IsAudit, BuiltProcessButtonID, CreatedBy, CreatedDate, 
					CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, NotActive, IsDeleted, IsCurrentVersion, Version, CompanyID) 
				VALUES (@IN_FormConfigID, 'Menubutton', 'Menubutton', 1, 4, 'View', '', '', 'STP.openPopup(''' + 'Edit' + ''', ''' + 'View' + ''');', 'fa-info', 1, '',
					'', 0, ISNULL((SELECT MAX(OrderBy) FROM FormButtonConfig WHERE FormID = @IN_FormConfigID), 0) + 1, 0, '', '', '', 0, 1, 
					0, 0, 0, 1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 1, 1, @CompanyID);
			END

			IF EXISTS (SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = @ControlID AND IsDeleted = 0)
			BEGIN
				DELETE FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = @ControlID AND IsDeleted = 0;
			END

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			VALUES (@IN_FormConfigID, @ControlID, 'Control', 'Grid Header', @GridHeader, @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
				(@IN_FormConfigID, @ControlID, 'Control', 'Grid Type', '0', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
				(@IN_FormConfigID, @ControlID, 'Control', 'Page Size', '15', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
				(@IN_FormConfigID, @ControlID, 'Control', 'Grid Access Type', '1', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1),
				(@IN_FormConfigID, @ControlID, 'Control', 'Row Event', 'STP.rowClickEvent', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		
			SET @ChildGridCount = ISNULL((SELECT COUNT(1) FROM FormControlConfig WHERE ControlType = 19 AND Formid = @IN_FormConfigID AND ReferenceID <> @ControlID AND IsDeleted = 0), 0);
			IF @ChildGridCount > 0
			BEGIN
				UPDATE FCP SET PropertyValue = @GridHeader 
				FROM FormControlPropertyConfig FCP
					JOIN FormControlConfig FC ON FC.ReferenceID = FCP.ControlID AND FC.IsDeleted = 0 
						AND FC.ReferenceID <> @ControlID AND FC.ControlType = 19
			WHERE FCP.FormID = @IN_FormConfigID AND FCP.IsDeleted = 0 AND FCP.PropertyName = 'Fk Parent Grid' AND FCP.PropertyValue = '';
			END
		END
		ELSE IF @IN_OldFormType = 3 AND @IN_NewFormType = 1 
		BEGIN
			UPDATE FormConfiguration set FormType = @IN_NewFormType, Status = 2 where ReferenceID = @IN_FormConfigID;

			SET @ControlID = ISNULL((SELECT TOP 1 ReferenceID FROM FormControlConfig WHERE FormID = @IN_FormConfigID AND Events LIKE '%STP.search%' AND ControlType = 19 AND IsDeleted = 0), 0);

			UPDATE FormControlConfig SET ControlType = 18, Events = 'STP.search(),STP.selectListBox()' WHERE ControlType = 19 AND FormID = @IN_FormConfigID AND ReferenceID = @ControlID AND IsDeleted = 0;

			SET @GridHeader = ISNULL((SELECT TOP 1 Name FROM FormControlConfig WHERE FormID = @IN_FormConfigID 
							AND ControlType = 19 AND ReferenceID = @ControlID AND IsDeleted = 0), '');

			UPDATE FormControlConfig
			SET FillEvent = REPLACE(FillEvent, 'CMNF.applyGridIDtoControl', 'CMNF.applyTreeValuetoTextBox')
			WHERE FillEvent LIKE '%CMNF.applyGridIDtoControl%' AND FormID = @IN_FormConfigID AND IsDeleted = 0;	

			UPDATE FormControlColumnsConfig
			SET FillEvent = REPLACE(FillEvent, 'CMNF.applyGridIDtoControl', 'CMNF.applyTreeValuetoTextBox')
			WHERE FillEvent LIKE '%CMNF.applyGridIDtoControl%' AND FormID = @IN_FormConfigID AND IsDeleted = 0;	

			UPDATE FormControlColumnsConfig 
			SET IsDeleted = 1 
			WHERE ControlID = @ControlID AND IsDeleted = 0;

			DECLARE @SplitValues TABLE (ID INT IDENTITY(1,1), Value NVARCHAR(MAX));
			INSERT INTO @SplitValues (Value)
			SELECT value FROM STRING_SPLIT(@IN_ControlIDs, ',');

			SET @ColumnName = (SELECT Value FROM @SplitValues WHERE ID = 1);
			SET @ColumnName1 = (SELECT Value FROM @SplitValues WHERE ID = 2);
			SET @ColumnName2 = (SELECT Value FROM @SplitValues WHERE ID = 3);

			INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, ControlType, DataType, Visibility, Readonly, IsMandatory,
				IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData,
				AdditionalConditions, ControlEventType, ValidationEventType, FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, Description, DataVariable, 
				CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, DateDifference, AttachmentMaxSize)
			SELECT TOP 1 @IN_FormConfigID, FC.TabID, FC.GroupID, @ControlID, @ColumnName, @ColumnName, @ColumnName1, @ColumnName2, 20, 7, 1, 0, 0, 1, 0, -1, '', '', 0, 0, '', '', 0, 0, 0, 0, '', '', '', '',
				 0, 0, 0, 0, 0, 0, 0, 0, @ColumnOrderBy, 0, '', 0, @CompanyID, @ColumnOrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, NULL, 0
			FROM FormControlConfig FC 
			WHERE FC.FormID = @IN_FormConfigID AND FC.ReferenceID = @ControlID AND FC.IsDeleted = 0;

			IF EXISTS (SELECT 1 FROM FormButtonConfig WHERE FormID = @IN_FormConfigID AND TypeValues = 'View' AND IsDeleted = 0) 
			BEGIN
				DELETE FROM FormButtonConfig WHERE FormID = @IN_FormConfigID AND TypeValues = 'View' AND IsDeleted = 0;
			END

			IF EXISTS (SELECT 1 FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = @ControlID AND IsDeleted = 0)
			BEGIN
				DELETE FROM FormControlPropertyConfig WHERE FormID = @IN_FormConfigID AND ControlID = @ControlID AND IsDeleted = 0
			END

			INSERT INTO FormControlPropertyConfig (FormID, ControlID, Type, PropertyName, PropertyValue, CompanyID, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, IsCurrentVersion, Version, OrderBy)
			VALUES (@IN_FormConfigID, @ControlID, 'Control', 'Page Size', '15', @CompanyID, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 1, 1, 1);
		END
END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spSaveTabConfigData]'
GO

CREATE PROCEDURE [dbo].[spSaveTabConfigData](@IN_Event VARCHAR(10), @IN_ReferenceID INT, @IN_FormFlag INT, @IN_Name NVARCHAR(100), @IN_DisplayName NVARCHAR(100), @IN_TabOrder INT, @IN_IsMandatory BIT, 
      @IN_TableName NVARCHAR(100), @IN_KeyColumn NVARCHAR(100), @IN_AddCondition VARCHAR(250), @IN_IsDelete BIT,
	  @IN_IsMobile BIT, @IN_IsStatic BIT,  @IN_Description NVARCHAR(MAX), @IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY		
	
		BEGIN TRANSACTION tran_TabConfig
	
		DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
				@UTCTime DATETIME = GETUTCDATE(),
				@ErrorMessage NVARCHAR(2000),
				@ErrorSeverity NVARCHAR(50),
				@ErrorState NVARCHAR(50),
				@CompanyID INT = 0,
				@OrderBy INT = 0,
				@FormType INT = 0,
				@TabID INT = 0,
				@FormTableName NVARCHAR(100),
				@FormKeyColumn NVARCHAR(100),
				@ExistingKeyColumn NVARCHAR(100),
				@TableCount INT,
				@TabOrderCount INT,
				@DataType VARCHAR(15),
				@CreateTableQuery NVARCHAR(MAX),
				@AlterTableQuery NVARCHAR(MAX),
				@ColumnCount INT = 0,
				@KeyPrimaryCount INT = 0

		SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
		FROM CmnUserDetails UD
			LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
		WHERE UD.UserID = @IN_UserID;

		IF @CompanyID = 0
			SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1), 0);
		SELECT @FormType = FormType, @FormTableName = TableName, @FormKeyColumn = KeyColumn FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
				
		--IF @IN_FormFlag = 1 AND @FormType = 4
		--BEGIN
		--	SET @OrderBy = (ISNULL((SELECT COUNT(1) FROM FormTabConfig WHERE IsDeleted = 0 AND FormID = @IN_ConfigID), 1));
		--	SET @TabID = (SELECT ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0 AND TabOrder = (SELECT MIN(TabOrder) FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0));

		--	INSERT INTO FormTabConfig (Name, TabOrder, IsMandatory, TableName, KeyColumn, FormID, DefaultTab, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy) 
		--	VALUES ('Default Tab 1', 1, 1, '', '', @IN_ConfigID, @IN_UserID, 1, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @OrderBy);
    
		--END

		IF @IN_TabOrder = 0
		BEGIN
			SET @IN_TabOrder = ISNULL((SELECT MAX(TabOrder) + 1 FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0), 1);
		END
		SET @ExistingKeyColumn = ISNULL((SELECT TOP 1 KeyColumn FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ReferenceID = @IN_ReferenceID AND IsDeleted = 0), '');
		
		IF @IN_Event = 'add' OR ISNULL(@IN_ReferenceID, 0) = 0
		BEGIN
			--SET @TabOrderCount = (SELECT COUNT(1) FROM FormTabConfig WHERE FormID = @IN_ConfigID AND TabOrder = @IN_TabOrder AND IsDeleted = 0);
			--IF @TabOrderCount > 0 
			--BEGIN
			--  SET @IN_TabOrder = ISNULL((SELECT MAX(TabOrder) + 1 FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0), 1);
			--END
			SET @IN_IsMandatory = 1; 
			SET @OrderBy = (ISNULL((SELECT COUNT(1) FROM FormTabConfig WHERE IsDeleted = 0), 1));


			INSERT INTO FormTabConfig (Name, DisplayName, TabOrder, IsMandatory, TableName, KeyColumn, AddCondition, IsMobile, IsStatic, Description, FormID, 
							CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, OrderBy, CompanyID) 
			VALUES (@IN_Name, @IN_DisplayName, @IN_TabOrder, @IN_IsMandatory, @IN_TableName, @IN_KeyColumn, @IN_AddCondition, @IN_IsMobile, @IN_IsStatic, @IN_Description, @IN_ConfigID, 
				@IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, @OrderBy, @CompanyID);
		END
		ELSE
		BEGIN
			IF @IN_IsDelete = 1
			BEGIN
				UPDATE FormTabConfig SET IsDeleted = 1, DeletedBy = @IN_UserID, DeletedDate = @UTCTime, DeletedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END
			ELSE
			BEGIN
				UPDATE FormTabConfig SET Name = @IN_Name, DisplayName = @IN_DisplayName, TabOrder = @IN_TabOrder, IsMandatory = @IN_IsMandatory, TableName = @IN_TableName, KeyColumn = @IN_KeyColumn, AddCondition = @IN_AddCondition,
					IsMobile = @IN_IsMobile, IsStatic = @IN_IsStatic, Description = @IN_Description, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime
				WHERE ReferenceID = @IN_ReferenceID;
			END

		END

		IF ISNULL(@IN_TableName, '') <> '' AND @IN_IsDelete = 0
		BEGIN
			SELECT @TableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @IN_TableName;
			SELECT TOP 1 @TabID = ReferenceID FROM FormTabConfig WHERE Name = @IN_Name AND FormID = @IN_ConfigID AND IsDeleted = 0;

			IF @IN_TableName = @FormTableName AND @IN_KeyColumn <> @FormKeyColumn AND @IN_KeyColumn <> 'ReferenceID'
			BEGIN
			  SET @IN_KeyColumn = @FormKeyColumn;

			  UPDATE FormTabConfig SET KeyColumn = @IN_KeyColumn
			  WHERE ReferenceID = @TabID;
			END

			SELECT @DataType = DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FormTableName AND COLUMN_NAME = @FormKeyColumn;
  
			IF @TableCount = 0
			BEGIN
				IF @IN_KeyColumn = 'ReferenceID' 
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE '+ @IN_TableName+ '('+ @IN_KeyColumn+' BIGINT IDENTITY(1,1) NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason NVARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, DeleteReason NVARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT PK_'+@IN_TableName+' PRIMARY KEY ('+@IN_KeyColumn+' ASC)'
									+')';
				END
				ELSE
				BEGIN
					SET @CreateTableQuery = 'CREATE TABLE '+ @IN_TableName+ '(ReferenceID BIGINT IDENTITY(1,1) NOT NULL, '+ @IN_KeyColumn+' '+@DataType+' NOT NULL, CreatedBy INT NOT NULL, CreatedDate DATETIME NOT NULL, CreatedDateGMT DATETIME NOT NULL, ModifiedBy INT NOT NULL, ModifiedDate DATETIME NOT NULL, ModifiedDateGMT DATETIME NOT NULL,
									NotActive BIT NOT NULL DEFAULT 0, NotActiveDate DATETIME NULL, NotActiveDateGMT DATETIME NULL, NotActiveReason VARCHAR(100) NULL, IsDeleted BIT NOT NULL DEFAULT 0, 
									DeletedBy INT NULL, DeletedDate DATETIME NULL, DeletedDateGMT DATETIME NULL, NDeleteReason VARCHAR(100) NULL, IsCurrentVersion BIT NOT NULL DEFAULT 1, 
									[Version] INT NOT NULL DEFAULT 1, VersionID INT NULL, OrderBy INT NOT NULL, ERPID VARCHAR(25) NULL, CONSTRAINT PK_'+@IN_TableName+' PRIMARY KEY (ReferenceID ASC)'
									+')';
				END

				EXEC (@CreateTableQuery);
			END
			ELSE IF @IN_TableName <> @FormTableName 
			BEGIN
			  SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @IN_TableName AND COLUMN_NAME = @IN_KeyColumn;
			  IF @ColumnCount = 0
			  BEGIN
					SET @AlterTableQuery = 'ALTER TABLE '+ @IN_TableName+ ' ADD '+ @IN_KeyColumn+ '  '+ @DataType+ ' NULL;'      
					EXEC (@AlterTableQuery);
			  END
			  ELSE IF @ExistingKeyColumn <> '' AND @ColumnCount = 0 
			  BEGIN
					SELECT @KeyPrimaryCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @IN_TableName AND COLUMN_NAME = @IN_KeyColumn;
					IF @KeyPrimaryCount > 0
					BEGIN 
						SET @AlterTableQuery = ('ALTER TABLE '+ @IN_TableName+' DROP COLUMN '+@IN_KeyColumn);
						EXEC (@AlterTableQuery);
					END

					SET @AlterTableQuery = ('EXEC sp_rename '''+ @IN_TableName+'.'+ @ExistingKeyColumn+''', '''+ @IN_KeyColumn+''', ''COLUMN''');
					EXEC (@AlterTableQuery);
			  END
			END
		END

		COMMIT TRANSACTION tran_TabConfig

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_TabConfig

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[spValidateFormConfig]'
GO

CREATE PROCEDURE [dbo].[spValidateFormConfig] (@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY

			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
					@UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@TableName VARCHAR(100),
					@ViewName VARCHAR(100),
					@KeyColumn VARCHAR(100),
					@Source INT,
					@GroupboxID INT,
					@TableColumn NVARCHAR(100),
					@ColumnCount INT,
					@ColumnID INT,
					@FormType INT,
					@TabCount INT,
					@TabMin INT,
					@SCount INT = 0,
					@ValidateMessage NVARCHAR(MAX),
					@TableCount INT,
					@TabQuery NVARCHAR(MAX),
					@GroupCount INT,
					@TabName NVARCHAR(100),
					@GroupMin INT,
					@TabID INT,
					@GroupboxQuery NVARCHAR(MAX),
					@DuplicateCount INT,
					@ReturnFillCount INT,
					@IdentityCount INT,
					@GroupboxName NVARCHAR(100),
					@ControlMin INT,
					@ControlCount INT,
					@CommonGroup BIT,
					@FkType INT,
					@FkTable NVARCHAR(100),
					@ControlType INT,
					@FkColumn NVARCHAR(100),
					@Query NVARCHAR(MAX),
					@ControlID INT,
					@ControlName NVARCHAR(100),
					@FkData NVARCHAR(100),
					@DependentFlag BIT,
					@ColumnMin INT,
					@DependentControlCount INT,
					@ControlDataType INT,
					@ColumnName VARCHAR(100),
					@DataType INT,
					@PropertyCount INT,
					@SearchApplicable BIT,
					@SearchColumnCount INT,
					@SearchMin INT,
					@Name VARCHAR(100),
					@SearchCount INT,
					@SearchID INT,
					@GridCount INT,
					@ParentMenuOrder INT = 0,
					@MenuOrder INT = 0,
					@ModuleID INT = 0,
					@ParentMenu NVARCHAR(100) = '',
					@ParentMenuOrderCount INT = 0,
					@MenuOrderCount INT = 0,
					@MainMenuID INT = 0,
					@PropControlID INT = 0,
					@PropertyMin INT = 0,
					@ColumnPropertyCount INT = 0,
					@Column1Table VARCHAR(100) = '',
					@Column2Table VARCHAR(100) = '',
					@Column3Table VARCHAR(100) = '',
					@PropertyName NVARCHAR(500) = '',
					@PropertyValue NVARCHAR(500) = '',
					@PropertyTableCount INT = 0,
					@PropertyColumnCount INT = 0,
					@ColumnDependentFlag BIT,
					@ColumnControlType INT = 0,
					@IsIdentity BIT,
					@IsIndex BIT,
					@TableMin INT = 0,
					@FormTableCount INT = 0,
					@TCount INT = 0,
					@tmpTableName VARCHAR(100) = '',
					@IsIndexCount INT = 0,
					@IsDml BIT,
					@ButtonID INT = 0,
					@DmlCount INT = 0,
					@CCount INT = 0,
					@ProcessCount INT = 0,
					@CompanyID INT = ISNULL((SELECT CompanyID FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID), 0)
			
			SELECT @FormType = FormType, @Source = Source, @TableName = TableName, @ViewName = ViewName, @KeyColumn = KeyColumn,
					@ParentMenuOrder = ParentMenuorder, @MenuOrder = MenuOrder, @ModuleID = ModuleID, @ParentMenu = ParentMenu
			FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID;

			SET @TabCount = (SELECT COUNT(1) FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0);
			SET @TabMin = 0;
			SET @ValidateMessage = '';

			IF @ParentMenu = ''
			BEGIN
				SELECT @MenuOrderCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND MainMenuOrder = @MenuOrder AND IsDeleted = 0;
			END
			ELSE
			BEGIN
				SELECT @MainMenuID = FormID FROM CmnFormDetails WHERE ModuleID = @ModuleID AND Name = @ParentMenu AND ISNULL(FormPath, '') = '' AND IsDeleted = 0;
				SELECT @ParentMenuOrderCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND MainMenuOrder = @ParentMenuOrder AND IsDeleted = 0;
				SELECT @MenuOrderCount = COUNT(1) FROM CmnFormDetails WHERE ModuleID = @ModuleID AND SubMenuOrder = @MenuOrder AND MainMenu1 = @MainMenuID AND IsDeleted = 0;
			END
			
			IF @Source = 1
			BEGIN
				SELECT @TableCount = COUNT(1) FROM sys.objects WHERE TYPE IN (N'U') AND Name = @TableName;
			END
			ELSE
			BEGIN
				SELECT @TableCount = COUNT(1) FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME <> @ViewName;		
			END 

			IF OBJECT_ID('tempdb..#tempTableDetails') IS NOT NULL
				DROP TABLE #tempTableDetails

			CREATE TABLE #tempTableDetails (
				TableName VARCHAR(255) NOT NULL,
				ColumnName VARCHAR(100) NOT NULL,
				IsIdentity BIT NULL DEFAULT 0,
				IsIndex BIT NULL DEFAULT 0,
				IsDml BIT NULL DEFAULT 0, 
				ButtonID BIGINT NULL,
				GroupboxID BIGINT NULL, 
				ControlType INT NULL)

			IF @TableCount = 0
			BEGIN
				SET @ValidateMessage = ('The '+CASE WHEN @Source = 1 THEN ('table '+ @TableName) ELSE ('view '+ @ViewName) END+' is not exist');
			END
			--ELSE IF @ParentMenuOrderCount > 0
			--BEGIN
			--	SET @ValidateMessage = 'The Parent Menu Order is already configured for another form';
			--END
			--ELSE IF @MenuOrderCount > 0
			--BEGIN
			--	SET @ValidateMessage = 'The Menu Order is already configured for another form';
			--END
			ELSE
			BEGIN
				IF @FormType = 9 
				BEGIN
					SELECT @ProcessCount = COUNT(1)
					FROM formbuttonconfig WHERE FormID = @IN_ConfigID AND ButtonType = 5 AND ButtonTriggerEvent LIKE '%QUICK.moveCardToTarget%'
						AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1;
				END
				
				IF (@FormType NOT IN (3, 4, 9))
				BEGIN
					IF EXISTS (SELECT ISNULL(ButtonType, 0) FROM formbuttonconfig WHERE FormID = @IN_ConfigID AND ButtonType = 4 
									AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1)
					BEGIN
						SET @ValidateMessage = 'View button is not applicable for this form type';
					END					
				END

				IF @TabCount = 0
				BEGIN
					SET @ValidateMessage = 'Please configure atleast one tab';
				END
				ELSE IF @FormType = 9 AND ISNULL(@ProcessCount, 0) = 0 
					SET @ValidateMessage = 'Please configure atleast one process';
				ELSE
				BEGIN
					IF OBJECT_ID('tempdb..#tempFormTabs') IS NOT NULL
					DROP TABLE #tempFormTabs

					CREATE TABLE #tempFormTabs (
						SNum INT NULL,
						ReferenceID INT,
						Name NVARCHAR(100) NULL)

					INSERT INTO #tempFormTabs (ReferenceID, Name)
					SELECT ReferenceID, Name
					FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0 ORDER BY TabOrder ASC;
					
					UPDATE #tempFormTabs SET @SCount = SNum = @SCount + 1;

					SET @SCount = 0;
					IF OBJECT_ID('tempdb..#tempFormGroupbox') IS NOT NULL
					DROP TABLE #tempFormGroupbox

					CREATE TABLE #tempFormGroupbox (
						SNum INT NULL,
						ReferenceID INT,
						Name NVARCHAR(100) NULL,
						CommonGroup BIT NULL)	
						
					IF OBJECT_ID('tempdb..#tempFormControls') IS NOT NULL
					DROP TABLE #tempFormControls

					CREATE TABLE #tempFormControls (
						SNum INT NULL,
						ReferenceID INT,
						Name NVARCHAR(100) NULL,
						TableColumn VARCHAR(100) NULL,
						ControlType INT NULL, 
						FkType INT NULL,
						FkTable VARCHAR(100) NULL,
						FkColumn VARCHAR(100) NULL,
						FkData VARCHAR(100) NULL,
						SearchApplicable BIT NULL, 
						IsIdentity BIT NULL, 
						IsIndex BIT NULL,
						ButtonID INT NULL,
						IsDml BIT NULL)	

					IF OBJECT_ID('tempdb..#tempControlColumns') IS NOT NULL
					DROP TABLE #tempControlColumns

					CREATE TABLE #tempControlColumns (
						SNum INT NULL,
						ReferenceID INT,
						DisplayName NVARCHAR(100) NULL,
						ColumnName VARCHAR(100) NULL,
						ControlType INT NULL, 
						DataType INT NULL,
						FkType INT NULL,
						FkTable VARCHAR(100) NULL,
						FkColumn VARCHAR(100) NULL,
						FkData VARCHAR(100) NULL,
						DependentFlag BIT NULL)
						
					IF OBJECT_ID('tempdb..#tempSearchControls') IS NOT NULL
					DROP TABLE #tempSearchControls

					CREATE TABLE #tempSearchControls (
						SNum INT NULL,
						ReferenceID INT,
						Name NVARCHAR(100) NULL)	

					IF OBJECT_ID('tempdb..#tempColumnProperty') IS NOT NULL
					DROP TABLE #tempColumnProperty

					CREATE TABLE #tempColumnProperty (
						SNum INT NOT NULL IDENTITY(1,1),
						PropertyName NVARCHAR(100) NULL,
						PropertyValue NVARCHAR(500) NULL)	
										
					WHILE (@TabCount > @TabMin)
					BEGIN
						SET @TabQuery = 'SELECT @TempTabID = ReferenceID FROM #tempFormTabs WHERE SNum = '+ CAST((@TabMin+1) AS VARCHAR(50));
						EXEC SP_EXECUTESQL @TabQuery, N'@TempTabID INT OUT', @TabID OUT

						SET @TabQuery = 'SELECT @TempTabName = Name FROM #tempFormTabs WHERE SNum = '+ CAST((@TabMin+1) AS VARCHAR(50));
						EXEC SP_EXECUTESQL @TabQuery, N'@TempTabName NVARCHAR(100) OUT', @TabName OUT
  
						SET @GroupCount = (SELECT COUNT(1) FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0);
						
						IF @GroupCount = 0
						BEGIN
							SET @ValidateMessage = ('Please configure atleast one groupbox for tab '+ @TabName);
							BREAK;
						END
						ELSE
						BEGIN
							SET @SCount = 0;
							DELETE FROM #tempFormGroupbox;
							INSERT INTO #tempFormGroupbox (ReferenceID, Name, CommonGroup)
							SELECT ReferenceID, Name, CommonGroup
							FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0 ORDER BY GroupOrder ASC;
							
							UPDATE #tempFormGroupbox SET @SCount = SNum = @SCount + 1;
						
							SET @GroupMin = 0;
							WHILE (@GroupCount > @GroupMin)
							BEGIN
								SET @GroupboxID = 0;
								SET @GroupboxQuery = 'SELECT @TempGroupboxID = ReferenceID FROM #tempFormGroupbox WHERE SNum = '+CAST((@GroupMin+ 1) AS VARCHAR(50));
								EXEC SP_EXECUTESQL @GroupboxQuery, N'@TempGroupboxID INT OUT', @GroupboxID OUT

								SET @GroupboxQuery = 'SELECT @TempGroupboxName = Name FROM #tempFormGroupbox WHERE SNum = '+CAST((@GroupMin+ 1) AS VARCHAR(50));
								EXEC SP_EXECUTESQL @GroupboxQuery, N'@TempGroupboxName NVARCHAR(100) OUT', @GroupboxName OUT

								SET @GroupboxQuery = 'SELECT @TempCommonGroup = CommonGroup FROM #tempFormGroupbox WHERE SNum = '+CAST((@GroupMin+ 1) AS VARCHAR(50));
								EXEC SP_EXECUTESQL @GroupboxQuery, N'@TempCommonGroup INT OUT', @CommonGroup OUT

								SELECT @ControlCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupboxID AND IsDeleted = 0;
								SELECT @DuplicateCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_ConfigID 
												AND ControlType <> 18 AND ControlType <> 19 AND ControlType <> 24 AND ControlType <> 25 AND IsDeleted = 0;
								SELECT @IdentityCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_ConfigID 
												AND ControlType <> 18 AND ControlType <> 19 AND ControlType <> 24 AND ControlType <> 25 AND IsIdentity = 1 AND IsDeleted = 0;
								SELECT @ReturnFillCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_ConfigID 
												AND ControlType <> 18 AND ControlType <> 19 AND ControlType <> 24 AND ControlType <> 25 AND IsReturnFill = 1 AND IsDeleted = 0;
								SELECT @GridCount = COUNT(1) FROM FormControlConfig WHERE FormID = @IN_ConfigID AND GroupID = @GroupboxID AND (ControlType = 18 OR ControlType = 19) AND IsDeleted = 0;
 
								--IF (@ControlCount = 0 AND @CommonGroup = 1) OR (@ControlCount <= 1 AND @CommonGroup = 0)
								IF @ControlCount = 0
								BEGIN
									SET @ValidateMessage = ('Please configure the controls for '+ @GroupboxName);
									BREAK
								END
								ELSE IF @IdentityCount = 0 AND @ControlCount <> @GridCount 
								BEGIN
									SET @ValidateMessage = 'Please configure the identity column';
									BREAK
								END
								ELSE IF @ReturnFillCount = 0 AND @ControlCount <> @GridCount 
								BEGIN
									SET @ValidateMessage = 'Please configure the return fill column';
									BREAK   
								END 
								ELSE
								BEGIN
									SET @SCount = 0;
									DELETE FROM #tempFormControls;
									INSERT INTO #tempFormControls (ReferenceID, Name, TableColumn, ControlType, FkType, FkTable, FkColumn, FkData, SearchApplicable, IsIdentity, IsIndex, ButtonID, IsDml)
									SELECT ReferenceID, Name, TableColumn, ControlType, FkType, FkTable, FkColumn, FkData, SearchApplicable, IsIdentity, IsIndex, ButtonID, IsDmlControl
									FROM FormControlConfig WHERE FormID = @IN_ConfigID AND TabID = TabID AND GroupID = @GroupboxID AND IsDeleted = 0 ORDER BY ControlOrder ASC;

									UPDATE #tempFormControls SET @SCount = SNum = @SCount + 1;

									SET @ControlMin = 0;
									WHILE @ControlCount > @ControlMin
									BEGIN
										SET @ControlID = 0;
										SET @ControlName = '';
										SET @ControlType = 0;
										SET @FkType = 0;
										SET @FkTable = '';
										SET @FkColumn = '';
										SET @FkData = '';
										SET @TableColumn = '';
										SET @IsIdentity = 0;
										SET @IsIndex = 0;
										SET @IsDml = 0;
										SET @ButtonID = 0;

										SET @Query = 'SELECT @TempControlID = ReferenceID FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempControlID INT OUT', @ControlID OUT

										SET @Query = 'SELECT @TempControlName = Name FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempControlName NVARCHAR(100) OUT', @ControlName OUT

										SET @Query = 'SELECT @TempTableColumn = TableColumn FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempTableColumn NVARCHAR(100) OUT', @TableColumn OUT

										SET @Query = 'SELECT @TempControlType = ControlType FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempControlType INT OUT', @ControlType OUT

										SET @Query = 'SELECT @TempFkType = FkType FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempFkType INT OUT', @FkType OUT

										SET @Query = 'SELECT @TempFkTable = FkTable FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempFkTable NVARCHAR(100) OUT', @FkTable OUT
										
										SET @Query = 'SELECT @TempFkColumn = FkColumn FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempFkColumn VARCHAR(100) OUT', @FkColumn OUT

										SET @Query = 'SELECT @TempFkData = FkData FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempFkData VARCHAR(100) OUT', @FkData OUT

										SET @Query = 'SELECT @TempSearchApplicable = SearchApplicable FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempSearchApplicable BIT OUT', @SearchApplicable OUT

										SET @Query = 'SELECT @TempIsIdentity = IsIdentity FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempIsIdentity BIT OUT', @IsIdentity OUT

										SET @Query = 'SELECT @TempIsIndex = IsIndex FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempIsIndex BIT OUT', @IsIndex OUT

										SET @Query = 'SELECT @TempButtonID = ButtonID FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempButtonID INT OUT', @ButtonID OUT

										SET @Query = 'SELECT @TempIsDml = IsDml FROM #tempFormControls WHERE SNum = '+CAST((@ControlMin+ 1) AS VARCHAR(50));
										EXEC SP_EXECUTESQL @Query, N'@TempIsDml BIT OUT', @IsDml OUT
										  
										SELECT @TableName = CASE WHEN LEN(GB.TableName) > 0 THEN GB.TableName WHEN LEN(FT.TableName) > 0 THEN FT.TableName WHEN LEN(FC.TableName) > 0 THEN FC.TableName END 
										FROM FormConfiguration FC
											JOIN FormTabConfig FT ON FT.ReferenceID = @TabID
											JOIN FormGroupboxConfig GB ON GB.ReferenceID = @GroupboxID
										WHERE FC.ReferenceID = @IN_ConfigID AND FC.IsDeleted = 0;
										
										IF ISNULL(@TableName, '') <> ''
										BEGIN
											INSERT INTO #tempTableDetails (TableName, ColumnName, IsIdentity, IsIndex, IsDml, ButtonID, GroupboxID, ControlType) 
											VALUES (@TableName, @TableColumn, @IsIdentity, @IsIndex, @IsDml, @ButtonID, @GroupboxID, @ControlType);
										END

										--IF @FkType = 2 AND (@FkTable = 'CmnFileUpload' OR @FkTable = 'CmnCodeMaster')
										--BEGIN
										--	SET @ValidateMessage = 'Please configure proper fktable value';
										--	BREAK
										--END
										--ELSE 
										IF ISNULL(@FkType, 0) <> 0 AND (@FkTable = '' OR @FkColumn = '' OR @FkData = '')
										BEGIN
											SET @ValidateMessage = 'Please configure proper fk properties';
											BREAK
										END 
  
										IF @ControlType = 18 OR @ControlType = 19 OR @ControlType = 24 OR @ControlType = 25 OR @DependentFlag = 1
										BEGIN
											SELECT @ColumnCount = COUNT(1) FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupID = @GroupboxID AND ControlID = @ControlID AND DependentFlag = ISNULL(@DependentFlag, 0) AND IsDeleted = 0;
											
											IF @ColumnCount = 0
											BEGIN
												SET @ValidateMessage = ('Please configure the control columns for '+ @ControlName+ CASE WHEN (@ControlType = 24 OR @ControlType = 25) AND @DependentFlag = 1 THEN ' dependent' ELSE '' END);
												BREAK
											END  
											ELSE IF @DependentFlag = 1
											BEGIN
												SET @SCount = 0;
												DELETE FROM #tempControlColumns;
												INSERT INTO #tempControlColumns (ReferenceID, DisplayName, ColumnName, ControlType, DataType, FkType, FkTable, FkColumn, FkData, DependentFlag)
												SELECT ReferenceID, DisplayName, ColumnName, ControlType, DataType, FkType, FkTable, FkColumn, FkData, DependentFlag
												FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND TabID = TabID AND GroupID = @GroupboxID AND ControlID = @ControlID AND IsDeleted = 0 ORDER BY ColumnOrder ASC;

												UPDATE #tempControlColumns SET @SCount = SNum = @SCount + 1;
												SET @ColumnMin = 0;

												WHILE @ColumnCount > @ColumnMin
												BEGIN
													SET @ColumnControlType = 0;
													SET @Query = 'SELECT @TempControlID = ReferenceID FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempControlID INT OUT', @ControlID OUT

													SET @Query = 'SELECT @TempControlName = DisplayName FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempControlName NVARCHAR(100) OUT', @ControlName OUT

													SET @Query = 'SELECT @TempColumnName = ColumnName FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempColumnName VARCHAR(100) OUT', @ColumnName OUT

													SET @Query = 'SELECT @TempControlType = ControlType FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempControlType INT OUT', @ColumnControlType OUT

													SET @Query = 'SELECT @TempFkType = FkType FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempFkType INT OUT', @FkType OUT

													SET @Query = 'SELECT @TempFkTable = FkTable FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempFkTable VARCHAR(100) OUT', @FkTable OUT
										
													SET @Query = 'SELECT @TempFkColumn = FkColumn FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempFkColumn VARCHAR(100) OUT', @FkColumn OUT

													SET @Query = 'SELECT @TempFkData = FkColumn FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempFkData VARCHAR(100) OUT', @FkData OUT

													SET @Query = 'SELECT @TempDependentFlag = DependentFlag FROM #tempControlColumns WHERE SNum = '+CAST((@ColumnMin+ 1) AS VARCHAR(50));
													EXEC SP_EXECUTESQL @Query, N'@TempDependentFlag BIT OUT', @ColumnDependentFlag OUT
													
													SELECT @DependentControlCount = COUNT(1) FROM FormControlConfig 
													WHERE FormID = @IN_ConfigID AND TableColumn = @ColumnName AND ControlType <> 18 AND ControlType <> 19 
														-- AND ControlType <> 24 AND ControlType <> 25 
														AND IsDeleted = 0;

													IF @DependentControlCount = 0 AND @ControlType <> 24 AND @ControlType <> 25 
													BEGIN
														SET @ValidateMessage = 'The Column Name is doesn''t match with existing controls';
														BREAK;
													END
													ELSE
													BEGIN
														SELECT @ControlDataType = COUNT(1) FROM FormControlConfig 
														WHERE FormID = @IN_ConfigID AND TableColumn = @ColumnName AND DataType = @DataType AND IsDmlControl = 1 AND IsDeleted = 0;

														IF @ControlDataType = 0 AND @ColumnDependentFlag = 0 AND @ControlType <> 24 AND @ControlType <> 25 
														BEGIN
														  SET @ValidateMessage = 'The Control Type or Data Type is doesn''t match with control '+ @ColumnName;
														  BREAK
														END
													END

													IF @SearchApplicable = 1
													BEGIN
														SELECT @SearchCount = COUNT(1) FROM FormSearchControlsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND DependentFlag = 1 AND IsDeleted = 0;
														
														SET @SCount = 0;
														DELETE FROM #tempSearchControls;
														INSERT INTO #tempSearchControls (ReferenceID, Name)
														SELECT ReferenceID, Name
														FROM FormSearchControlsConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND IsDeleted = 0 ORDER BY SearchOrder ASC;

														UPDATE #tempSearchControls SET @SCount = SNum = @SCount + 1;

														SET @SearchMin = 0;                        
														WHILE @SearchCount > @SearchMin
														BEGIN															
															SET @Query = 'SELECT @TempSearchID = ReferenceID FROM #tempSearchControls WHERE SNum = '+CAST((@SearchMin+ 1) AS VARCHAR(50));
															EXEC SP_EXECUTESQL @Query, N'@TempSearchID INT OUT', @SearchID OUT

															SET @Query = 'SELECT @TempName = DisplayName FROM #tempSearchControls WHERE SNum = '+CAST((@SearchMin+ 1) AS VARCHAR(50));
															EXEC SP_EXECUTESQL @Query, N'@TempName NVARCHAR(100) OUT', @Name OUT
														  
															SELECT @SearchColumnCount = COUNT(1) FROM FormSearchColumnsConfig WHERE FormID = @IN_ConfigID AND SearchID = @SearchID AND IsDeleted = 0;
															IF @SearchColumnCount = 0
															BEGIN
																SET @ValidateMessage = ('Please configure the columns for search control - '+ @Name);
																BREAK;
															END

															SET @SearchMin = @SearchMin + 1;
														END
													  END

													SET @ColumnMin = @ColumnMin + 1;
												END
											END
											ELSE IF @ControlType = 19 OR @ControlType = 24 OR @ControlType = 25
											BEGIN
												SELECT @PropertyCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @ControlID AND Type = 'Control' AND IsDeleted = 0;
												
												IF @PropertyCount = 0
												BEGIN
													SET @ValidateMessage = ('Please configure the spl. properties for '+ @ControlName);
													BREAK
												END
											END

											IF @ControlType = 18 OR @ControlType = 19 OR @ControlType = 24 OR @ControlType = 25
											BEGIN
												SET @ColumnMin = 0;
												SET @SCount = 0;
												SELECT @ColumnCount = COUNT(1) FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND GroupID = @GroupboxID AND ControlID = @ControlID AND IsDeleted = 0;
												
												DELETE FROM #tempControlColumns;
												INSERT INTO #tempControlColumns (ReferenceID, DisplayName, ColumnName, ControlType, DataType, FkType, FkTable, FkColumn, FkData)
												SELECT ReferenceID, DisplayName, ColumnName, ControlType, DataType, FkType, FkTable, FkColumn, FkData
												FROM FormControlColumnsConfig WHERE FormID = @IN_ConfigID AND TabID = TabID AND GroupID = @GroupboxID AND ControlID = @ControlID AND IsDeleted = 0 ORDER BY ColumnOrder ASC;
												UPDATE #tempControlColumns SET @SCount = SNum = @SCount + 1;
												
												WHILE @ColumnCount > @ColumnMin
												BEGIN
													SET @ColumnMin = @ColumnMin + 1;
													SET @PropControlID = 0;
													SELECT @PropControlID = ReferenceID, @ControlName = DisplayName, @ColumnName = ColumnName, @ControlType = ControlType, @DataType = DataType,
															@FkType = FkType, @FkTable = FkTable, @FkColumn = FkColumn, @FkData = FkData 
													FROM #tempControlColumns WHERE SNum = @ColumnMin;

													SELECT @ColumnPropertyCount = COUNT(1) FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @PropControlID AND Type = 'Column' AND IsDeleted = 0;
													SET @PropertyMin = 0;
													SET @Column1Table = '';
													SET @Column2Table = '';
													SET @Column3Table = '';

													SET @SCount = 0;
													DELETE FROM #tempColumnProperty;
													INSERT INTO #tempColumnProperty (PropertyName, PropertyValue)
													SELECT PropertyName, PropertyValue
													FROM FormControlPropertyConfig WHERE FormID = @IN_ConfigID AND ControlID = @PropControlID AND IsDeleted = 0 AND Type = 'Column' ORDER BY OrderBy ASC;
												--	UPDATE #tempColumnProperty SET @SCount = SNum = @SCount + 1;
									
													WHILE @ColumnPropertyCount > @PropertyMin
													BEGIN
													  SET @PropertyName = '';
													  SET @PropertyValue = '';
													  SET @PropertyMin = @PropertyMin + 1;

													  SELECT @PropertyName = PropertyName, @PropertyValue = PropertyValue 
													  FROM #tempColumnProperty WHERE SNum = @PropertyMin;

													  IF @PropertyName = 'Column1 Table'
													  BEGIN
														  SET @Column1Table = @PropertyValue;
														  SELECT @PropertyTableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @PropertyValue;
                                  
														  IF @PropertyTableCount = 0 
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column1 Table is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column1 Parent'
													  BEGIN
														  SELECT @PropertyColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @Column1Table AND COLUMN_NAME = @PropertyValue;
                                  
														  IF @PropertyColumnCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column1 Parent Column is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column1 Data'
													  BEGIN
														  SELECT @PropertyColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @Column1Table AND COLUMN_NAME = @PropertyValue;
                                  
														  IF @PropertyColumnCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column1 Table Column is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
  
													  IF @PropertyName = 'Column2 Table'
													  BEGIN
														  SET @Column2Table = @PropertyValue;
														  SELECT @PropertyTableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @PropertyValue;
                                  
														  IF @PropertyTableCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column2 Table is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column2 Parent'
													  BEGIN
														  SELECT @PropertyColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @Column2Table AND COLUMN_NAME = @PropertyValue;
                                  
														  IF @PropertyColumnCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column2 Parent Column is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column2 Data'
													  BEGIN
														  SELECT @PropertyColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @Column2Table AND COLUMN_NAME = @PropertyValue;
                                  
														  IF @PropertyColumnCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column2 Table Column is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column3 Table'
													  BEGIN
														  SET @Column3Table = @PropertyValue;
														  SELECT @PropertyTableCount = COUNT(1) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @PropertyValue;
                                  
														  IF @PropertyTableCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column3 Table is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column3 Parent'
													  BEGIN
														  SELECT @PropertyColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @Column3Table AND COLUMN_NAME = @PropertyValue;
                                  
														  IF @PropertyColumnCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column3 Parent Column is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  IF @PropertyName = 'Column3 Data'
													  BEGIN
														  SELECT @PropertyColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @Column3Table AND COLUMN_NAME = @PropertyValue;
                                  
														  IF @PropertyColumnCount = 0
														  BEGIN
															SET @ValidateMessage = ('The Column Property Column3 Table Column is not exist for '+ @ControlName);
															BREAK;
														  END
													  END
													  --IF @PropertyName = 'DS ParentColumn'
													  --BEGIN
														 -- SELECT @PropertyColumnCount = COUNT(1)  FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FkTable AND COLUMN_NAME = @PropertyValue;
                                  
														 -- IF @PropertyColumnCount = 0
														 -- BEGIN
															--SET @ValidateMessage = ('The Column Property Datasource Parent Column is not exist for '+ @ControlName);
															--BREAK;
														 -- END
													  --END
													  --IF @PropertyName = 'DS ChildColumn'
													  --BEGIN
														 -- SELECT @PropertyColumnCount = COUNT(1)  FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @FkTable AND COLUMN_NAME = @PropertyValue;
                                  
														 -- IF @PropertyColumnCount = 0
														 -- BEGIN
															--SET @ValidateMessage = ('The Column Property Datasource Child Column is not exist for '+ @ControlName);
															--BREAK;
														 -- END
													  --END                         
													END 													
												END                          
											 END  
										END                                 
          
										SET @ControlMin = @ControlMin + 1;
									END
              
									IF @ValidateMessage <> ''
									BEGIN
										BREAK
									END
  							
								END

								SET @GroupMin = @GroupMin + 1;  
								IF @ValidateMessage <> ''
								BEGIN
									BREAK
								END  
							END
						END 						
						SET @TabMin = @TabMin + 1; 
					END
					
					IF OBJECT_ID('tempdb..#tempTableColumns') IS NOT NULL
						DROP TABLE #tempTableColumns

					CREATE TABLE #tempTableColumns (
						SNum INT NULL,
						TableName VARCHAR(255) NOT NULL,
						ColumnName VARCHAR(100) NULL,        
						IsIdentity BIT NULL,
						IsIndex BIT NULL,
						IsDml BIT NULL, 
						ButtonID BIGINT NULL,
						GroupboxID BIGINT NULL,
						ControlType INT NULL)
						
					INSERT INTO #tempTableColumns (TableName, ColumnName, IsIdentity, IsIndex, IsDml, ButtonID, GroupboxID, ControlType)
					SELECT DISTINCT(TableName), ColumnName, IsIdentity, IsIndex, IsDml, ButtonID, GroupboxID, ControlType
					FROM #tempTableDetails;

					UPDATE #tempTableColumns SET @CCount = SNum = @CCount + 1;

					IF OBJECT_ID('tempdb..#tempTables') IS NOT NULL
						DROP TABLE #tempTables

					CREATE TABLE #tempTables (SNum INT NULL, TableName VARCHAR(255) NOT NULL)
						
					INSERT INTO #tempTables (TableName)
					SELECT DISTINCT(TableName) FROM #tempTableColumns; 
			  
					SELECT @FormTableCount = COUNT(1) FROM #tempTables;
					SET @TableMin = 0;SET @TCount = 0;
			  
					UPDATE #tempTables SET @TCount = SNum = @TCount + 1;
					
					WHILE (@FormTableCount > @TableMin)
					BEGIN
					  SET @Query = ('SELECT @qTableName = TableName FROM #tempTables WHERE SNum = '+ CAST((@TableMin+ 1) AS VARCHAR(50)));
			  
					  EXEC SP_EXECUTESQL @Query, N'@qTableName NVARCHAR(100) OUT', @tmpTableName OUT
					  
					  SELECT @IdentityCount = COUNT(1) FROM #tempTableColumns WHERE TableName = @tmpTableName AND IsIdentity = 1 AND ControlType <> 18 AND ControlType <> 19 AND ISNULL(ButtonID, 0) = 0;
					  IF @IdentityCount > 1
					  BEGIN
						SET @ValidateMessage = (@tmpTableName+ ' table should have only one identity column');
						BREAK;
					  END
			  
					 -- SELECT @IsIndexCount = COUNT(1) FROM #tempTableColumns WHERE TableName = @tmpTableName AND IsIndex = 1;
					 -- IF @IsIndexCount > 3
					 -- BEGIN
						--SET @ValidateMessage = (@tmpTableName+ ' table should have only three index columns');
						--BREAK;
					 -- END
					  
					  SELECT @ColumnCount = COUNT(1) FROM #tempTableColumns WHERE TableName = @tmpTableName AND IsDml = 1;
					  SET @ColumnMin = 0;
					  WHILE (@ColumnCount > @ColumnMin)
					  BEGIN
						SET @Query = ('SELECT @qColumnName = ColumnName FROM #tempTableColumns WHERE SNum = '+ CAST((@ColumnMin+ 1) AS VARCHAR(50)));
			  
						EXEC SP_EXECUTESQL @Query, N'@qColumnName NVARCHAR(100) OUT', @ColumnName OUT

						SELECT @DmlCount = COUNT(1) FROM #tempTableColumns WHERE TableName = @tmpTableName AND ColumnName = @ColumnName AND IsDml = 1 AND ISNULL(ButtonID, 0) = 0;
						IF @DmlCount > 1
						BEGIN
							SET @ValidateMessage = ('Should have only one dml control for '+ @ColumnName);
							BREAK;
						END

						SET @ColumnMin = @ColumnMin + 1;
					  END
			  
					  SET @TableMin = @TableMin + 1;
					END
				END
			END

			IF OBJECT_ID('tempdb..#tempFormTabs') IS NOT NULL
					DROP TABLE #tempFormTabs
			IF OBJECT_ID('tempdb..#tempFormGroupbox') IS NOT NULL
				DROP TABLE #tempFormGroupbox
			IF OBJECT_ID('tempdb..#tempFormControls') IS NOT NULL
				DROP TABLE #tempFormControls
			IF OBJECT_ID('tempdb..#tempControlColumns') IS NOT NULL
				DROP TABLE #tempControlColumns
			IF OBJECT_ID('tempdb..#tempSearchControls') IS NOT NULL
				DROP TABLE #tempSearchControls
			IF OBJECT_ID('tempdb..#tempColumnProperty') IS NOT NULL
				DROP TABLE #tempColumnProperty				

			IF @ValidateMessage = ''
			BEGIN
				UPDATE FormConfiguration SET Status = 3, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @GMTTime WHERE ReferenceID = @IN_ConfigID; 
				EXEC spFormTableColumnPreparation @IN_ConfigID, @IN_FormID, @IN_UserID;

				INSERT INTO FormControlAutoGenerateConfig (FormID, ConfigTypeID, ControlID, CountBasisID, StartingNumber, 
					DigitsCount, CompanyID, OrderBy, Version, IsCurrentVersion, 
					IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT) 
				SELECT FCC.FormID, 1, FCC.ReferenceID, 1, 1, 1, @CompanyID, 
					ISNULL((SELECT MAX(AG.OrderBy) FROM FormControlAutoGenerateConfig AG WHERE AG.FormID = FCC.FormID), 0) + ROW_NUMBER() OVER(ORDER BY FCC.ReferenceID),
					1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
				FROM FormControlConfig FCC
				WHERE FCC.FormID = @IN_ConfigID AND FCC.IsAutoGenerate = 1
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlAutoGenerateConfig TL WHERE TL.FormID = FCC.FormID 
						AND TL.ConfigTypeID = 1 AND TL.ControlID = FCC.ReferenceID
						AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1);

				INSERT INTO FormControlAutoGenerateConfig (FormID, ConfigTypeID, ControlID, CountBasisID, StartingNumber, 
					DigitsCount, CompanyID, OrderBy, Version, IsCurrentVersion, 
					IsDeleted, NotActive, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT) 
				SELECT FCC.FormID, 2, FCC.ReferenceID, 1, 1, 1, @CompanyID, 
					ISNULL((SELECT MAX(AG.OrderBy) FROM FormControlAutoGenerateConfig AG WHERE AG.FormID = FCC.FormID), 0) + ROW_NUMBER() OVER(ORDER BY FCC.ReferenceID),
					1, 1, 0, 0, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime
				FROM FormControlColumnsConfig FCC
				WHERE FCC.FormID = @IN_ConfigID AND FCC.IsAutoGenerate = 1
					AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlAutoGenerateConfig TL WHERE TL.FormID = FCC.FormID 
						AND TL.ConfigTypeID = 2 AND TL.ControlID = FCC.ReferenceID
						AND TL.IsDeleted = 0 AND TL.NotActive = 0 AND TL.IsCurrentVersion = 1);

				UPDATE AG
				SET IsDeleted = 1,
					DeletedBy = @IN_UserID,
					DeletedDate = @UTCTime,
					DeletedDateGMT = @GMTTime,
					DeleteReason = 'Auto delete while form validation'
				FROM FormControlAutoGenerateConfig AG
				WHERE AG.FormID = @IN_ConfigID AND AG.ConfigTypeID = 1
					AND AG.IsDeleted = 0 AND AG.NotActive = 0 AND AG.IsCurrentVersion = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlConfig FCC WHERE FCC.FormID = AG.FormID 
						AND FCC.ReferenceID = AG.ControlID AND FCC.IsAutoGenerate = 1
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1);

				UPDATE AG
				SET IsDeleted = 1,
					DeletedBy = @IN_UserID,
					DeletedDate = @UTCTime,
					DeletedDateGMT = @GMTTime,
					DeleteReason = 'Auto delete while form validation'
				FROM FormControlAutoGenerateConfig AG
				WHERE AG.FormID = @IN_ConfigID AND AG.ConfigTypeID = 2
					AND AG.IsDeleted = 0 AND AG.NotActive = 0 AND AG.IsCurrentVersion = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlColumnsConfig FCC WHERE FCC.FormID = AG.FormID 
						AND FCC.ReferenceID = AG.ControlID AND FCC.IsAutoGenerate = 1
						AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1);

				SET @ValidateMessage = 'Successfully validated';
			END

			SELECT @ValidateMessage;
	
	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowClearControlProcess]'
GO

CREATE PROCEDURE [dbo].[spWorkflowClearControlProcess] (@IN_WorkflowID BIGINT, @IN_ID BIGINT, @IN_Type VARCHAR(100), @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_ClearWFControlProcess

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50)

			IF @IN_Type = 'FormControls'
				DELETE FROM WorkflowControlProcess WHERE WorkflowID = @IN_WorkflowID AND ProcessID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'ControlColumns'
				DELETE FROM WorkflowControlColumnsProcess WHERE WorkflowID = @IN_WorkflowID AND ControlID = @IN_ID AND UserID = @IN_UserID;
			ELSE IF @IN_Type = 'GridControlColumns'
				DELETE FROM WorkflowGridControlColumnsProcess WHERE WorkflowID = @IN_WorkflowID AND GridColumnID = @IN_ID AND UserID = @IN_UserID;

		COMMIT TRANSACTION tran_ClearWFControlProcess
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ClearWFControlProcess

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowControlProcessEntry]'
GO

CREATE PROCEDURE [dbo].[spWorkflowControlProcessEntry] (@IN_UserID INT, @IN_Type VARCHAR(100), @IN_WorkflowID BIGINT, @IN_TabID BIGINT, @IN_ProcessID BIGINT, @IN_ControlID BIGINT, @IN_ColumnID BIGINT,
	@IN_Name NVARCHAR(100), @IN_TableColumn VARCHAR(255), @IN_ColumnName1 VARCHAR(255), @IN_ColumnName2 VARCHAR(255), @IN_ControlType INT, @IN_DataType INT, 
	@IN_IsMandatory BIT, @IN_Visibility BIT, @IN_Readonly BIT, @IN_IsMobile BIT, @IN_IsWizard BIT,
	@IN_DataBaseDecimalLength INT, @IN_DecimalLength INT, @IN_MaxLength INT, @IN_UniqueGroup VARCHAR(100), @IN_IsEncrypt BIT, @IN_VersionCheck BIT, @IN_IsIdentity BIT, @IN_IsDmlControl BIT, @IN_IsReturnFill BIT,
	@IN_IsNoAdd BIT, @IN_IsNoUpdate BIT, @IN_FkType INT, @IN_FkTable VARCHAR(255), @IN_FkColumn VARCHAR(255), @IN_FkData VARCHAR(255), @IN_FkData1 VARCHAR(255), @IN_FkData2 VARCHAR(255),
	@IN_AdditionalConditions NVARCHAR(1000), @IN_FkOrder INT, @IN_FkDelete BIT, @IN_FkNotActive BIT, @IN_FkVersion BIT,
	@IN_FkShowActive BIT, @IN_DefaultValue NVARCHAR(2000), @IN_MaxRange NVARCHAR(2000), @IN_IsUpload BIT, @IN_IsDownload BIT, @IN_IsView BIT, @IN_IsDelete BIT, @IN_SelectApplicable BIT, @IN_SearchApplicable BIT, @IN_Events NVARCHAR(MAX),
	@IN_ValidationEvent NVARCHAR(MAX), @IN_FillEvent NVARCHAR(MAX), @IN_ControlEventType INT, @IN_ValidationEventType INT, @IN_FillEventType INT,
	@IN_AttachmentPath NVARCHAR(255), @IN_ControlOrder INT, @IN_DependentFlag BIT, @IN_ButtonID VARCHAR(100), @IN_IsDefaultControl BIT, @IN_IsSelectAll BIT, 
	@IN_IsGridDataSource BIT, @IN_ColumnWidth VARCHAR(255), @IN_DataTreeCondition VARCHAR(1000), @IN_IsUTC BIT, @IN_IsCurrency BIT, @IN_CurrencyColumn VARCHAR(100), @IN_IsIndex BIT,
	@IN_IsPrimary BIT, @IN_IsFixed BIT, @IN_FilterConditions NVARCHAR(1000), @IN_GridHeader VARCHAR(500), @IN_GridType BIT, @IN_OrderBy VARCHAR(10), 
	@IN_OrderByColumn VARCHAR(100), @IN_PageSize INT, @IN_DependentType INT, @IN_ApplicableProcess VARCHAR(1000), @IN_GridParentControl VARCHAR(100), 
	@IN_ProcessType VARCHAR(15), @IN_DateFilterType INT, @IN_ColumnCreation BIT, @IN_DataVariable BIT, @IN_IsAutoGenerate BIT, @IN_DateDifference NVARCHAR(100), @IN_Description NVARCHAR(MAX), @IN_AttachmentMaxSize INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_WorkflowControlProcessEntry

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@CompanyID INT = 0

			SET @CompanyID = ISNULL((SELECT CompanyID FROM TlsWorkflowDetails WHERE ReferenceID = @IN_WorkflowID), 0);	
			
			IF ISNULL(@IN_DateDifference, '') = ''
				SET @IN_DateDifference = NULL;

			IF @IN_Type = 'FormControls'
			BEGIN
				INSERT INTO WorkflowControlProcess (UserID, WorkflowID, ProcessID, ColumnID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard,
					DataBaseDecimalLength, DecimalLength, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
					 IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, FkOrder, FkDelete,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, DataTreeCondition, IsUTC, IsCurrency, CurrencyColumn, IsIndex,
					IsUpload, IsDownload, IsView, IsDelete, IsFixed, FilterConditions, ColumnCreation, DataVariable, IsAutoGenerate, IsSelectAll, DateDifference, Description, AttachmentMaxSize)
				VALUES (@IN_UserID, @IN_WorkflowID, @IN_ProcessID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory,
					@IN_IsMobile, @IN_IsWizard, @IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, 0, @IN_SelectApplicable, @IN_DefaultValue, @IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_IsDmlControl,
					@IN_IsEncrypt, @IN_IsReturnFill, @IN_IsNoAdd, @IN_IsNoUpdate, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, @IN_FkData1, @IN_FkData2, @IN_AdditionalConditions, @IN_FillEvent, @IN_ControlEventType, @IN_ValidationEventType, @IN_FillEventType,
					@IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, @IN_ControlOrder, @IN_DependentFlag, @IN_ButtonID, @IN_IsDefaultControl, @IN_DataTreeCondition, @IN_IsUTC, @IN_IsCurrency, 
					@IN_CurrencyColumn, @IN_IsIndex, @IN_IsUpload, @IN_IsDownload, @IN_IsView, @IN_IsDelete, @IN_IsFixed, @IN_FilterConditions, @IN_ColumnCreation, 
					@IN_DataVariable, @IN_IsAutoGenerate, @IN_IsSelectAll, @IN_DateDifference, @IN_Description, @IN_AttachmentMaxSize);
			END
			ELSE IF @IN_Type = 'ControlColumns'
			BEGIN
				INSERT INTO WorkflowControlColumnsProcess (UserID, WorkflowID, ProcessID, ControlID, ColumnID, DisplayName, ColumnName, 
					ColumnName1, ColumnName2, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, DataBaseDecimalLength, DecimalLength, 
					MaxLength, Events, ValidationEvent, FillEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, 
					IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, FkOrder, FkDelete, 
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ControlEventType, 
					ValidationEventType, ColumnWidth, IsUTC, IsCurrency, CurrencyColumn, IsIndex, IsUpload, IsDownload, IsView, IsDelete, 
					IsPrimary, GridHeader, GridType,PageSize, OrderBy, OrderByColumn, GridParentControl, DependentType, ColumnCreation, DataVariable, IsAutoGenerate,
					DateDifference, Description, AttachmentMaxSize, IsNoUpdate)
				VALUES (@IN_UserID, @IN_WorkflowID, @IN_ProcessID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ColumnName1, 
					@IN_ColumnName2, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory, @IN_IsMobile, @IN_IsWizard,
					@IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_FillEvent, @IN_SearchApplicable, @IN_SelectApplicable, 
					@IN_DefaultValue, @IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_IsDmlControl, @IN_FkType, @IN_FkTable, @IN_FkColumn, 
					@IN_FkData, @IN_FkData1, @IN_FkData2, @IN_AdditionalConditions, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, 
					@IN_ControlOrder, @IN_DependentFlag, @IN_IsSelectAll, @IN_ControlEventType, @IN_ValidationEventType, @IN_ColumnWidth, @IN_IsUTC, 
					@IN_IsCurrency, @IN_CurrencyColumn, @IN_IsIndex, @IN_IsUpload, @IN_IsDownload, @IN_IsView, @IN_IsDelete, @IN_IsPrimary, 
					@IN_GridHeader, @IN_GridType, @IN_PageSize, @IN_OrderBy, @IN_OrderByColumn, @IN_GridParentControl, @IN_DependentType, @IN_ColumnCreation, 
					@IN_DataVariable, @IN_IsAutoGenerate, @IN_DateDifference, @IN_Description, @IN_AttachmentMaxSize, @IN_IsNoUpdate);
			END
			ELSE IF @IN_Type = 'GridControlColumns'
			BEGIN
				INSERT INTO WorkflowGridControlColumnsProcess (UserID, WorkflowID, ProcessID, GridColumnID, ColumnID, DisplayName, ColumnName, 
					ColumnName1, ColumnName2, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, DataBaseDecimalLength, DecimalLength, 
					MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, MaxRange, AttachmentPath, IsIdentity, 
					UniqueGroup, ColumnWidth, IsDmlControl, FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete,FkNotActive, 
					FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll, ControlEventType, ValidationEventType, IsDataSource, 
					IsCurrency, CurrencyColumn, DependentFlag, DependentType, DateDifference, Description, AttachmentMaxSize)
				VALUES (@IN_UserID, @IN_WorkflowID, @IN_ProcessID, @IN_ControlID, @IN_ColumnID, @IN_Name, @IN_TableColumn, @IN_ColumnName1, 
					@IN_ColumnName2, @IN_ControlType, @IN_DataType, @IN_Visibility, @IN_Readonly, @IN_IsMandatory, @IN_IsMobile, @IN_IsWizard,
					@IN_DataBaseDecimalLength, @IN_DecimalLength, @IN_MaxLength, @IN_Events, @IN_ValidationEvent, @IN_SearchApplicable, @IN_SelectApplicable, @IN_DefaultValue, 
					@IN_MaxRange, @IN_AttachmentPath, @IN_IsIdentity, @IN_UniqueGroup, @IN_ColumnWidth, @IN_IsDmlControl, @IN_FkType, @IN_FkTable, @IN_FkColumn, @IN_FkData, 
					@IN_AdditionalConditions, @IN_FkOrder, @IN_FkDelete, @IN_FkNotActive, @IN_FkVersion, @IN_FkShowActive, @IN_VersionCheck, 
					@IN_ControlOrder, @IN_IsSelectAll, @IN_ControlEventType, @IN_ValidationEventType, @IN_IsGridDataSource, @IN_IsCurrency, 
					@IN_CurrencyColumn, @IN_DependentFlag, @IN_DependentType, @IN_DateDifference, @IN_Description, @IN_AttachmentMaxSize);
			END
		COMMIT TRANSACTION tran_WorkflowControlProcessEntry
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_WorkflowControlProcessEntry

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowGetControlList]'
GO

CREATE PROCEDURE [dbo].[spWorkflowGetControlList] (@IN_WorkflowID BIGINT, @IN_ID BIGINT, @IN_Type VARCHAR(100), @IN_IsEventFlag BIT, @IN_LanguageID INT, @IN_ProcessType VARCHAR(15), @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50)

		IF @IN_Type = 'FormControls' 
		BEGIN
			SELECT FCC.WorkflowID AS FormID, FCC.ProcessID AS TabID, FCC.ProcessID AS GroupID, FCC.ReferenceID AS ControlID, 
				FCC.ReferenceID AS ColumnID, ISNULL(FCC.Name, '') AS ControlName, FCC.TableColumn, '' AS ColumnName1, '' AS ColumnName2, 
				FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, 
				FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength, FCC.Events, 
				FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, FCC.AttachmentPath, FCC.IsIdentity, 
				FCC.UniqueGroup, FCC.IsDmlControl, FCC.IsEncrypt, FCC.IsReturnFill, FCC.IsNoAdd, FCC.IsNoUpdate, FCC.FkType, FCC.FkTable, 
				FCC.FkColumn, FCC.FkData, ISNULL(FCC.FkData1, '') AS FkData1, ISNULL(FCC.FkData2, '') AS FkData2, FCC.AdditionalConditions, FCC.FillEvent,
				FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck, FCC.ControlOrder, FCC.DefaultControl, FCC.ButtonID,
				FCC.DependentFlag, ISNULL(FCC.IsSelectAll, 0) AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, FCC.FillEventType, 0 AS IsDataSource, 0 AS ColumnWidth, 
				ISNULL(FCC.DataTreeCondition, '') AS DataTreeCondition, ISNULL(FCC.IsUTC, 0) AS IsUTC, 0 AS DependentType,
				ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength,
				ISNULL(FCC.IsCurrency, 0) AS IsCurrency, ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, 
				ISNULL(FCC.IsIndex, 0) AS IsIndex, ISNULL(FCC.IsUpload, 0) AS IsUpload, ISNULL(FCC.IsDownload, 0) AS IsDownload, 
				ISNULL(FCC.IsView, 0) AS IsView, ISNULL(FCC.IsDelete, 0) AS IsDelete, 0 AS IsPrimary, ISNULL(FCC.IsFixed, 0) AS IsFixed, 
				ISNULL(FCC.FilterConditions, '') As FilterConditions, '' AS GridHeader, 0 AS GridType, '' AS OrderBy, 
				'' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl, 0 AS DateFilterType, 
				ISNULL(FCC.ColumnCreation, 0) AS ColumnCreation, ISNULL(FCC.DataVariable, 1) AS DataVariable, ISNULL(FCC.IsAutoGenerate, 0) AS IsAutoGenerate, 
				ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), NULL) AS DateDifference,  ISNULL(FCC.Description, '') AS Description, ISNULL(FCC.AttachmentMaxSize, 0) AS AttachmentMaxSize
			FROM WorkflowControlConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.WorkflowID = @IN_WorkflowID AND FCC.ProcessID = @IN_ID
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.ControlOrder;
		END
		ELSE IF @IN_Type = 'ControlColumns' 
		BEGIN
			SELECT FCC.WorkflowID AS FormID, FCC.ProcessID AS TabID, FCC.ProcessID AS GroupID, FCC.ControlID AS ControlID, FCC.ReferenceID AS ColumnID, 
				ISNULL(FCC.DisplayName, '') AS ControlName, FCC.ColumnName AS TableColumn, FCC.ColumnName1 AS ColumnName1, FCC.ColumnName2 AS ColumnName2, 
				FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, 
				FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength, FCC.Events, 
				FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, FCC.AttachmentPath, FCC.IsIdentity, 
				FCC.UniqueGroup, FCC.IsDmlControl, 0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, FCC.IsNoUpdate AS IsNoUpdate, FCC.FkType, FCC.FkTable, 
				FCC.FkColumn, FCC.FkData, ISNULL(FCC.FkData1, '') AS FkData1, ISNULL(FCC.FkData2, '') AS FkData2, FCC.AdditionalConditions, 
				ISNULL(FCC.FillEvent, '') AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, FCC.FkShowActive, FCC.VersionCheck,
				FCC.ColumnOrder AS ControlOrder, 0 AS DefaultControl, 0 AS ButtonID, CASE WHEN FC.ControlType = 19 THEN ISNULL(FCC.DependentFlag, 0) ELSE 0 END AS DependentFlag, FCC.SelectAll AS SelectAll, 
				FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, 0 AS IsDataSource, FCC.ColumnWidth AS ColumnWidth, 
				'' AS DataTreeCondition, ISNULL(FCC.IsUTC, 0) AS IsUTC, FCC.DependentType AS DependentType,
				ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, 
				ISNULL(FCC.IsCurrency, 0) AS IsCurrency, ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, ISNULL(FCC.IsIndex, 0) AS IsIndex,
				ISNULL(FCC.IsUpload, 0) AS IsUpload, ISNULL(FCC.IsDownload, 0) AS IsDownload, ISNULL(FCC.IsView, 0) AS IsView,
				ISNULL(FCC.IsDelete, 0) AS IsDelete, ISNULL(FCC.IsPrimary, 0) AS IsPrimary, 0 AS IsFixed,
				'' As FilterConditions, ISNULL(FCC.GridHeader, '') AS GridHeader, ISNULL(FCC.GridType, 0) AS GridType, 
				ISNULL(FCC.OrderByValue, '') AS OrderBy, ISNULL(FCC.OrderByColumn, '') AS OrderByColumn, 
				ISNULL(FCC.PageSize, 0) AS PageSize, '' AS ApplicableProcess, ISNULL(FCC.GridParentControl, '') AS GridParentControl,
				0 AS DateFilterType, ISNULL(FCC.ColumnCreation, 0) AS ColumnCreation, ISNULL(FCC.DataVariable, 1) AS DataVariable,
				ISNULL(FCC.IsAutoGenerate, 0) AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), NULL) AS DateDifference,  ISNULL(FCC.Description, '') AS Description, ISNULL(FCC.AttachmentMaxSize, 0) AS AttachmentMaxSize
			FROM WorkflowControlColumnsConfig FCC
				JOIN WorkflowControlConfig FC ON FC.ReferenceID = FCC.ControlID AND FC.IsDeleted = 0
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.WorkflowID = @IN_WorkflowID AND FCC.ControlID = @IN_ID AND (FCC.DependentFlag = @IN_IsEventFlag OR FC.ControlType = 19)
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.ColumnOrder;
		END
		ELSE IF @IN_Type = 'GridControlColumns' 
		BEGIN
			SELECT FCC.WorkflowID AS FormID, FCC.ProcessID AS TabID, FCC.ProcessID AS GroupID, FCC.ColumnID AS ControlID, FCC.ReferenceID AS ColumnID, 
				ISNULL(FCC.DisplayName, '') AS ControlName, FCC.ColumnName AS TableColumn, FCC.ColumnName1 AS ColumnName1, FCC.ColumnName2 AS ColumnName2, 
				FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, FCC.DataType, FCC.Visibility, FCC.Readonly AS ReadOnly, 
				FCC.IsMandatory, ISNULL(FCC.IsMobile, 0) AS IsMobile, ISNULL(FCC.IsWizard, 0) AS IsWizard, FCC.MaxLength, FCC.Events, 
				FCC.ValidationEvent, FCC.SearchApplicable, FCC.SelectApplicable, FCC.DefaultValue, FCC.MaxRange, FCC.AttachmentPath, FCC.IsIdentity, 
				FCC.UniqueGroup, FCC.IsDmlControl, 0 AS IsEncrypt, 0 AS IsReturnFill, 0 AS IsNoAdd, 0 AS IsNoUpdate, FCC.FkType, FCC.FkTable, 
				FCC.FkColumn, FCC.FkData, '' AS FkData1, '' AS FkData2, FCC.AdditionalConditions, '' AS FillEvent, FCC.FkOrder, FCC.FkDelete, FCC.FkNotActive, FCC.FkVersion, 
				FCC.FkShowActive, FCC.VersionCheck, FCC.ColumnOrder AS ControlOrder, 0 AS DefaultControl, 0 AS ButtonID, FCC.DependentFlag AS DependentFlag, 
				FCC.SelectAll AS SelectAll, FCC.ControlEventType, FCC.ValidationEventType, 0 AS FillEventType, FCC.IsDataSource AS IsDataSource, 
				0 AS ColumnWidth, '' AS DataTreeCondition, 0 AS IsUTC, FCC.DependentType AS DependentType,
				ISNULL(FCC.DataBaseDecimalLength, 4) AS DataBaseDecimalLength, ISNULL(FCC.DecimalLength, 4) AS DecimalLength, 
				ISNULL(FCC.IsCurrency, 0) AS IsCurrency, ISNULL(FCC.CurrencyColumn, '') AS CurrencyColumn, 0 AS IsIndex, 0 AS IsUpload, 
				0 AS IsDownload, 0 AS IsView, 0 AS IsDelete, 0 AS IsPrimary, 0 AS IsFixed, '' As FilterConditions, '' AS GridHeader, 
				0 AS GridType, '' AS OrderBy, '' AS OrderByColumn, 0 AS PageSize, '' AS ApplicableProcess, '' AS GridParentControl,
				0 AS DateFilterType, 0 AS ColumnCreation, 0 AS DataVariable, 0 AS IsAutoGenerate, ISNULL(CAST(FCC.DateDifference AS VARCHAR(50)), NULL) AS DateDifference,
				ISNULL(FCC.Description, '') AS Description, ISNULL(FCC.AttachmentMaxSize, 0) AS AttachmentMaxSize
			FROM WorkflowGridControlColumnsConfig FCC
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE FCC.WorkflowID = @IN_WorkflowID AND FCC.ColumnID = @IN_ID AND ISNULL(FCC.DependentFlag, 0) = @IN_IsEventFlag
				AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
			ORDER BY FCC.ColumnOrder;
		END
		ELSE
			SELECT 1 FROM WorkflowControlConfig WHERE 1 = 2;

		SELECT DISTINCT TableColumn, DataType, CASE WHEN MaxLength <> '-1' THEN MaxLength ELSE '' END 
		FROM WorkflowControlConfig FCC
		WHERE FCC.WorkflowID = @IN_WorkflowID
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		UNION
		SELECT DISTINCT ColumnName, DataType, CASE WHEN MaxLength <> '-1' THEN MaxLength ELSE '' END 
		FROM WorkflowControlColumnsConfig FCC
		WHERE FCC.WorkflowID = @IN_WorkflowID
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1;

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowGetListDetails]'
GO

CREATE PROCEDURE [dbo].[spWorkflowGetListDetails] (@IN_WorkflowID BIGINT, @IN_Tab VARCHAR(100), @IN_LanguageID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50)

		SELECT WD.ReferenceID AS FormID, WD.Name AS FormName, 3 AS FormType, 
			WPD.ReferenceID AS TabID, WPD.Name AS TabName, ISNULL(WPD.IsMandatory, 0) AS MandatoryTab,
			WPD.ReferenceID AS GroupboxID, WPD.Name AS GroupboxName, 0 AS CommonGroup,
			'' AS TableName, 0 AS DefaultControl, WPD.ReferenceID AS ButtonID
		FROM TlsWorkflowDetails WD
			JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = WD.ReferenceID
				AND WPD.IsDeleted = 0 AND WPD.NotActive = 0 AND WPD.IsCurrentVersion = 1
		WHERE WD.ReferenceID = @IN_WorkflowID
		ORDER BY WPD.OrderBy;

		SELECT FCC.WorkflowID AS FormID, FCC.ProcessID AS TabID, FCC.ProcessID AS GroupID, FCC.ReferenceID AS ControlID, 
			FCC.Name AS ControlName, FCC.TableColumn, FCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
			FCC.DataType, FCC.FkType, FCC.FkTable, FCC.FkColumn, FCC.FkData, FCC.ControlOrder,
			WPD.Name AS TabName, WPD.Name AS GroupboxName, FCC.DependentFlag AS EventFlag
		FROM WorkflowControlConfig FCC
			JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = FCC.WorkflowID AND WPD.ReferenceID = FCC.ProcessID
				AND WPD.IsDeleted = 0 AND WPD.NotActive = 0 AND WPD.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
		WHERE WPD.WorkflowID = @IN_WorkflowID AND (CT.CodemasterID IN (18, 19, 24, 25) OR FCC.DependentFlag = 1)
			AND FCC.IsDeleted = 0 AND FCC.NotActive = 0 AND FCC.IsCurrentVersion = 1
		ORDER BY WPD.OrderBy, FCC.ControlOrder;

		SELECT 1 FROM WorkflowControlConfig WHERE 1 = 2;

		SELECT 1 FROM WorkflowControlConfig WHERE 1 = 2;

		SELECT 1 FROM WorkflowControlConfig WHERE 1 = 2;

		SELECT 1 FROM WorkflowControlConfig WHERE 1 = 2;

		SELECT FCC.WorkflowID AS FormID, FCC.ProcessID AS TabID, FCC.ProcessID AS GroupID, CCC.ReferenceID AS ControlID, 
			CCC.DisplayName AS ControlName, CCC.ColumnName, CCC.ControlType, ISNULL(CT.Description, '') AS ControlTypeObject, 
			CCC.DataType, CCC.FkType, CCC.FkTable, CCC.FkColumn, CCC.FkData, CCC.ColumnOrder, WPD.Name AS TabName, 
			WPD.Name AS GroupboxName, CCC.DependentFlag AS EventFlag
		FROM WorkflowControlColumnsConfig CCC
			JOIN WorkflowControlConfig FCC ON FCC.WorkflowID = CCC.WorkflowID AND FCC.ReferenceID = CCC.ControlID 
				AND FCC.ControlType = 19 AND FCC.IsDeleted = 0
			JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = FCC.WorkflowID AND WPD.ReferenceID = FCC.ProcessID
				AND WPD.IsDeleted = 0 AND WPD.NotActive = 0 AND WPD.IsCurrentVersion = 1
			JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = CCC.ControlType
		WHERE CCC.WorkflowID = @IN_WorkflowID AND (CCC.DependentFlag = 1 OR CCC.ControlType = 24 OR CCC.ControlType = 25)
			AND CCC.IsDeleted = 0 AND CCC.NotActive = 0 AND CCC.IsCurrentVersion = 1
		ORDER BY WPD.OrderBy, FCC.ControlOrder, CCC.ColumnOrder;

END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowProcessDefaultControls]'
GO

CREATE PROCEDURE [dbo].[spWorkflowProcessDefaultControls] (@IN_WorkflowID BIGINT, @IN_ProcessID BIGINT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_WFProcessDefaultControls

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@CompanyID INT = 0,
					@StatusMaster NVARCHAR(500),
					@StatusColumn VARCHAR(255),
					@DefaultValue INT = 0

			SELECT @CompanyID = CompanyID, @StatusMaster = StatusMaster, @StatusColumn = StatusColumn
			FROM TlsWorkflowDetails 
			WHERE ReferenceID = @IN_WorkflowID;

			IF NOT EXISTS (SELECT 1 FROM WorkflowControlConfig WHERE WorkflowID = @IN_WorkflowID AND ProcessID = @IN_ProcessID 
					AND TableColumn = 'ReferenceID' AND ISNULL(IsDeleted, 0) = 0) 
			BEGIN
				INSERT INTO WorkflowControlConfig (WorkflowID, ProcessID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, 
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FilterConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, 
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, 
					DataTreeCondition, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_WorkflowID, @IN_ProcessID, 'ReferenceID', 'ReferenceID', 1, 1, 0, 1, 0, 1, 1, -1, '', '', 0, 0, '', '', 1, 
					'', 0, 0, 1, 0, 0, 0, '', '', '', '', '', '', 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, @IN_ProcessID,
					0, '', 0, 0, '', 0, @CompanyID, 1, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;
			END

			IF NOT EXISTS (SELECT 1 FROM WorkflowControlConfig WHERE WorkflowID = @IN_WorkflowID AND ProcessID = @IN_ProcessID 
					AND TableColumn = @StatusColumn AND ISNULL(IsDeleted, 0) = 0) AND @StatusColumn <> '' 
			BEGIN
				SET @DefaultValue = ISNULL((SELECT ProcessStatusID FROM TlsWorkflowProcessDetails WHERE ReferenceID = @IN_ProcessID), 0);

				INSERT INTO WorkflowControlConfig (WorkflowID, ProcessID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, 
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FilterConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, 
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, 
					DataTreeCondition, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, CompanyID, OrderBy, Version, IsCurrentVersion, 
					NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_WorkflowID, @IN_ProcessID, @StatusMaster, @StatusColumn, 2, 2, 1, 1, 1, 1, 1, -1, '', '', 0, 1, @DefaultValue, 
					'', 0, '', 1, 0, 1, 0, 0, 1, @StatusMaster, 'CodemasterID', 'TypeValues', '', '', '', 0, 0, 0, 3, 1, 1, 1, 0, 0, 2, 0, 
					@IN_ProcessID, 0, '', 0, 0, '', 0, @CompanyID, 2, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime;
			END

		COMMIT TRANSACTION tran_WFProcessDefaultControls
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_WFProcessDefaultControls

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowSaveControlConfiguration]'
GO

CREATE PROCEDURE [dbo].[spWorkflowSaveControlConfiguration] (@IN_WorkflowID BIGINT, @IN_ID BIGINT, @IN_Type VARCHAR(100), 
	@IN_EventFlag BIT, @IN_ButtonID INT, @IN_UserID INT, @IN_IPAddress VARCHAR(200))
AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY
		BEGIN TRANSACTION tran_WorkflowSaveConfiguration

			DECLARE @UTCTime DATETIME = GETUTCDATE(),
					@ErrorMessage NVARCHAR(2000),
					@ErrorSeverity NVARCHAR(50),
					@ErrorState NVARCHAR(50),
					@GridColumnCount INT = 0,
					@CQuery NVARCHAR(MAX) = '',
					@CompanyID INT = ISNULL((SELECT CompanyID FROM TlsWorkflowDetails WHERE ReferenceID = @IN_WorkflowID), 0)
			
			IF @IN_Type = 'FormControls'
			BEGIN
				UPDATE MT
				SET MT.IsDeleted = 1,
					MT.DeletedBy = @IN_UserID,
					MT.DeletedDate = @UTCTime,
					MT.DeletedDateGMT = @UTCTime
				FROM WorkflowControlConfig MT
					LEFT JOIN WorkflowControlProcess PT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.WorkflowID = @IN_WorkflowID AND MT.ProcessID = @IN_ID AND PT.TableColumn IS NULL
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				UPDATE MT
				SET MT.Name = PT.Name,
					MT.TableColumn = PT.TableColumn,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.IsWizard = PT.IsWizard,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.AttachmentPath = PT.AttachmentPath,
					MT.UniqueGroup = PT.UniqueGroup,
					MT.IsIdentity = PT.IsIdentity,
					MT.IsDmlControl = PT.IsDmlControl,
					MT.IsEncrypt = PT.IsEncrypt,
					MT.IsReturnFill = PT.IsReturnFill,
					MT.IsNoAdd = PT.IsNoAdd,
					MT.IsNoUpdate = PT.IsNoUpdate,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.FilterConditions = PT.FilterConditions,
					MT.FillEvent = PT.FillEvent,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.FillEventType = PT.FillEventType,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.FkShowActive = PT.FkShowActive,
					MT.VersionCheck = PT.VersionCheck,
					MT.ControlOrder = PT.ControlOrder,
					MT.DependentFlag = PT.DependentFlag,
					MT.ButtonID = PT.ButtonID,
					MT.DefaultControl = PT.DefaultControl,
					MT.DataTreeCondition = PT.DataTreeCondition,
					MT.DecimalLength = PT.DecimalLength,
					MT.IsCurrency = PT.IsCurrency,
					MT.CurrencyColumn = PT.CurrencyColumn,
					MT.IsIndex = PT.IsIndex,
					MT.IsUTC = PT.IsUTC,
					MT.IsUpload = PT.IsUpload,
					MT.IsDownload = PT.IsDownload,
					MT.IsView = PT.IsView,
					MT.IsDelete = PT.IsDelete,
					MT.IsFixed = PT.IsFixed,
					MT.ColumnCreation = PT.ColumnCreation,
					MT.DataVariable = PT.DataVariable,
					MT.IsAutoGenerate = PT.IsAutoGenerate,
					MT.IsSelectAll = PT.IsSelectAll,
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime,
				    MT.AttachmentMaxSize = PT.AttachmentMaxSize
				FROM WorkflowControlConfig MT
					JOIN WorkflowControlProcess PT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.WorkflowID = @IN_WorkflowID AND MT.ProcessID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO WorkflowControlConfig (WorkflowID, ProcessID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, 
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FilterConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, 
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, 
					DataTreeCondition, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, IsUTC, IsUpload, IsDownload, IsView, IsDelete, IsFixed, 
					ColumnCreation, DataVariable, IsAutoGenerate, IsSelectAll, DateDifference, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, AttachmentMaxSize)
				SELECT PT.WorkflowID, PT.ProcessID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, 
					PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SearchApplicable, 
					PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, PT.UniqueGroup, PT.IsDmlControl, PT.IsEncrypt, 
					PT.IsReturnFill, PT.IsNoAdd, PT.IsNoUpdate, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.AdditionalConditions, 
					PT.FilterConditions, PT.FillEvent, PT.ControlEventType, PT.ValidationEventType, PT.FillEventType, PT.FkOrder, PT.FkDelete, 
					PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, PT.ControlOrder, PT.DependentFlag, PT.ButtonID,
					PT.DefaultControl, PT.DataTreeCondition, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.IsUTC, 
					PT.IsUpload, PT.IsDownload, PT.IsView, PT.IsDelete, PT.IsFixed, PT.ColumnCreation, PT.DataVariable, PT.IsAutoGenerate, PT.IsSelectAll, PT.DateDifference, PT.Description,
					@CompanyID, PT.ControlOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.AttachmentMaxSize
				FROM WorkflowControlProcess PT
					LEFT JOIN WorkflowControlConfig MT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.WorkflowID = @IN_WorkflowID AND PT.ProcessID = @IN_ID AND PT.UserID = @IN_UserID AND MT.ReferenceID IS NULL;
			END
			ELSE IF @IN_Type = 'ControlColumns'
			BEGIN
				SELECT @GridColumnCount = COUNT(1) FROM WorkflowControlColumnsConfig 
				WHERE ReferenceID = @IN_ID AND WorkflowID = @IN_WorkflowID AND ControlType = 19 AND IsDeleted = 0;

				SET @CQuery = '	UPDATE MT SET MT.IsDeleted = 1, MT.DeletedBy = ' + CAST(@IN_UserID AS VARCHAR(50)) + ',
									MT.DeletedDate = ''' + CAST(@UTCTime AS VARCHAR(50))+ ''', MT.DeletedDateGMT = ''' + CAST(@UTCTime AS VARCHAR(50)) + '''
								FROM WorkflowControlColumnsConfig MT
									LEFT JOIN WorkflowControlColumnsProcess PT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
										AND PT.ControlID = MT.ControlID AND PT.UserID = ' + CAST(@IN_UserID AS VARCHAR(50)) + ' AND PT.ColumnID = MT.ReferenceID
								WHERE MT.WorkflowID = ' + CAST(@IN_WorkflowID AS VARCHAR(50)) + ' AND MT.ControlID = ' + CAST(@IN_ID AS VARCHAR(50)) + 
									CASE WHEN ISNULL(@GridColumnCount, 0) = 0 THEN ' AND MT.DependentFlag = ' + CAST(@IN_EventFlag AS VARCHAR(50)) ELSE '' END + '				
									AND PT.ColumnName IS NULL AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1 ;'
				EXEC (@CQuery);

				UPDATE MT
				SET MT.DisplayName = PT.DisplayName,
					MT.ColumnName = PT.ColumnName,
					MT.ColumnName1 = PT.ColumnName1,
					MT.ColumnName2 = PT.ColumnName2,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.IsWizard = PT.IsWizard,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.FillEvent = PT.FillEvent,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.SearchApplicable = PT.SearchApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.AttachmentPath = PT.AttachmentPath,
					MT.UniqueGroup = PT.UniqueGroup,
					MT.IsDmlControl = PT.IsDmlControl,
					MT.IsIdentity = PT.IsIdentity,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.DependentFlag = PT.DependentFlag,
					MT.SelectAll = PT.SelectAll,
					MT.ColumnWidth = PT.ColumnWidth,
					MT.FkOrder = PT.FkOrder,
					MT.DecimalLength = PT.DecimalLength,
					MT.IsIndex = PT.IsIndex,
					MT.IsCurrency = PT.IsCurrency,
					MT.CurrencyColumn = PT.CurrencyColumn,
					MT.GridParentControl = PT.GridParentControl,
					MT.DependentType = PT.DependentType,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.FkShowActive = PT.FkShowActive,
					MT.VersionCheck = PT.VersionCheck,
					MT.ColumnOrder = PT.ColumnOrder,
					MT.IsUTC = PT.IsUTC,
					MT.IsUpload = PT.IsUpload,
					MT.IsDownload = PT.IsDownload,
					MT.IsView = PT.IsView,
					MT.IsDelete = PT.IsDelete,
					MT.IsPrimary = PT.IsPrimary,
					MT.GridHeader = PT.GridHeader,
					MT.GridType = PT.GridType,
					MT.OrderByValue = PT.OrderBy,
					MT.OrderByColumn = PT.OrderByColumn,
					MT.PageSize = PT.PageSize,
					MT.ColumnCreation = PT.ColumnCreation,
					MT.DataVariable = PT.DataVariable,
					MT.IsAutoGenerate = PT.IsAutoGenerate,
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime,
					MT.AttachmentMaxSize = PT.AttachmentMaxSize,
					MT.IsNoUpdate = PT.IsNoUpdate
				FROM WorkflowControlColumnsConfig MT
					JOIN WorkflowControlColumnsProcess PT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
					JOIN WorkflowControlConfig CT ON CT.ReferenceID = MT.ControlID AND CT.IsDeleted = 0
				WHERE MT.WorkflowID = @IN_WorkflowID AND MT.ControlID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO WorkflowControlColumnsConfig (WorkflowID, ProcessID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, FillEvent,
					GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, ControlEventType, ValidationEventType,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, DecimalLength, 
					IsCurrency, CurrencyColumn, IsIndex, IsUTC, IsUpload, IsDownload, IsView, IsDelete, IsPrimary, GridHeader, GridType, 
					OrderByValue, OrderByColumn, PageSize, DependentType, ColumnCreation, DataVariable, IsAutoGenerate, DateDifference, Description, CompanyID, OrderBy, 
					Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, AttachmentMaxSize, IsNoUpdate)
				SELECT PT.WorkflowID, PT.ProcessID, PT.ControlID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, 
					PT.ValidationEvent, PT.FillEvent, PT.GridParentControl, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, 
					PT.IsIdentity, PT.UniqueGroup, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.AdditionalConditions, 
					PT.FkOrder, PT.FkDelete, PT.ControlEventType, PT.ValidationEventType, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, 
					PT.VersionCheck, PT.ColumnOrder, PT.DependentFlag, PT.SelectAll, PT.ColumnWidth, PT.DecimalLength, PT.IsCurrency, 
					PT.CurrencyColumn, PT.IsIndex, PT.IsUTC, PT.IsUpload, PT.IsDownload, PT.IsView, PT.IsDelete, PT.IsPrimary, PT.GridHeader, 
					PT.GridType, PT.OrderBy, PT.OrderByColumn, PT.PageSize, PT.DependentType, PT.ColumnCreation, PT.DataVariable, PT.IsAutoGenerate, PT.DateDifference, PT.Description,
					@CompanyID, PT.ColumnOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.AttachmentMaxSize, PT.IsNoUpdate
				FROM WorkflowControlColumnsProcess PT
					LEFT JOIN WorkflowControlColumnsConfig MT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.ControlID = MT.ControlID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID 
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.WorkflowID = @IN_WorkflowID AND PT.ControlID = @IN_ID AND PT.DependentFlag = @IN_EventFlag 
					AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;
			END
			ELSE IF @IN_Type = 'GridControlColumns'
			BEGIN
				SET @CQuery = '	UPDATE MT SET MT.IsDeleted = 1, MT.DeletedBy = ' + CAST(@IN_UserID AS VARCHAR(50)) + ',
									MT.DeletedDate = ''' + CAST(@UTCTime AS VARCHAR(50))+ ''', MT.DeletedDateGMT = ''' + CAST(@UTCTime AS VARCHAR(50)) + '''
								FROM WorkflowGridControlColumnsConfig MT
									LEFT JOIN WorkflowGridControlColumnsProcess PT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
										AND PT.GridColumnID = MT.ColumnID AND PT.UserID = ' + CAST(@IN_UserID AS VARCHAR(50)) + ' AND PT.ColumnID = MT.ReferenceID
								WHERE MT.WorkflowID = ' + CAST(@IN_WorkflowID AS VARCHAR(50)) + ' AND MT.ColumnID = ' + CAST(@IN_ID AS VARCHAR(50)) + 
									' AND MT.DependentFlag = ' + CAST(CASE WHEN @IN_EventFlag = 'true' THEN 1 ELSE 0 END AS VARCHAR(50)) + ' AND PT.ColumnName IS NULL' +		
									' AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1 ;'
				EXEC (@CQuery);

				UPDATE MT
				SET MT.DisplayName = PT.DisplayName,
					MT.ColumnName = PT.ColumnName,
					MT.ColumnName1 = PT.ColumnName1,
					MT.ColumnName2 = PT.ColumnName2,
					MT.ControlType = PT.ControlType,
					MT.DataType = PT.DataType,
					MT.Visibility = PT.Visibility,
					MT.Readonly = PT.Readonly,
					MT.IsMandatory = PT.IsMandatory,
					MT.IsMobile = PT.IsMobile,
					MT.IsWizard = PT.IsWizard,
					MT.MaxLength = PT.MaxLength,
					MT.Events = PT.Events,
					MT.ValidationEvent = PT.ValidationEvent,
					MT.ControlEventType = PT.ControlEventType,
					MT.ValidationEventType = PT.ValidationEventType,
					MT.SelectApplicable = PT.SelectApplicable,
					MT.SearchApplicable = PT.SearchApplicable,
					MT.DefaultValue = PT.DefaultValue,
					MT.AttachmentPath = PT.AttachmentPath,
					MT.UniqueGroup = PT.UniqueGroup,
					MT.ColumnWidth = PT.ColumnWidth,
					MT.IsDmlControl = PT.IsDmlControl,
					MT.IsIdentity = PT.IsIdentity,
					MT.FkType = PT.FkType,
					MT.FkTable = PT.FkTable,
					MT.FkColumn = PT.FkColumn,
					MT.FkData = PT.FkData,
					MT.AdditionalConditions = PT.AdditionalConditions,
					MT.SelectAll = PT.SelectAll,
					MT.IsDataSource = PT.IsDataSource,
					MT.DecimalLength = PT.DecimalLength,
					MT.IsCurrency = PT.IsCurrency,
					MT.CurrencyColumn = PT.CurrencyColumn,
					MT.DependentFlag = PT.DependentFlag,
					MT.DependentType = PT.DependentType,
					MT.FkOrder = PT.FkOrder,
					MT.FkDelete = PT.FkDelete,
					MT.FkNotActive = PT.FkNotActive,
					MT.FkVersion = PT.FkVersion,
					MT.FkShowActive = PT.FkShowActive,
					MT.VersionCheck = PT.VersionCheck,
					MT.ColumnOrder = PT.ColumnOrder,
					MT.DateDifference = PT.DateDifference,
					MT.Description = PT.Description,
					MT.ModifiedBy = @IN_UserID,
					MT.ModifiedDate = @UTCTime,
					MT.ModifiedDateGMT = @UTCTime,
					MT.AttachmentMaxSize = PT.AttachmentMaxSize
				FROM WorkflowGridControlColumnsConfig MT
					JOIN WorkflowGridControlColumnsProcess PT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.GridColumnID = MT.ColumnID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
				WHERE MT.WorkflowID = @IN_WorkflowID AND MT.ColumnID = @IN_ID AND PT.UserID = @IN_UserID
					AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1;

				INSERT INTO WorkflowGridControlColumnsConfig (WorkflowID, ProcessID, ColumnID, DisplayName, ColumnName, ColumnName1, 
					ColumnName2, ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, 
					ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, ColumnWidth, IsDmlControl,
					FkType, FkTable, FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, ControlEventType, ValidationEventType,
					FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DecimalLength, IsCurrency, 
					CurrencyColumn, DependentFlag, DependentType, DateDifference, Description, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, AttachmentMaxSize)
				SELECT PT.WorkflowID, PT.ProcessID, PT.GridColumnID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, 
					PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, 
					PT.ValidationEvent, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, 
					PT.UniqueGroup, PT.ColumnWidth, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.AdditionalConditions, PT.FkOrder, 
					PT.FkDelete, PT.ControlEventType, PT.ValidationEventType, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, 
					PT.ColumnOrder, PT.SelectAll, PT.IsDataSource, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.DependentFlag, 
					PT.DependentType, PT.DateDifference, PT.Description, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, PT.AttachmentMaxSize				
				FROM WorkflowGridControlColumnsProcess PT
					LEFT JOIN WorkflowGridControlColumnsConfig MT ON PT.WorkflowID = MT.WorkflowID AND PT.ProcessID = MT.ProcessID 
						AND PT.GridColumnID = MT.ColumnID AND PT.UserID = @IN_UserID AND PT.ColumnID = MT.ReferenceID
						AND MT.IsDeleted = 0 AND MT.NotActive = 0 AND MT.IsCurrentVersion = 1
				WHERE PT.WorkflowID = @IN_WorkflowID AND PT.GridColumnID = @IN_ID 
					AND PT.DependentFlag = @IN_EventFlag AND PT.UserID = @IN_UserID AND PT.ColumnID = 0;
			END

			SELECT 'Saved successfully';

		COMMIT TRANSACTION tran_WorkflowSaveConfiguration
	
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_WorkflowSaveConfiguration

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowTransferControls]'
GO

CREATE PROCEDURE [dbo].[spWorkflowTransferControls](@IN_ConfigID INT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
		BEGIN TRANSACTION tran_WorkflowTransferControls
	
			DECLARE @GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
							@UTCTime DATETIME = GETUTCDATE(),
							@ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@CompanyID INT = 0,
							@WorkflowID INT = 0,
							@BaseFormID INT = 0,
							@ButtonKeyColumn VARCHAR(100) = '',
							@MinID INT = 0,
							@MaxID INT = 0,
							@ButtonID INT = 0,
							@ButtonName NVARCHAR(500) = '',
							@TabID INT = 0,
							@GroupID INT = 0,
							@ProcessID INT = 0,
							@ControlID INT = 0,
							@ProcessControlID INT = 0,
							@ColumnID INT = 0,
							@ProcessColumnID INT = 0,
							@TabOrder INT = 0,
							@GroupOrder INT = 0,
							@TableName VARCHAR(100),
							@ColumnCount INT = 0,
							@AlterColumnQuery NVARCHAR(MAX) = '',
							@ButtonCount INT = 0,
							@IsMultipleUpdate BIT = 0

			SELECT @CompanyID = ISNULL(ED.CompanyID, 0)
			FROM CmnUserDetails UD
				LEFT JOIN MstEmployeeDetails ED ON UD.[Type] = 1 AND UD.TypeID = ED.ReferenceID AND ISNULL(ED.IsDeleted, 0) = 0
			WHERE UD.UserID = @IN_UserID;

			IF @CompanyID = 0
				SET @CompanyID = ISNULL((SELECT TOP 1 ReferenceID FROM MstCompanyDetails WHERE ParentCompanyID IS NULL AND IsDeleted = 0 ORDER BY ReferenceID), 0);

			SELECT @WorkflowID = ISNULL(WorkflowID, 0), @BaseFormID = ISNULL(BaseFormID, 0)
			FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID;

			SELECT @ButtonKeyColumn = ISNULL(StatusColumn, '')
			FROM TlsWorkflowDetails WHERE ReferenceID = @WorkflowID;

			SELECT @ButtonCount = MAX(BC.OrderBy)
			FROM FormButtonConfig BC 
			WHERE BC.FormID = @IN_ConfigID AND ButtonType NOT IN (5)
				AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1

			IF EXISTS (SELECT 1 FROM FormButtonConfig WHERE FormID = @BaseFormID AND IsMultipleApproval = 1
					AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1)
				SET @IsMultipleUpdate = 1;

			INSERT INTO FormButtonConfig (FormID, Type, DisplayType, UserAccess, ButtonType, TypeValues, Code, Description, Details, 
				ImagePath, MenuCategory, ButtonKeyColumn, AvailableStatus, ProcessButtonTypeID, OrderBy, ButtonCategory, VisibleTabs, 
				DisableTabs, ButtonTriggerEvent, IsMultipleApproval, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, 
				ModifiedDateGMT, NotActive, IsDeleted, IsCurrentVersion, Version, CompanyID) 
			SELECT @IN_ConfigID, 'Menubutton', 'Menubutton', 1, WPD.ProcessTypeID, WPD.Name, '', '', 
				CASE WHEN WPD.ProcessTypeID = 1 THEN 'STP.dml(''add'',this)' WHEN WPD.ProcessTypeID = 2 THEN 'STP.dml(''update'',this)'
					WHEN WPD.ProcessTypeID = 3 THEN 'STP.dml(''delete'',this)' WHEN WPD.ProcessTypeID = 4 THEN 'STP.openPopup(''Edit'', ''View'')' 
					WHEN WPD.ProcessTypeID = 5 THEN CONCAT('STP.openProcessingPopup(''', ISNULL(WPD.Name, ''), ''', '''')')
					WHEN WPD.ProcessTypeID = 7 THEN 'CMNF.gridDml()' WHEN WPD.ProcessTypeID = 9 THEN 'STP.openPopup(''add'', ''duplicate'', this)' 
					WHEN WPD.ProcessTypeID = 10 THEN 'STP.openAuditTrail()' ELSE '' END, 
				WPD.Icon, CASE WHEN WPD.ProcessTypeID = 1 THEN 2 WHEN ISNULL(WPD.PreStatus, '') NOT IN ('', '0') THEN 3 ELSE 1 END, 
				CASE WHEN ISNULL(WPD.PreStatus, '') NOT IN ('', '0') THEN ISNULL(WD.StatusColumn, '') ELSE '' END,
				CASE WHEN ISNULL(WPD.PreStatus, '') NOT IN ('', '0') THEN ISNULL(WPD.PreStatus, '') ELSE '' END, 0, ISNULL(@ButtonCount, 0) + ISNULL(WPD.OrderBy, 0),
				CASE WHEN (WPD.ProcessTypeID = 1 AND WPD.Name <> 'Add') OR (WPD.ProcessTypeID = 2 AND WPD.Name <> 'Update') THEN 1 ELSE 0 END, 
				'', '', '', @IsMultipleUpdate, @IN_UserID, @UTCTime, @GMTTime, @IN_UserID, @UTCTime, @GMTTime, 0, 0, 1, 1, WPD.CompanyID
			FROM TlsWorkflowProcessDetails WPD
				JOIN TlsWorkflowDetails WD ON WD.ReferenceID = WPD.WorkflowID
			WHERE WPD.WorkflowID = @WorkflowID AND WPD.IsRequired = 1
				AND WPD.IsDeleted = 0 AND WPD.NotActive = 0 AND WPD.IsCurrentVersion = 1
				AND NOT EXISTS (SELECT 1 FROM FormButtonConfig BC WHERE BC.FormID = @IN_ConfigID AND BC.TypeValues = WPD.Name
						--AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
						)
			ORDER BY WPD.OrderBy;

			IF OBJECT_ID('tempdb..#tempProcessButtonList') IS NOT NULL DROP TABLE #tempProcessButtonList

			CREATE TABLE #tempProcessButtonList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				ButtonID BIGINT NULL,
				ButtonName NVARCHAR(500))

			INSERT INTO #tempProcessButtonList (ButtonID, ButtonName)
			SELECT ReferenceID, TypeValues
			FROM FormButtonConfig WHERE FormID = @IN_ConfigID AND ButtonType = 5
				AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1
			ORDER BY OrderBy;

			SELECT @MaxID = COUNT(1) FROM #tempProcessButtonList;

			WHILE @MinID < @MaxID
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;

				SELECT @ButtonID = ButtonID, @ButtonName = ButtonName FROM #tempProcessButtonList WHERE ReferenceID = @MinID;

				IF ISNULL(@ButtonID, 0) <> 0 AND ISNULL(@ButtonName, '') <> ''
				BEGIN
					SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
					SELECT @GroupID = ReferenceID FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
  
					IF ISNULL(@TabID, 0) = 0
					BEGIN      
						SET @TabOrder = ISNULL((SELECT MAX(TabOrder) + 1 FROM FormTabConfig WHERE FormID = @IN_ConfigID AND IsDeleted = 0), 1);
  
						INSERT INTO FormTabConfig (FormID, Name, DisplayName, IsMandatory, TableName, KeyColumn, TabOrder, ButtonID, OrderBy, CreatedBy, 
							CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
						VALUES (@IN_ConfigID, CONCAT('Process ', @ButtonName), CONCAT('Process ', @ButtonName), 1, '', '', @TabOrder, @ButtonID, 
							@TabOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @CompanyID);
        
						SELECT @TabID = ReferenceID FROM FormTabConfig WHERE FormID = @IN_ConfigID AND ButtonID = @ButtonID AND IsDeleted = 0;
					END
					ELSE
					BEGIN
						UPDATE FormTabConfig 
						SET Name = CONCAT('Process ', @ButtonName), DisplayName = CONCAT('Process ', @ButtonName),
							ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime
						WHERE ReferenceID = @TabID AND FormID = @IN_ConfigID;
					END
  
					IF ISNULL(@GroupID, 0) = 0
					BEGIN      
						SET @GroupOrder = ISNULL((SELECT MAX(GroupOrder) + 1 FROM FormGroupboxConfig WHERE FormID = @IN_ConfigID AND TabID = @TabID AND IsDeleted = 0), 1);
  
						INSERT INTO FormGroupboxConfig (FormID, TabID, Name, DisplayName, CommonGroup, TableName, KeyColumn, GroupOrder, ButtonID, 
							OrderBy, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT, IsDeleted, NotActive, IsCurrentVersion, CompanyID) 
						VALUES (@IN_ConfigID, @TabID, CONCAT('Process ', @ButtonName), CONCAT('Process ', @ButtonName), 0, '', '', @GroupOrder, 
							@ButtonID, @GroupOrder, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime, 0, 0, 1, @CompanyID);
					END
					ELSE
					BEGIN
						UPDATE FormGroupboxConfig 
						SET TabID = @TabID, Name = CONCAT('Process ', @ButtonName), DisplayName = CONCAT('Process ', @ButtonName), 
							ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime
						WHERE ReferenceID = @GroupID AND FormID = @IN_ConfigID;
					END
				END
  
			END

			IF @ButtonKeyColumn <> ''
			BEGIN
				SELECT @TableName = TableName  FROM FormConfiguration WHERE ReferenceID = @IN_ConfigID AND IsDeleted = 0;
				SELECT @ColumnCount = COUNT(1) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @TableName AND COLUMN_NAME = @ButtonKeyColumn;
            
				IF @ColumnCount = 0
				BEGIN
					SET @AlterColumnQuery = ('ALTER TABLE ' + @TableName + ' ADD ' + @ButtonKeyColumn + ' INT NOT NULL DEFAULT 0');

					EXEC (@AlterColumnQuery);                    
				END 
			END

			IF OBJECT_ID('tempdb..#tempGroupBoxList') IS NOT NULL DROP TABLE #tempGroupBoxList

			CREATE TABLE #tempGroupBoxList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				ProcessID BIGINT NULL,
				GroupID BIGINT NULL,
				TabID BIGINT NULL,
				ButtonID BIGINT NULL,
				ProcessName NVARCHAR(500))

			INSERT INTO #tempGroupBoxList (ProcessID, GroupID, TabID, ButtonID, ProcessName)
			SELECT WPD.ReferenceID, GC.ReferenceID, TC.ReferenceID, BC.ReferenceID, WPD.Name
			FROM FormButtonConfig BC
				JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = @WorkflowID AND WPD.IsRequired = 1 AND WPD.Name = BC.TypeValues
					AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = BC.FormID AND TC.ButtonID = BC.ReferenceID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = BC.FormID AND GC.ButtonID = BC.ReferenceID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
			WHERE BC.FormID = @IN_ConfigID AND BC.ButtonType = 5
				AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
			ORDER BY BC.OrderBy;

			SET @MinID = 0;
			SET @MaxID = 0;
			SELECT @MaxID = COUNT(1) FROM #tempGroupBoxList;

			WHILE @MinID < @MaxID 
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @ProcessID = 0;

				SELECT @ProcessID = ProcessID, @GroupID = GroupID, @TabID = TabID, @ButtonID = ButtonID, @ButtonName = ProcessName
				FROM #tempGroupBoxList WHERE ReferenceID = @MinID;

				INSERT INTO FormControlConfig (FormID, TabID, GroupID, Name, TableColumn, ControlType, DataType, Visibility, Readonly, 
					IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, SearchApplicable, SelectApplicable, DefaultValue, 
					AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, IsEncrypt, IsReturnFill, IsNoAdd, IsNoUpdate, FkType, FkTable, 
					FkColumn, FkData, FkData1, FkData2, AdditionalConditions, FilterConditions, FillEvent, ControlEventType, ValidationEventType, FillEventType, 
					FkOrder, FkDelete, FkNotActive, FkVersion, FkShowActive, VersionCheck, ControlOrder, DependentFlag, ButtonID, DefaultControl, 
					DataTreeCondition, DecimalLength, IsCurrency, CurrencyColumn, IsIndex, ColumnCreation, DataVariable, IsAutoGenerate, CompanyID, OrderBy, 
					Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, PT.Name, PT.TableColumn, PT.ControlType, PT.DataType, PT.Visibility, PT.Readonly, 
					PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, PT.ValidationEvent, PT.SearchApplicable, 
					PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, PT.UniqueGroup, PT.IsDmlControl, PT.IsEncrypt, 
					PT.IsReturnFill, PT.IsNoAdd, PT.IsNoUpdate, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData,  PT.FkData1, PT.FkData2, PT.AdditionalConditions, 
					PT.FilterConditions, PT.FillEvent, PT.ControlEventType, PT.ValidationEventType, PT.FillEventType, PT.FkOrder, PT.FkDelete, 
					PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, PT.ControlOrder, PT.DependentFlag, @ButtonID,
					PT.DefaultControl, PT.DataTreeCondition, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.ColumnCreation, 
					PT.DataVariable, PT.IsAutoGenerate,
					@CompanyID, PT.OrderBy, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
				FROM WorkflowControlConfig PT
				WHERE PT.WorkflowID = @WorkflowID AND PT.ProcessID = @ProcessID 
					AND ISNULL(PT.IsDeleted, 0) = 0 AND ISNULL(PT.NotActive, 0) = 0 AND ISNULL(PT.IsCurrentVersion, 1) = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlConfig FCC WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @TabID
						AND FCC.GroupID = @GroupID AND FCC.TableColumn = PT.TableColumn
						--AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
						);

			END

			IF OBJECT_ID('tempdb..#tempWorkflowControlList') IS NOT NULL DROP TABLE #tempWorkflowControlList

			CREATE TABLE #tempWorkflowControlList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				ProcessID BIGINT NULL,
				GroupID BIGINT NULL,
				TabID BIGINT NULL,
				ButtonID BIGINT NULL,
				ControlID BIGINT NULL,
				ProcessControlID BIGINT NULL,
				ProcessName NVARCHAR(500))

			INSERT INTO #tempWorkflowControlList (ProcessID, GroupID, TabID, ButtonID, ControlID, ProcessControlID, ProcessName)
			SELECT WPD.ReferenceID, GC.ReferenceID, TC.ReferenceID, BC.ReferenceID, FCC.ReferenceID, WCC.ReferenceID, WPD.Name
			FROM FormButtonConfig BC
				JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = @WorkflowID AND WPD.IsRequired = 1 AND WPD.Name = BC.TypeValues
					AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = BC.FormID AND TC.ButtonID = BC.ReferenceID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = BC.FormID AND GC.ButtonID = BC.ReferenceID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN WorkflowControlConfig WCC ON WCC.WorkflowID = WPD.WorkflowID AND WCC.ProcessID = WPD.ReferenceID
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.FormID = BC.FormID AND FCC.TabID = TC.ReferenceID
					AND FCC.GroupID = GC.ReferenceID AND FCC.TableColumn = WCC.TableColumn
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = FCC.ControlType
			WHERE BC.FormID = @IN_ConfigID AND BC.ButtonType = 5
				AND (CT.CodemasterID IN (18, 19, 24, 25) OR FCC.DependentFlag = 1)
				AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
			ORDER BY BC.OrderBy, WPD.OrderBy, FCC.ControlOrder;

			SET @MinID = 0;
			SET @MaxID = 0;
			SELECT @MaxID = COUNT(1) FROM #tempWorkflowControlList;

			WHILE @MinID < @MaxID 
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @ProcessID = 0;
				SET @ControlID = 0;
				SET @ProcessControlID = 0;

				SELECT @ProcessID = ProcessID, @GroupID = GroupID, @TabID = TabID, @ButtonID = ButtonID, @ButtonName = ProcessName,
					@ControlID = ControlID, @ProcessControlID = ProcessControlID
				FROM #tempWorkflowControlList WHERE ReferenceID = @MinID;

				INSERT INTO FormControlColumnsConfig (FormID, TabID, GroupID, ControlID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, DependentType, MaxLength, Events, 
					ValidationEvent, FillEvent, GridParentControl, SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, 
					UniqueGroup, IsDmlControl, FkType, FkTable, FkColumn, FkData, FkData1, FkData2, AdditionalConditions, FkOrder, FkDelete, ControlEventType, 
					ValidationEventType, FkNotActive, FkVersion, FkShowActive, VersionCheck, ColumnOrder, DependentFlag, SelectAll, ColumnWidth, 
					DecimalLength, IsCurrency, CurrencyColumn, IsIndex, ColumnCreation, DataVariable, IsAutoGenerate, CompanyID, OrderBy, 
					Version, IsCurrentVersion, NotActive, IsDeleted, CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, @ControlID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.DependentType, PT.MaxLength, PT.Events, 
					PT.ValidationEvent, PT.FillEvent, PT.GridParentControl, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, 
					PT.AttachmentPath, PT.IsIdentity, PT.UniqueGroup, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.FkData1, PT.FkData2, 
					PT.AdditionalConditions, PT.FkOrder, PT.FkDelete, PT.ControlEventType, PT.ValidationEventType, PT.FkNotActive, PT.FkVersion, 
					PT.FkShowActive, PT.VersionCheck, PT.ColumnOrder, PT.DependentFlag, PT.SelectAll, PT.ColumnWidth, PT.DecimalLength, 
					PT.IsCurrency, PT.CurrencyColumn, PT.IsIndex, PT.ColumnCreation, PT.DataVariable, PT.IsAutoGenerate, @CompanyID, PT.OrderBy, 
					1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
				FROM WorkflowControlColumnsConfig PT
				WHERE PT.WorkflowID = @WorkflowID AND PT.ProcessID = @ProcessID AND PT.ControlID = @ProcessControlID
					AND ISNULL(PT.IsDeleted, 0) = 0 AND ISNULL(PT.NotActive, 0) = 0 AND ISNULL(PT.IsCurrentVersion, 1) = 1
					AND NOT EXISTS (SELECT 1 FROM FormControlColumnsConfig FCC WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @TabID
						AND FCC.GroupID = @GroupID AND FCC.ControlID = @ControlID AND FCC.ColumnName = PT.ColumnName
						--AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
						);

			END

			IF OBJECT_ID('tempdb..#tempWorkflowColumnList') IS NOT NULL DROP TABLE #tempWorkflowColumnList

			CREATE TABLE #tempWorkflowColumnList (
				ReferenceID BIGINT IDENTITY(1, 1) NOT NULL,
				ProcessID BIGINT NULL,
				GroupID BIGINT NULL,
				TabID BIGINT NULL,
				ButtonID BIGINT NULL,
				ColumnID BIGINT NULL,
				ProcessColumnID BIGINT NULL,
				ProcessName NVARCHAR(500))

			INSERT INTO #tempWorkflowColumnList	 (ProcessID, GroupID, TabID, ButtonID, ColumnID, ProcessColumnID, ProcessName)
			SELECT WPD.ReferenceID, GC.ReferenceID, TC.ReferenceID, BC.ReferenceID, CCC.ReferenceID, WCCC.ReferenceID, WPD.Name
			FROM FormButtonConfig BC
				JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = @WorkflowID AND WPD.IsRequired = 1 AND WPD.Name = BC.TypeValues
					AND ISNULL(WPD.IsDeleted, 0) = 0 AND ISNULL(WPD.NotActive, 0) = 0 AND ISNULL(WPD.IsCurrentVersion, 1) = 1
				JOIN FormTabConfig TC ON TC.FormID = BC.FormID AND TC.ButtonID = BC.ReferenceID
					AND ISNULL(TC.IsDeleted, 0) = 0 AND ISNULL(TC.NotActive, 0) = 0 AND ISNULL(TC.IsCurrentVersion, 1) = 1
				JOIN FormGroupBoxConfig GC ON GC.FormID = BC.FormID AND GC.ButtonID = BC.ReferenceID
					AND ISNULL(GC.IsDeleted, 0) = 0 AND ISNULL(GC.NotActive, 0) = 0 AND ISNULL(GC.IsCurrentVersion, 1) = 1
				JOIN WorkflowControlConfig WCC ON WCC.WorkflowID = WPD.WorkflowID AND WCC.ProcessID = WPD.ReferenceID AND WCC.ControlType = 19
					AND ISNULL(WCC.IsDeleted, 0) = 0 AND ISNULL(WCC.NotActive, 0) = 0 AND ISNULL(WCC.IsCurrentVersion, 1) = 1
				JOIN FormControlConfig FCC ON FCC.FormID = BC.FormID AND FCC.TabID = TC.ReferenceID
					AND FCC.GroupID = GC.ReferenceID AND FCC.TableColumn = WCC.TableColumn
					AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
				JOIN WorkflowControlColumnsConfig WCCC ON WCCC.WorkflowID = WCC.WorkflowID AND WCCC.ControlID = WCC.ReferenceID
					AND ISNULL(WCCC.IsDeleted, 0) = 0 AND ISNULL(WCCC.NotActive, 0) = 0 AND ISNULL(WCCC.IsCurrentVersion, 1) = 1
				JOIN FormControlColumnsConfig CCC ON CCC.FormID = BC.FormID AND CCC.TabID = FCC.TabID
					AND CCC.GroupID = FCC.GroupID AND CCC.ControlID = FCC.ReferenceID AND CCC.ColumnName = WCCC.ColumnName
					AND ISNULL(CCC.IsDeleted, 0) = 0 AND ISNULL(CCC.NotActive, 0) = 0 AND ISNULL(CCC.IsCurrentVersion, 1) = 1
				JOIN CmnCodeMaster CT ON CT.Type = 'Control Type' AND CT.CodemasterID = CCC.ControlType
			WHERE BC.FormID = @IN_ConfigID AND BC.ButtonType = 5
				AND (CCC.DependentFlag = 1 OR CCC.ControlType = 24 OR CCC.ControlType = 25)
				AND ISNULL(BC.IsDeleted, 0) = 0 AND ISNULL(BC.NotActive, 0) = 0 AND ISNULL(BC.IsCurrentVersion, 1) = 1
			ORDER BY BC.OrderBy, WPD.OrderBy, FCC.ControlOrder;

			SET @MinID = 0;
			SET @MaxID = 0;
			SELECT @MaxID = COUNT(1) FROM #tempWorkflowColumnList;

			WHILE @MinID < @MaxID 
			BEGIN
				SET @MinID = @MinID + 1;
				SET @ButtonID = 0;
				SET @ButtonName = '';
				SET @TabID = 0;
				SET @GroupID = 0;
				SET @ProcessID = 0;
				SET @ColumnID = 0;
				SET @ProcessColumnID = 0;

				SELECT @ProcessID = ProcessID, @GroupID = GroupID, @TabID = TabID, @ButtonID = ButtonID, @ButtonName = ProcessName,
					@ColumnID = ColumnID, @ProcessColumnID = ProcessColumnID
				FROM #tempWorkflowColumnList WHERE ReferenceID = @MinID;

				INSERT INTO FormGridControlColumnsConfig (FormID, TabID, GroupID, ColumnID, DisplayName, ColumnName, ColumnName1, ColumnName2, 
					ControlType, DataType, Visibility, Readonly, IsMandatory, IsMobile, IsWizard, MaxLength, Events, ValidationEvent, 
					SearchApplicable, SelectApplicable, DefaultValue, AttachmentPath, IsIdentity, UniqueGroup, IsDmlControl, FkType, FkTable, 
					FkColumn, FkData, AdditionalConditions, FkOrder, FkDelete, ControlEventType, ValidationEventType, FkNotActive, FkVersion, 
					FkShowActive, VersionCheck, ColumnOrder, SelectAll, IsDataSource, DecimalLength, IsCurrency, CurrencyColumn, DependentFlag, 
					DependentType, CompanyID, OrderBy, Version, IsCurrentVersion, NotActive, IsDeleted, 
					CreatedBy, CreatedDate, CreatedDateGMT, ModifiedBy, ModifiedDate, ModifiedDateGMT)
				SELECT @IN_ConfigID, @TabID, @GroupID, @ColumnID, PT.DisplayName, PT.ColumnName, PT.ColumnName1, PT.ColumnName2, PT.ControlType, 
					PT.DataType, PT.Visibility, PT.Readonly, PT.IsMandatory, PT.IsMobile, PT.IsWizard, PT.MaxLength, PT.Events, 
					PT.ValidationEvent, PT.SearchApplicable, PT.SelectApplicable, PT.DefaultValue, PT.AttachmentPath, PT.IsIdentity, 
					PT.UniqueGroup, PT.IsDmlControl, PT.FkType, PT.FkTable, PT.FkColumn, PT.FkData, PT.AdditionalConditions, PT.FkOrder, 
					PT.FkDelete, PT.ControlEventType, PT.ValidationEventType, PT.FkNotActive, PT.FkVersion, PT.FkShowActive, PT.VersionCheck, 
					PT.ColumnOrder, PT.SelectAll, PT.IsDataSource, PT.DecimalLength, PT.IsCurrency, PT.CurrencyColumn, PT.DependentFlag, 
					PT.DependentType, @CompanyID, PT.ColumnOrder, 1, 1, 0, 0, @IN_UserID, @UTCTime, @UTCTime, @IN_UserID, @UTCTime, @UTCTime
				FROM WorkflowGridControlColumnsConfig PT
				WHERE PT.WorkflowID = @WorkflowID AND PT.ProcessID = @ProcessID AND PT.ColumnID = @ProcessColumnID
					AND ISNULL(PT.IsDeleted, 0) = 0 AND ISNULL(PT.NotActive, 0) = 0 AND ISNULL(PT.IsCurrentVersion, 1) = 1
					AND NOT EXISTS (SELECT 1 FROM FormGridControlColumnsConfig FCC WHERE FCC.FormID = @IN_ConfigID AND FCC.TabID = @TabID
						AND FCC.GroupID = @GroupID AND FCC.ColumnID = @ColumnID AND FCC.ColumnName = PT.ColumnName
						--AND ISNULL(FCC.IsDeleted, 0) = 0 AND ISNULL(FCC.NotActive, 0) = 0 AND ISNULL(FCC.IsCurrentVersion, 1) = 1
						);

			END

			EXEC spFormSaveDefaultProperties @IN_ConfigID, @IN_FormID, @IN_UserID

			UPDATE FormConfiguration SET Status = 2, ModifiedBy = @IN_UserID, ModifiedDate = @UTCTime, ModifiedDateGMT = @UTCTime 
			WHERE ReferenceID = @IN_ConfigID;   

		COMMIT TRANSACTION tran_WorkflowTransferControls

	END TRY
	BEGIN CATCH

		ROLLBACK TRANSACTION tran_WorkflowTransferControls

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END
GO
PRINT N'Creating [dbo].[viewGetDBViews]'
GO

CREATE VIEW [dbo].[viewGetDBViews]
AS	
	SELECT TABLE_NAME AS Name FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME <> 'viewGetDBStoredProcedures' AND TABLE_NAME <> 'viewGetDBViews' AND TABLE_NAME <> 'viewGetDBTables'
GO
PRINT N'Creating [dbo].[viewGetDBTables]'
GO

CREATE VIEW [dbo].[viewGetDBTables]
AS	
	SELECT Name FROM sys.objects WHERE TYPE IN (N'U');
GO
PRINT N'Creating [dbo].[viewReportDataSources]'
GO

CREATE VIEW [dbo].[viewReportDataSources]
AS	
	SELECT Name, 0 AS IsSelected, Name AS DataSource FROM viewGetDBTables
	UNION ALL
	SELECT Name, 0 AS IsSelected, Name AS DataSource FROM viewGetDBViews;
GO
PRINT N'Creating [dbo].[viewFormBuildInProcessConfig]'
GO
CREATE VIEW [dbo].[viewFormBuildInProcessConfig] AS
	SELECT ISNULL(FBC.ReferenceID, 0) AS ReferenceID,
			ISNULL(FBP.ReferenceID, 0) AS ProcessID,
			ISNULL(FBC.ColumnName, '') AS ColumnName,
			ISNULL(FBC.ControlName, '') AS ControlName,
			ISNULL(FBC.DataTypeID, 0) AS DataTypeID,
			ISNULL(FBC.ControlTypeID, 0) AS ControlTypeID,
			ISNULL(FBC.IsIdentity, 0) AS IsIdentity,
			ISNULL(FBC.IsVisibility, 0) AS IsVisibility,
			ISNULL(FBC.CompanyID, 0) AS CompanyID,
			ISNULL(FBC.OrderBy, 0) AS OrderBy,
 			ISNULL(FBC.IsDeleted, 0) AS IsDeleted,
			ISNULL(FBC.IsCurrentVersion, 1) AS IsCurrentVersion,
			ISNULL(FBC.NotActive, 0) AS NotActive
	FROM FormBuildInProcessControls FBC
		JOIN FormBuildInProcessConfig FBP ON FBP.ReferenceID = FBC.ProcessID
			AND FBP.IsDeleted = 0
	WHERE FBC.IsDeleted = 0 AND FBC.IsCurrentVersion = 1 AND FBC.NotActive = 0;
GO
PRINT N'Creating [dbo].[viewGetDBStoredProcedures]'
GO

CREATE VIEW [dbo].[viewGetDBStoredProcedures]
AS	
	SELECT Name FROM sys.objects WHERE TYPE IN (N'P',N'PC') AND Name LIKE 'RSP_%'
GO
PRINT N'Creating [dbo].[viewGetDBTableColumns]'
GO

CREATE VIEW [dbo].[viewGetDBTableColumns]
AS	
	SELECT C.TABLE_NAME, C.COLUMN_NAME, C.DATA_TYPE
	FROM INFORMATION_SCHEMA.COLUMNS C
		JOIN INFORMATION_SCHEMA.TABLES T ON T.TABLE_TYPE = 'BASE TABLE' AND T.TABLE_NAME = C.TABLE_NAME
	WHERE C.COLUMN_NAME NOT IN ('CreatedBy', 'CreatedDate', 'CreatedDateGMT', 'ModifiedBy', 'ModifiedDate', 'ModifiedDateGMT',
		'NotActive', 'NotActiveDate', 'NotActiveDateGMT', 'NotActiveReason', 'IsDeleted', 'DeletedBy', 'DeletedDate', 'DeletedDateGMT',
		'DeleteReason', 'IsCurrentVersion', 'VersionID');
GO
PRINT N'Creating [dbo].[spBIDashboardGetData]'
GO

CREATE PROCEDURE [dbo].[spBIDashboardGetData] (
	@IN_SourceID INT, 
	@IN_ObjectName NVARCHAR(MAX),
	@IN_ConditionColumns NVARCHAR(MAX),
	@IN_ControlID INT,
	@IN_ColumnID INT,
	@IN_ChartName NVARCHAR(500),
	@IN_ValueColumn SYSNAME,
	@IN_ResultColumn SYSNAME,
	@IN_RangeEndColumn SYSNAME,
	@IN_BarColumn SYSNAME,
	@IN_TextColumn SYSNAME,
	@IN_OrderByClause VARCHAR(500),
	@IN_MainTable SYSNAME,
	@IN_MainCondition VARCHAR(1000),
	@IN_MainAddiCondition VARCHAR(1000),
	@IN_DeleteCondition VARCHAR(500),
	@IN_ActiveCondition VARCHAR(500),
	@IN_VersionCondition VARCHAR(500),
	@IN_SubTable SYSNAME,
	@IN_SubCondition VARCHAR(1000),
	@IN_SubAddiCondition VARCHAR(1000),
	@IN_SubDeleteCondition VARCHAR(500),
	@IN_SubActiveCondition VARCHAR(500),
	@IN_SubVersionCondition VARCHAR(500),
	@IN_JoinCondition VARCHAR(500),
	@IN_ColumnTable VARCHAR(255),
	@IN_StackedColumn VARCHAR(255),
	@IN_ColumnName VARCHAR(255),
	@IN_ColumnValue VARCHAR(255),
	@IN_ColumnCondition VARCHAR(1000),
	@IN_ColumnAddiCondition VARCHAR(1000),
	@IN_ColumnDeleteCondition VARCHAR(500),
	@IN_ColumnActiveCondition VARCHAR(500),
	@IN_ColumnVersionCondition VARCHAR(500),
	@IN_ColumnJoinCondition VARCHAR(500),
	@IN_ResultType VARCHAR(100),
	@IN_ChartType VARCHAR(100),
	@IN_AllBarReq VARCHAR(100),
	@IN_IndividualChart BIT,
	@IN_ChartSourceID INT, 
	@IN_ChartObjectName VARCHAR(255),
	@IN_BarLimitCount INT,
	@IN_ResultColumnOrder VARCHAR(500),
	@IN_ResultRoundOf INT,
	@IN_StartPoint INT,
	@IN_CustomPointValue VARCHAR(100),
	@IN_IsMainPageDashboard INT,
	@IN_IsMyDashboard INT,
	@IN_ChartView VARCHAR(100),
	@IN_CategoryDisplay INT,
	@IN_FormID INT,
	@IN_UserID INT
)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = '',
				@RQuery NVARCHAR(MAX) = '',
				@TableName VARCHAR(255) = '',
				@ControlID INT = 0,
				@ChartData NVARCHAR(MAX) = '',
				@CurChartData NVARCHAR(MAX) = '',
				@ConditionColumns NVARCHAR(MAX) = '',
				@ColumnID INT = 0,
				@ResultType VARCHAR(100) = '',
				@ChartType VARCHAR(100) = '',
				@CurControlID INT = 0,
				@ValueColumn VARCHAR(255) = '',
				@BarColumn VARCHAR(255) = '',
				@ChartName VARCHAR(500) = '',
				@TextColumn VARCHAR(255) = '',
				@OrderByClause VARCHAR(500) = '',
				@MainTable SYSNAME = '',
				@MainCondition VARCHAR(1000) = '',
				@MainAddiCondition VARCHAR(1000) = '',
				@DeleteCondition VARCHAR(500) = '',
				@ActiveCondition VARCHAR(500) = '',
				@VersionCondition VARCHAR(500) = '',
				@SubTable SYSNAME = '',
				@SubCondition VARCHAR(1000) = '',
				@SubAddiCondition VARCHAR(1000) = '',
				@SubDeleteCondition VARCHAR(500) = '',
				@SubActiveCondition VARCHAR(500) = '',
				@SubVersionCondition VARCHAR(500) = '',
				@JoinCondition VARCHAR(500) = '',
				@ColumnTable VARCHAR(255)  = '',
				@StackedColumn VARCHAR(255)  = '',
				@ColumnName VARCHAR(255)  = '',
				@ColumnValue VARCHAR(255)  = '',
				@ColumnCondition VARCHAR(1000)  = '',
				@ColumnAddiCondition VARCHAR(1000)  = '',
				@ColumnDeleteCondition VARCHAR(500)  = '',
				@ColumnActiveCondition VARCHAR(500)  = '',
				@ColumnVersionCondition VARCHAR(500)  = '',
				@ColumnJoinCondition VARCHAR(500)  = '',
				@ResultColumn VARCHAR(MAX) = '',
				@RangeEndColumn VARCHAR(MAX) = '',
				@TempQuery NVARCHAR(MAX) = '',
				@DashboardID BIGINT = 0,
				@DashboardTitle NVARCHAR(1000) = '',
				@ColumnQuery NVARCHAR(MAX) = '',
				@ColumnMin INT = 0,
				@MinChartNumber INT = 0,
				@ColumnMax INT = 0,
				@StackedName VARCHAR(255)  = '',
				@StackedValue VARCHAR(255)  = '',
				@ActiveCount INT = 0,
				@AllBarReq VARCHAR(100) = '',
				@OrderByColumn VARCHAR(100) = '',
				@MinOrderValue INT = 0,
				@ResultColumnDataType VARCHAR(100) = '',
				@IsDateValue BIT = 0,
				@BarLimitCount VARCHAR(100) = '',
				@ResultColumnOrder VARCHAR(255) = '',
				@ResultRoundOf INT = 0,
				@ResultColumnNew VARCHAR(255) = '',
				@ChartValueResult VARCHAR(255) = '',
				@RangeEndValueResult VARCHAR(255) = '',
				@StartPoint VARCHAR(2) = '',
				@ChartView VARCHAR(100) = '',
				@IsMainPageDashboard VARCHAR(2) = '',
				@IsMyDashboard VARCHAR(2) = '',
				@CategoryDisplay VARCHAR(2) = ''

		IF @IN_IndividualChart = 1
		BEGIN
			SET @IN_SourceID = CASE WHEN ISNULL(@IN_ChartSourceID, 0) = 0 THEN 2 ELSE @IN_ChartSourceID END;
			SET @IN_ObjectName = @IN_ChartObjectName;
		END

		IF @IN_SourceID = 1 
		BEGIN
			SET @TableName = '##tempDashboardDataSpTable';

			IF OBJECT_ID('tempdb..##tempDashboardDataSpTable') IS NOT NULL DROP TABLE ##tempDashboardDataSpTable
			SET @RQuery = 'EXEC ' + @IN_ObjectName + ' 0, ' + @TableName + ''
			
			EXEC (@RQuery)
		END
		IF @IN_SourceID IN (2, 3)
		BEGIN
			SET @TableName = @IN_ObjectName;
		END
		ELSE IF @IN_SourceID = 4 
		BEGIN
			SET @TableName = '##tempDashboardDataTable';

			IF OBJECT_ID('tempdb..##tempDashboardDataTable') IS NOT NULL DROP TABLE ##tempDashboardDataTable
			SET @RQuery = ('SELECT * INTO ##tempDashboardDataTable FROM (' + @IN_ObjectName + ') TE')
			
			EXEC (@RQuery)
		END

		SELECT @CurControlID = @IN_ControlID, @ColumnID = @IN_ColumnID, @ChartName = @IN_ChartName, @ValueColumn = @IN_ValueColumn, @BarColumn = @IN_BarColumn, 
			@TextColumn = @IN_TextColumn, @OrderByClause = @IN_OrderByClause, @MainTable = @IN_MainTable, @ResultColumn = @IN_ResultColumn, @MainCondition = @IN_MainCondition, 
			@MainAddiCondition = @IN_MainAddiCondition, @DeleteCondition = @IN_DeleteCondition, @ActiveCondition = @IN_ActiveCondition, @VersionCondition = @IN_VersionCondition, 
			@SubTable = @IN_SubTable, @SubCondition = @IN_SubCondition, @SubAddiCondition = @IN_SubAddiCondition, @SubDeleteCondition = @IN_SubDeleteCondition, 
			@SubActiveCondition = @IN_SubActiveCondition, @SubVersionCondition = @IN_SubVersionCondition, @JoinCondition = @IN_JoinCondition, @ColumnTable = @IN_ColumnTable, 
			@StackedColumn = @IN_StackedColumn, @ColumnName = @IN_ColumnName, @ColumnValue = @IN_ColumnValue, @ColumnCondition = @IN_ColumnCondition, 
			@ColumnAddiCondition = @IN_ColumnAddiCondition, @ColumnDeleteCondition = @IN_ColumnDeleteCondition, @ColumnActiveCondition = @IN_ColumnActiveCondition, 
			@ColumnVersionCondition = @IN_ColumnVersionCondition, @ColumnJoinCondition = @IN_ColumnJoinCondition, @ConditionColumns = @IN_ConditionColumns,
			@ResultType = @IN_ResultType, @ChartType = @IN_ChartType, @AllBarReq = @IN_AllBarReq, @RangeEndColumn = @IN_RangeEndColumn, @ResultRoundOf = @IN_ResultRoundOf,
			@ResultColumnOrder = @IN_ResultColumnOrder, @ResultColumnNew = @IN_ResultColumn, @BarLimitCount = @IN_BarLimitCount, @StartPoint = @IN_StartPoint, @IsMainPageDashboard = @IN_IsMainPageDashboard, @IsMyDashboard = @IN_IsMyDashboard, 
			@ChartView = @IN_ChartView, @CategoryDisplay = @IN_CategoryDisplay

		IF @IN_IndividualChart = 1
		BEGIN
			SET @MainTable = @IN_ChartObjectName;
		END

		IF ISNULL(@SubTable, '') IN ('', '0')
		BEGIN
			--SET @SubTable = @MainTable;
			SET @SubCondition = '';
			--SET @SubAddiCondition = '';
			SET @SubDeleteCondition = '';
			SET @SubActiveCondition = '';
			SET @SubVersionCondition = '';
			SET @TextColumn = REPLACE(@TextColumn, 'ST.', '');
			SET @OrderByClause = REPLACE(@OrderByClause, 'ST.', '');
		END

		SELECT @ResultColumnDataType = DATA_TYPE
		FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @MainTable AND COLUMN_NAME = REPLACE(@ResultColumn, 'MT.', '');
		
		SET @OrderByColumn = REPLACE(REPLACE(REPLACE(ISNULL(@OrderByClause, ''), ' DESC', ''), ' ASC', ''), ' ', '');

		IF @ResultType = 'COUNT'
		BEGIN
			SET @ChartValueResult = 'COUNT(ChartValue)'
		END
		ELSE IF @ResultType = 'AVG'
		BEGIN
			SET @ChartValueResult = 'AVG(ChartValue)'
		END
		ELSE IF @ResultType = 'SUM'
		BEGIN
			SET @ChartValueResult = 'SUM(ChartValue)'
		END
		ELSE IF @ResultType = 'MAX'
		BEGIN
			SET @ChartValueResult = 'MAX(ChartValue)'
		END
		ELSE IF @ResultType = 'MIN'
		BEGIN
			SET @ChartValueResult = 'MIN(ChartValue)'
		END

		IF CHARINDEX('range', @ChartType) > 0
		BEGIN
			IF ISNULL(@RangeEndColumn, '') = ''
			BEGIN
				SET @ChartValueResult = 'MIN(ChartValue)';
				SET @RangeEndValueResult = 'MAX(RangeEndValue)';
			END
			ELSE
			BEGIN
				IF @ResultType = 'COUNT'
				BEGIN
					SET @RangeEndValueResult = 'COUNT(RangeEndValue)'
				END
				ELSE IF @ResultType = 'AVG'
				BEGIN
					SET @RangeEndValueResult = 'AVG(RangeEndValue)'
				END
				ELSE IF @ResultType = 'SUM'
				BEGIN
					SET @RangeEndValueResult = 'SUM(RangeEndValue)'
				END
				ELSE IF @ResultType = 'MAX'
				BEGIN
					SET @ChartValueResult = 'MAX(ChartValue)'
					SET @RangeEndValueResult = 'MAX(RangeEndValue)'
				END
				ELSE IF @ResultType = 'MIN'
				BEGIN
					SET @ChartValueResult = 'MIN(ChartValue)'
					SET @RangeEndValueResult = 'MIN(RangeEndValue)'
				END
			END

			IF CHARINDEX('date', @ResultColumnDataType) > 0 AND (ISNULL(@RangeEndColumn, '') = '' OR @ResultType IN ('MIN', 'MAX'))
			BEGIN
				SET @IsDateValue = 1;
			END
		END

		IF @RangeEndValueResult = '' 
			SET @RangeEndValueResult = @ChartValueResult
		ELSE
			SET @RangeEndValueResult = @RangeEndValueResult

		IF ISNULL(@ResultRoundOf, 0) = 1
		BEGIN
			SET @ChartValueResult = 'ROUND(' + @ChartValueResult + ', 0)'
			SET @RangeEndValueResult = 'ROUND(' + @RangeEndValueResult + ', 0)'
		END
		ELSE IF ISNULL(@ResultRoundOf, 0) = 2
		BEGIN
			SET @ChartValueResult = 'CEILING(' + @ChartValueResult + ')'
			SET @RangeEndValueResult = 'CEILING(' + @RangeEndValueResult + ')'
		END
		ELSE IF ISNULL(@ResultRoundOf, 0) = 3
		BEGIN
			SET @ChartValueResult = 'FLOOR(' + @ChartValueResult + ')'
			SET @RangeEndValueResult = 'FLOOR(' + @RangeEndValueResult + ')' 
		END
		ELSE
		BEGIN
			SET @ChartValueResult = @ChartValueResult
			SET @RangeEndValueResult = @RangeEndValueResult
		END

		IF OBJECT_ID('tempdb..#tempChartFinalResult') IS NOT NULL DROP TABLE #tempChartFinalResult
		CREATE TABLE #tempChartFinalResult (
			RowNum INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
			ChartName NVARCHAR(500) NULL,
			ChartValue VARCHAR(255) NULL,
			RangeEndValue VARCHAR(200) NULL,
			ChartLabel NVARCHAR(500) NULL,
			BarColumn VARCHAR(255) NULL,
			BarData VARCHAR(500) NULL,
			StackedColumn VARCHAR(255) NULL,
			StackedBarData VARCHAR(500) NULL,
			OrderByValue NVARCHAR(500) NULL,
			ChartNumber INT NULL);

		IF OBJECT_ID('tempdb..#tempFinalChartData') IS NOT NULL DROP TABLE #tempFinalChartData
		CREATE TABLE #tempFinalChartData (
			RowNum INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
			ChartName NVARCHAR(500) NULL,
			ChartType NVARCHAR(200) NULL,
			ChartNumber INT NULL)

		IF OBJECT_ID('tempdb..#tempChartColumnData') IS NOT NULL DROP TABLE #tempChartColumnData
		CREATE TABLE #tempChartColumnData (
			RowNum INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
			ColumnName VARCHAR(500) NULL,
			ColumnValue VARCHAR(255) NULL)

		IF ISNULL(@ColumnTable, '') <> '' 
		BEGIN
			SET @ColumnQuery = 'INSERT INTO #tempChartColumnData (ColumnName, ColumnValue) SELECT ' + 
				@ColumnName + ',' + @ColumnValue + ' FROM ' + @ColumnTable +
				' WHERE 1=1' + CASE WHEN @ColumnCondition = '' THEN '' ELSE ' AND ' END + @ColumnCondition +
				CASE WHEN @ColumnAddiCondition = '' THEN '' ELSE ' AND ' END + @ColumnAddiCondition +
				CASE WHEN @ColumnDeleteCondition = '' THEN '' ELSE ' AND ' END + @ColumnDeleteCondition + CASE WHEN @ColumnActiveCondition = '' THEN '' ELSE ' AND ' END +
				@ColumnActiveCondition + CASE WHEN @ColumnVersionCondition = '' THEN '' ELSE ' AND ' END + @ColumnVersionCondition; 

    	EXEC(@ColumnQuery)
		END;

		SET @ColumnMin = 0;
		SET @ColumnMax = 0;
		SELECT @ColumnMin = MIN(RowNum), @ColumnMax = MAX(RowNum) FROM #tempChartColumnData WHERE RowNum <> 0;

		SET @ColumnMin = CASE WHEN @ColumnMin IS NULL THEN 0 ELSE @ColumnMin END;
		SET @ColumnMax = CASE WHEN @ColumnMax IS NULL THEN 0 ELSE @ColumnMax END;
		SET @MinChartNumber = @ColumnMin;

		WHILE (@ColumnMin <= @ColumnMax)
		BEGIN
			SET @CurChartData  = '';
			SET @StackedName = '';
			SET @StackedValue = '';
			SELECT @StackedName = ColumnName, @StackedValue = ColumnValue
			FROM #tempChartColumnData WHERE RowNum = @ColumnMin;

			IF OBJECT_ID('tempdb..##tempChartResult') IS NOT NULL DROP TABLE ##tempChartResult
			CREATE TABLE ##tempChartResult (
				RowNum INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
				ChartName NVARCHAR(500) NULL,
				ChartValue FLOAT NULL,
				RangeEndValue FLOAT NULL,
				RangeStartDate DATE NULL,
				RangeEndDate DATE NULL,
				ChartLabel NVARCHAR(500) NULL,
				BarColumn VARCHAR(255) NULL,
				BarData VARCHAR(500) NULL,
				StackedColumn VARCHAR(255) NULL,
				StackedBarData VARCHAR(500) NULL,
				OrderByValue NVARCHAR(500) NULL);

			IF ISNULL(@SubTable, '') IN ('', '0')
			BEGIN
				SET @TempQuery = 'WITH ChartData AS (
				SELECT	''' + CASE WHEN ISNULL(@StackedName, '') = '' THEN @ChartName ELSE @StackedName END + ''' AS ChartName, '
					+ @ResultColumn + ' AS ChartValue, '
					+ CASE WHEN ISNULL(@RangeEndColumn, '') = '' THEN @ResultColumn ELSE @RangeEndColumn END + ' AS RangeEndValue,
					ISNULL(CONVERT(NVARCHAR(1000), ' + @TextColumn + '), '''') AS ChartLabel,
					''' + @BarColumn + ''' AS BarColumn,
					CONVERT(VARCHAR(200), ISNULL(' + @ValueColumn + ', 0)) AS BarData,
					''' + @StackedColumn + ''' AS StackedColumn,
					' + CASE WHEN ISNULL(@StackedName, '') = '' THEN '0' ELSE 'MT.' + CONVERT(VARCHAR(50), ISNULL(@StackedColumn, 0)) END + ' AS StackedBarData,
					' + CASE WHEN ISNULL(@OrderByColumn, '') = '' THEN 'ISNULL(CONVERT(NVARCHAR(1000), ' + @TextColumn + '), ''NONE'')' ELSE @OrderByColumn END + ' AS OrderByValue
					' + CASE WHEN ISNULL(@ResultColumnOrder, '') <> '' THEN ', ROW_NUMBER() OVER (PARTITION BY ' + @ValueColumn + ' ORDER BY ' + @ResultColumnOrder + ') AS RowNum ' ELSE '' END +
					'FROM ' + @MainTable + ' MT  WHERE 1=1' +
					CASE WHEN @StackedColumn = '' THEN '' ELSE ' AND MT.' END + CASE WHEN @StackedColumn = '' THEN '' ELSE @StackedColumn END + 
					CASE WHEN @StackedColumn = '' THEN '' ELSE ' = ''' END + CASE WHEN @StackedColumn = '' THEN '' ELSE @StackedValue END + CASE WHEN @StackedColumn = '' THEN '' ELSE '''' END +
					CASE WHEN @MainAddiCondition = '' THEN '' ELSE ' AND ' END + @MainAddiCondition +
					CASE WHEN @ConditionColumns = '' OR @TableName <> @MainTable THEN '' ELSE @ConditionColumns END +
					CASE WHEN @DeleteCondition = '' THEN '' ELSE ' AND ' END + @DeleteCondition + 
					CASE WHEN @ActiveCondition = '' THEN '' ELSE ' AND ' END + @ActiveCondition + 
					CASE WHEN @VersionCondition = '' THEN '' ELSE ' AND ' END + @VersionCondition +
					CASE WHEN @MainCondition = '' THEN '' ELSE ' AND ' END + @MainCondition + 
					CASE WHEN @SubAddiCondition = '' THEN '' ELSE ' AND ' END + @SubAddiCondition +
					CASE WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @MainTable AND COLUMN_NAME = 'CreatedBy') THEN 
						' AND dbo.fn_GetTableBranchRBSCondition('+ CAST(@IN_UserID AS VARCHAR(5))+ ', MT.CreatedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1'
					WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @MainTable AND COLUMN_NAME = 'ModifiedBy') THEN 
						' AND dbo.fn_GetTableBranchRBSCondition('+CAST(@IN_UserID AS VARCHAR(5))+ ', MT.ModifiedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1'
					ELSE ' ' END +')
				INSERT INTO ##tempChartResult (ChartName,' + CASE WHEN @IsDateValue = 1 THEN 'RangeStartDate, RangeEndDate, ' ELSE 'ChartValue, RangeEndValue, ' END + 'ChartLabel, BarColumn, BarData, StackedColumn, StackedBarData, OrderByValue)
				SELECT ChartName, ' + @ChartValueResult + ', ' + @RangeEndValueResult + ', ChartLabel, BarColumn, BarData, StackedColumn, StackedBarData, OrderByValue
				FROM ChartData' + CASE WHEN @BarLimitCount NOT IN ('', '0') AND ISNULL(@ResultColumnOrder, '') <> '' THEN ' WHERE RowNum <= ' + @BarLimitCount ELSE '' END +
				' GROUP BY ChartLabel, ChartName, BarColumn, BarData, StackedColumn, StackedBarData, OrderByValue ORDER BY OrderByValue'+
				CASE WHEN CHARINDEX(' DESC', @OrderByClause) > 0 THEN ' DESC' ELSE ' ASC' END;
			END
			ELSE
			BEGIN
				SET @TempQuery = 'WITH ChartData AS (
				SELECT	''' + CASE WHEN ISNULL(@StackedName, '') = '' THEN @ChartName ELSE @StackedName END + ''' AS ChartName, '
					+ @ResultColumn + ' AS ChartValue, '
					+ CASE WHEN ISNULL(@RangeEndColumn, '') = '' THEN @ResultColumn ELSE @RangeEndColumn END + ' AS RangeEndValue,
					ISNULL(CONVERT(NVARCHAR(1000), ' + @TextColumn + '), '''') AS ChartLabel,
					''' + @BarColumn + ''' AS BarColumn,
					CONVERT(VARCHAR(200), ISNULL(' + @ValueColumn + ', 0)) AS BarData,
					''' + @StackedColumn + ''' AS StackedColumn,
					' + CASE WHEN ISNULL(@StackedName, '') = '' THEN '0' ELSE 'MT.' + CONVERT(VARCHAR(50), ISNULL(@StackedColumn, 0)) END + ' AS StackedBarData,
					' + CASE WHEN ISNULL(@OrderByColumn, '') = '' THEN 'ISNULL(CONVERT(NVARCHAR(1000), ' + @TextColumn + '), ''NONE'')' ELSE @OrderByColumn END + ' AS OrderByValue
					' + CASE WHEN ISNULL(@ResultColumnOrder, '') <> '' THEN ', ROW_NUMBER() OVER (PARTITION BY ' + @ValueColumn + ' ORDER BY ' + @ResultColumnOrder + ') AS RowNum ' ELSE '' END +
					'FROM ' + @SubTable + ' ST LEFT JOIN ' + @MainTable + ' MT ON ' + @JoinCondition +
					CASE WHEN @StackedColumn = '' THEN '' ELSE ' AND MT.' END + CASE WHEN @StackedColumn = '' THEN '' ELSE @StackedColumn END + 
					CASE WHEN @StackedColumn = '' THEN '' ELSE ' = ''' END + CASE WHEN @StackedColumn = '' THEN '' ELSE @StackedValue END + CASE WHEN @StackedColumn = '' THEN '' ELSE '''' END +
					CASE WHEN @MainAddiCondition = '' THEN '' ELSE ' AND ' END + @MainAddiCondition +
					CASE WHEN @ConditionColumns = '' OR @TableName <> @MainTable THEN '' ELSE @ConditionColumns END +
					CASE WHEN @DeleteCondition = '' THEN '' ELSE ' AND ' END + @DeleteCondition + 
					CASE WHEN @ActiveCondition = '' THEN '' ELSE ' AND ' END + @ActiveCondition + 
					CASE WHEN @VersionCondition = '' THEN '' ELSE ' AND ' END + @VersionCondition +
					' WHERE 1=1' + CASE WHEN @MainCondition = '' THEN '' ELSE ' AND ' END + @MainCondition + 
					CASE WHEN @SubCondition = '' THEN '' ELSE ' AND ' END + @SubCondition +
					CASE WHEN @SubAddiCondition = '' THEN '' ELSE ' AND ' END + @SubAddiCondition +
					CASE WHEN @SubDeleteCondition = '' THEN '' ELSE ' AND ' END + @SubDeleteCondition + 
					CASE WHEN @SubActiveCondition = '' THEN '' ELSE ' AND ' END + @SubActiveCondition + 
					CASE WHEN @SubVersionCondition = '' THEN '' ELSE ' AND ' END + @SubVersionCondition +
					CASE WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @MainTable AND COLUMN_NAME = 'CreatedBy') THEN 
						' AND dbo.fn_GetTableBranchRBSCondition('+ CAST(@IN_UserID AS VARCHAR(5))+ ', MT.CreatedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1'
					WHEN EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @MainTable AND COLUMN_NAME = 'ModifiedBy') THEN 
						' AND dbo.fn_GetTableBranchRBSCondition('+CAST(@IN_UserID AS VARCHAR(5))+ ', MT.ModifiedBy,'+ CAST(@IN_FormID AS VARCHAR(5))+ ') = 1'
					ELSE ' ' END +')
				INSERT INTO ##tempChartResult (ChartName,' + CASE WHEN @IsDateValue = 1 THEN 'RangeStartDate, RangeEndDate, ' ELSE 'ChartValue, RangeEndValue, ' END + 'ChartLabel, BarColumn, BarData, StackedColumn, StackedBarData, OrderByValue)
				SELECT ChartName, ' + @ChartValueResult + ', ' + @RangeEndValueResult + ', ChartLabel, BarColumn, BarData, StackedColumn, StackedBarData, OrderByValue
				FROM ChartData' + CASE WHEN @BarLimitCount NOT IN ('', '0') AND ISNULL(@ResultColumnOrder, '') <> '' THEN ' WHERE RowNum <= ' + @BarLimitCount ELSE '' END +
				' GROUP BY ChartLabel, ChartName, BarColumn, BarData, StackedColumn, StackedBarData, OrderByValue ORDER BY OrderByValue' + 
				CASE WHEN CHARINDEX(' DESC', @OrderByClause) > 0 THEN ' DESC' ELSE ' ASC' END;
			END
			
			EXEC(@TempQuery)
			
			IF @AllBarReq = 'TRUE' 
			BEGIN
				INSERT INTO #tempChartFinalResult (ChartName, ChartValue, RangeEndValue, ChartLabel, BarColumn, BarData,
					StackedColumn, StackedBarData, OrderByValue, ChartNumber)
				SELECT ChartName, CASE WHEN @IsDateValue = 1 THEN FORMAT(MIN(RangeStartDate), 'dd-MMM-yyyy')
										ELSE dbo.fn_ConvertFloatToString(CASE WHEN @ResultType = 'AVG' THEN AVG(ChartValue) ELSE SUM(ChartValue) END) END,
					CASE WHEN @IsDateValue = 1 THEN FORMAT(MAX(RangeEndDate), 'dd-MMM-yyyy')
						ELSE dbo.fn_ConvertFloatToString(CASE WHEN @ResultType = 'AVG' THEN AVG(RangeEndValue) ELSE SUM(RangeEndValue) END) END,
					'All', ISNULL(BarColumn, ''), 0, ISNULL(StackedColumn, ''), 0,  '0', @ColumnMin
				FROM ##tempChartResult
				GROUP BY ChartName,BarColumn,StackedColumn;
			END
      
			INSERT INTO #tempChartFinalResult (ChartName, ChartValue, RangeEndValue, ChartLabel, BarColumn, BarData,
				StackedColumn, StackedBarData, OrderByValue, ChartNumber)
			SELECT ChartName, CASE WHEN @IsDateValue = 1 THEN FORMAT(RangeStartDate, 'dd-MMM-yyyy') ELSE dbo.fn_ConvertFloatToString(ISNULL(ChartValue, 0)) END,
				CASE WHEN @IsDateValue = 1 THEN FORMAT(RangeEndDate, 'dd-MMM-yyyy') ELSE dbo.fn_ConvertFloatToString(ISNULL(RangeEndValue, 0)) END,
				ISNULL(ChartLabel, ''), ISNULL(BarColumn, ''), ISNULL(BarData, 0), ISNULL(StackedColumn, ''), ISNULL(StackedBarData, 0), OrderByValue, @ColumnMin
			FROM ##tempChartResult WHERE ISNULL(ChartLabel, '') <> '';

			INSERT INTO #tempFinalChartData (ChartName, ChartType, ChartNumber)
			VALUES (REPLACE(REPLACE(CASE WHEN ISNULL(@StackedName, '') = '' THEN @ChartName ELSE @StackedName END, '"', '\"'), CHAR(13), ' '), @ChartType, @ColumnMin)

			SET @ColumnMin = @ColumnMin + 1;
		END;

		IF EXISTS (SELECT 1 FROM #tempChartFinalResult WHERE ISNULL(OrderByValue, '') NOT IN ('', '0'))
		BEGIN
			;WITH CTE AS (
				SELECT OrderByValue, DENSE_RANK() OVER (ORDER BY OrderByValue) AS OrderRank
				FROM #tempChartFinalResult
				WHERE ISNULL(ChartValue, '') NOT IN ('')
					AND (ISNULL(@StackedName, '') <> '' OR ISNULL(ChartValue, '') NOT IN ('0'))
					AND ISNULL(OrderByValue, '') NOT IN ('', '0') AND CHARINDEX(' DESC', @OrderByClause) = 0
				UNION ALL
				SELECT OrderByValue, DENSE_RANK() OVER (ORDER BY OrderByValue DESC) AS OrderRank
				FROM #tempChartFinalResult
				WHERE ISNULL(ChartValue, '') NOT IN ('')
					AND (ISNULL(@StackedName, '') <> '' OR ISNULL(ChartValue, '') NOT IN ('0'))
					AND ISNULL(OrderByValue, '') NOT IN ('', '0') AND CHARINDEX(' DESC', @OrderByClause) > 0
			)
			UPDATE FR
			SET OrderByValue = CTE.OrderRank
			FROM #tempChartFinalResult FR
				JOIN CTE ON CTE.OrderByValue = FR.OrderByValue;
		END

		SET @ColumnMin = @MinChartNumber;

		WHILE (@ColumnMin <= @ColumnMax)
		BEGIN
			SET @CurChartData  = '';

			SELECT @CurChartData = @CurChartData  + CASE WHEN @CurChartData <> '' THEN ',' ELSE '' END 
				+ '{"y":' + CASE WHEN CHARINDEX('range', @ChartType) > 0 THEN '["' + ChartValue + '","' + RangeEndValue + '"]' ELSE ChartValue END + ','
				+ CASE WHEN ISNUMERIC(OrderByValue) = 1 THEN '"x":' + OrderByValue + ',' ELSE '' END
				+ '"indexLabel":"' + REPLACE(REPLACE(ChartValue, '"', '\"'), CHAR(13), ' ') + '","label":"' + REPLACE(REPLACE(ChartLabel, '"', '\"'), CHAR(13), ' ') + '","name":"'
				+ REPLACE(REPLACE(CASE WHEN ISNULL(@StackedName, '') = '' THEN ChartLabel ELSE ChartName END, '"', '\"'), CHAR(13), ' ')
				+ '","barColumn":"' + BarColumn + '","barValue":"' + BarData + '","stackedBarColumn":"' + StackedColumn + '","stackedBarValue":"' + StackedBarData +'"}'			
			FROM #tempChartFinalResult
			WHERE ChartNumber = @ColumnMin AND ISNULL(ChartValue, '') NOT IN ('')
				AND (ISNULL(@StackedName, '') <> '' OR ISNULL(ChartValue, '') NOT IN ('0'))
			ORDER BY RowNum;

			SET @CurChartData = ISNULL(@CurChartData, '');

			SELECT @CurChartData = '"name": "' + ISNULL(ChartName, '')
				+ '"' + ',"type": "' + ISNULL(ChartType, '') + '"' + ',"StartPoint": ' + ISNULL(@StartPoint, '')  
				+ ',"CustomPointValue": ' + ISNULL(@IN_CustomPointValue, '') + ',"ChartView": "' + ISNULL(@ChartView, '') + '"' + ',"IsMainPageDashboard": ' + ISNULL(@IsMainPageDashboard, '')  
				+ ',"IsMyDashboardChart": ' + ISNULL(@IsMyDashboard, '') +
				+ ',"dataPoints": [' + @CurChartData + ']'
			FROM #tempFinalChartData WHERE ChartNumber = @ColumnMin;

			IF @ColumnMin > 1
			BEGIN
				SET @ChartData = @ChartData + ','
			END 

			SET @ChartData = @ChartData + '{' + @CurChartData + '}'
			SET @ColumnMin = @ColumnMin + 1;
		END;

		SELECT @ChartData;
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END 
GO
PRINT N'Creating [dbo].[spBIGetDatasource]'
GO

CREATE PROCEDURE [dbo].[spBIGetDatasource](@IN_Query NVARCHAR(MAX))
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50),
						@OutString NVARCHAR(MAX) = ''

		IF @IN_Query <> ''
			EXEC sp_executesql @IN_Query, N'@DOUT NVARCHAR(MAX) OUTPUT', @OutString OUTPUT

		SELECT '['+ @OutString + ']' AS DataSource
  
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END;
GO
PRINT N'Creating [dbo].[spBIGetFKDetails]'
GO

CREATE PROCEDURE [dbo].[spBIGetFKDetails](
	@IN_Event VARCHAR(10), 
	@IN_FkTypeID INT, 
	@IN_FkTable NVARCHAR(100),
	@IN_FormID INT, 
	@IN_UserID INT
)
AS
BEGIN
  SET NOCOUNT ON

  BEGIN TRY
	
	  DECLARE @ErrorMessage NVARCHAR(2000),
			@ErrorSeverity NVARCHAR(50),
			@ErrorState NVARCHAR(50),
			@FKTable NVARCHAR(MAX) ='',
			@FKColumn NVARCHAR(MAX) = ''

		IF @IN_Event = 'Table'
		BEGIN
			IF OBJECT_ID ('tempdb..#tempFkTable') IS NOT NULL DROP TABLE #tempFkTable
			CREATE TABLE #tempFkTable(Name NVARCHAR(500) NULL)

			IF @IN_FkTypeID = 1
			BEGIN
				IF EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CmnCodeMaster]') AND [TYPE] IN (N'U'))
				BEGIN
					INSERT INTO #tempFkTable SELECT DISTINCT(Type) FROM CmnCodeMaster WHERE IsDeleted = 0 AND NotActive = 0 AND IsCurrentVersion = 1;
				END
			END
			ELSE IF @IN_FkTypeID = 2
				IF @IN_FormID = 420
				BEGIN
					INSERT INTO #tempFkTable 
					SELECT Name FROM sys.objects WHERE TYPE IN (N'U')
					UNION
					SELECT Name FROM sys.views as v Order BY Name ASC;
				END
				ELSE
				BEGIN
					INSERT INTO #tempFkTable 
					SELECT Name FROM sys.objects WHERE TYPE IN (N'U') AND Name <> 'CmnFileUpload'
					UNION
					SELECT Name FROM sys.views as v Order BY Name ASC;
				END				
						
			SELECT @FKTable = ISNULL(SUBSTRING((SELECT ',' + ('{"Value":"'+ Name +'","Text":"'+Name+'"}')
			FROM #tempFkTable FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '')

			SELECT '['+@FKTable+']';
	  END
	  ELSE
	  BEGIN
			IF @IN_FkTypeID = 1
				SET @IN_FkTable = 'CmnCodeMaster';     
		
			SELECT @FKColumn = ISNULL(SUBSTRING((SELECT ',' + ('{"Value":"'+ COLUMN_NAME +'","Text":"'+COLUMN_NAME+'"}')
			FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @IN_FkTable ORDER BY ORDINAL_POSITION
			FOR XML PATH(''), ROOT('MyString'), TYPE).value('MyString[1]','NVARCHAR(MAX)'), 2, 4000000000), '');   

			SELECT '['+@FKColumn+']';   
	  END
  
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
		
	END CATCH
		
END;
GO
PRINT N'Creating [dbo].[spBIGetPivotReportData]'
GO

CREATE PROCEDURE [dbo].[spBIGetPivotReportData] (@IN_SourceID INT, @IN_ObjectName NVARCHAR(MAX), @IN_PivotQuery NVARCHAR(MAX) = '', @IN_DetailsQuery NVARCHAR(MAX) = '')

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
						@ErrorMessage NVARCHAR(2000) = '',
						@ErrorState NVARCHAR(50) = '',
						@RQuery NVARCHAR(MAX) = ''
									
		IF @IN_SourceID = 1 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportDataSpTable') IS NOT NULL DROP TABLE ##tempReportDataSpTable
			SET @RQuery = 'EXEC ' + @IN_ObjectName + ' 0, ' + '##tempReportDataSpTable' + ''
			
			EXEC (@RQuery)
		END
		ELSE IF @IN_SourceID = 4 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportDataTable') IS NOT NULL DROP TABLE ##tempReportDataTable
			SET @RQuery = ('SELECT * INTO ##tempReportDataTable FROM (' + @IN_ObjectName + ') TE')
			
			EXEC (@RQuery)
		END

		EXEC (@IN_PivotQuery)

		EXEC (@IN_DetailsQuery)
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spBIGetReportColumnList]'
GO

CREATE PROCEDURE [dbo].[spBIGetReportColumnList] (@IN_SourceID INT, @IN_ObjectName NVARCHAR(MAX))

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
						@ErrorMessage NVARCHAR(2000) = '',
						@ErrorState NVARCHAR(50) = '',
						@RQuery NVARCHAR(MAX) = ''
									
		IF @IN_SourceID = 1 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportSpTable') IS NOT NULL DROP TABLE ##tempReportSpTable
			SET @RQuery = 'EXEC ' + @IN_ObjectName + ' 1, ' + '##tempReportSpTable' + ''
			
			EXEC (@RQuery)

			SELECT v1.name, ty.NAME
			FROM tempdb.SYS.COLUMNS v1 
				JOIN sys.types ty ON v1.user_type_id = ty.user_type_id
			WHERE OBJECT_ID = OBJECT_ID('tempdb..##tempReportSpTable')
		END
		ELSE IF @IN_SourceID = 2 
		BEGIN
			SELECT COLUMN_NAME, DATA_TYPE
			FROM INFORMATION_SCHEMA.COLUMNS
			WHERE TABLE_NAME = @IN_ObjectName
			ORDER BY ORDINAL_POSITION;
		END
		ELSE IF @IN_SourceID = 3 
		BEGIN
			SELECT COLUMN_NAME, DATA_TYPE
			FROM INFORMATION_SCHEMA.COLUMNS
			WHERE TABLE_NAME = @IN_ObjectName
			ORDER BY ORDINAL_POSITION;
		END
		ELSE IF @IN_SourceID = 4 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportQueryTable') IS NOT NULL DROP TABLE ##tempReportQueryTable

			SET @RQuery = ('SELECT * INTO ##tempReportQueryTable FROM (' + @IN_ObjectName + ') TE')

			EXEC (@RQuery)

			SELECT v1.name, ty.NAME
			FROM tempdb.SYS.COLUMNS v1 
				JOIN sys.types ty ON v1.user_type_id = ty.user_type_id
			WHERE OBJECT_ID = OBJECT_ID('tempdb..##tempReportQueryTable')
		END

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE()

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spBIGetReportDataSources]'
GO

CREATE PROCEDURE [dbo].[spBIGetReportDataSources] (@IN_FormID INT = 0, @IN_UserID INT = 0)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = ''
									
		SELECT Name FROM sys.objects WHERE TYPE IN (N'P',N'PC') AND Name LIKE 'RSP_%'

		SELECT Name FROM sys.objects WHERE TYPE IN (N'U');

		SELECT TABLE_NAME AS Name FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME <> 'viewGetDBStoredProcedures' AND TABLE_NAME <> 'viewGetDBViews' AND TABLE_NAME <> 'viewGetDBTables'

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = TypeValues, @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() FROM CmnCodeMaster WHERE [Type] = 'Error Message'

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spBIGetReportData]'
GO

CREATE PROCEDURE [dbo].[spBIGetReportData] (@IN_SourceID INT, @IN_ObjectName NVARCHAR(MAX), @IN_Query NVARCHAR(MAX) = '', @IN_Columns NVARCHAR(MAX) = '', 
	@IN_OrderByClause VARCHAR(1000), @IN_PageIndex INT, @IN_PageSize INT, @IN_SortValues VARCHAR(100), @IN_DataFillType INT, @IN_DecimalLength NVARCHAR(MAX) = '', 
	@IN_DataTypes NVARCHAR(MAX) = '', @IN_BarLimitCount INT = 0, @IN_ResultColumnOrder VARCHAR(MAX) = '')

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
						@ErrorMessage NVARCHAR(2000) = '',
						@ErrorState NVARCHAR(50) = '',
						@RQuery NVARCHAR(MAX) = '',
						@SelectStmt NVARCHAR(MAX) = '',
						@Query NVARCHAR(MAX) = '',
						@CountQuery NVARCHAR(MAX) = '',
						@SortColumn VARCHAR(255) = '',
						@SortType VARCHAR(50) = '',
						@StartIndex INT = 0,
						@EndIndex INT = 0;

		IF @IN_SourceID = 1 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportDataSpTable') IS NOT NULL DROP TABLE ##tempReportDataSpTable
			SET @RQuery = 'EXEC ' + @IN_ObjectName + ' 0, ' + '##tempReportDataSpTable' + ''
			
			EXEC (@RQuery)
		END
		ELSE IF @IN_SourceID = 4 
		BEGIN
			IF OBJECT_ID('tempdb..##tempReportDataTable') IS NOT NULL DROP TABLE ##tempReportDataTable
			SET @RQuery = ('SELECT * INTO ##tempReportDataTable FROM (' + @IN_ObjectName + ') TE')
			
			EXEC (@RQuery)
		END

		IF OBJECT_ID('tempdb..#temp_ReportColumnDetails') IS NOT NULL DROP TABLE #temp_ReportColumnDetails

		CREATE TABLE #temp_ReportColumnDetails (ColumnOrder INT IDENTITY(1, 1) PRIMARY KEY, ColumnName VARCHAR(255), DataType VARCHAR(255), DecimalLength VARCHAR(255));

			WITH IndexedResults AS (
			SELECT items, ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS RowIndex
			FROM dbo.fn_DataSplit(@IN_Columns, ',')
		),
		IndexedResults2 AS (
			SELECT items, ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS RowIndex
			FROM dbo.fn_DataSplit(@IN_DataTypes, ',')
		),
		IndexedResults3 AS (
			SELECT items, ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) AS RowIndex
			FROM dbo.fn_DataSplit(@IN_DecimalLength, ',')
		)
		INSERT INTO #temp_ReportColumnDetails (ColumnName, DataType, DecimalLength)	
		SELECT IR.items, IR2.items, IR3.items
		FROM IndexedResults IR
			JOIN IndexedResults2 IR2 ON IR.RowIndex = IR2.RowIndex
			JOIN IndexedResults3 IR3 ON IR.RowIndex = IR3.RowIndex;

		IF ISNULL(@IN_SortValues, '') <> '' 
		BEGIN
			SET @SortColumn = dbo.fn_SplitString(@IN_SortValues, ',', 1);
			SET @SortType = dbo.fn_SplitString(@IN_SortValues, ',', 2);
		END
		ELSE IF ISNULL(@IN_OrderByClause, '') <> ''
		BEGIN
			SET @SortColumn = @IN_OrderByClause;
		END
		IF ISNULL(@SortColumn, '') = ''
		BEGIN
			SELECT TOP 1 @SortColumn = ColumnName
			FROM #temp_ReportColumnDetails ORDER BY ColumnOrder;
		END

		SELECT @SelectStmt = SUBSTRING((SELECT '+' + ''',"' + RCC.ColumnName + '":"'' + REPLACE(REPLACE(ISNULL(CAST(' + 
			'CASE WHEN CONVERT(NVARCHAR(MAX),' + CASE WHEN RCC.DataType = '8' THEN + ' CAST(MT.' + RCC.ColumnName +' AS DECIMAL(32, ' + RCC.DecimalLength +'))' ELSE 'MT.' + RCC.ColumnName END +', 105)= ''01-01-1900'' THEN ''''
			ELSE CONVERT(NVARCHAR(MAX), ' + CASE WHEN RCC.DataType = '8' THEN + ' CAST(MT.' + RCC.ColumnName +' AS DECIMAL(32, ' + RCC.DecimalLength +'))' ELSE 'MT.' + RCC.ColumnName END + ', 127)END'
			+ ' AS NVARCHAR(MAX)), ''''), ''\'', ''\\''),''"'', ''\"'') + ''"'''
		FROM #temp_ReportColumnDetails RCC
		ORDER BY RCC.ColumnOrder
		FOR XML PATH(''), ROOT('MyString'), TYPE).value('/MyString[1]','NVARCHAR(MAX)'), 2, 4000000000)

		SET @SelectStmt = '''' + SUBSTRING(@SelectStmt, 3, 4000000000)

		IF ISNULL(@IN_PageSize, 0) > 0 AND ISNULL(@IN_DataFillType, 0) <> 0
		BEGIN
			SET @StartIndex = @IN_PageIndex + 1;
			SET @EndIndex = @IN_PageIndex + @IN_PageSize;
			SET @Query = ' ;WITH GridValues AS (SELECT ''{''+' + @SelectStmt + '+''}'' AS Data, ROW_NUMBER() OVER (ORDER BY ' + @SortColumn + ' ' + @SortType + ') AS RowNum '
				+ @IN_Query + ') ' + 'SELECT Data FROM GridValues WHERE RowNum BETWEEN ' 
				+ CONVERT(VARCHAR(50), @StartIndex) + ' AND ' + CONVERT(VARCHAR(50), @EndIndex) + ' ORDER BY RowNum';
		END
		ELSE
			SET @Query = 'SELECT' + CASE WHEN @IN_BarLimitCount <> 0 AND @IN_ResultColumnOrder <> '' THEN CONCAT(' TOP ', @IN_BarLimitCount) ELSE '' END 
				+ '''{''+' + @SelectStmt + '+''}'' ' + @IN_Query + ' ORDER BY ' + CASE WHEN @IN_BarLimitCount <> 0 AND @IN_ResultColumnOrder <> '' THEN 
				CONCAT('MT.', @IN_ResultColumnOrder, ', ') ELSE '' END + '' + @SortColumn + ' ' + @SortType;

		EXEC (@Query)

		SET @CountQuery = 'SELECT COUNT(1) ' + @IN_Query;

		EXEC (@CountQuery)
	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END 
GO
PRINT N'Creating [dbo].[spReportDBConfigValidationUpdated]'
GO

CREATE PROCEDURE [dbo].[spReportDBConfigValidationUpdated] (@IN_DBConfigID INT = 0, @IN_Validated BIT = 0, @IN_FormID INT = 0, @IN_UserID INT = 0)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = ''
									
		UPDATE TlsDBConfigDetails
		SET Validated = @IN_Validated
		WHERE ReferenceID = @IN_DBConfigID;

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = TypeValues, @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() FROM CmnCodeMaster WHERE [Type] = 'Error Message'

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spReportDBConfiguration]'
GO

CREATE PROCEDURE [dbo].[spReportDBConfiguration] (@IN_DBConfigID INT = 0, @IN_FormID INT = 0, @IN_UserID INT = 0)

AS
BEGIN
SET NOCOUNT ON;
	BEGIN TRY 	
		DECLARE @ErrorSeverity NVARCHAR(50) = '',
				@ErrorMessage NVARCHAR(2000) = '',
				@ErrorState NVARCHAR(50) = ''
									
		SELECT ISNULL(DB.ConfigurationName, '') AS ConfigurationName, ISNULL(DB.DatabaseTypeID, 0) AS DatabaseTypeID,
			ISNULL(DT.TypeValues, '') AS DatabaseType, ISNULL(DB.AuthenticationID, 0) AS AuthenticationID,
			ISNULL(DA.TypeValues, '') AS Authentication, ISNULL(DB.ServerName, '') AS ServerName, ISNULL(DB.Username, '') AS Username,
			ISNULL(DB.Password, '') AS Password, ISNULL(DB.PortNo, '') AS PortNo, ISNULL(DB.DatabaseName, '') AS DatabaseName
		FROM TlsDBConfigDetails DB
			LEFT JOIN CmnCodeMaster DT ON DT.Type = 'Database Type' AND DT.CodemasterID = DB.DatabaseTypeID
			LEFT JOIN CmnCodeMaster DA ON DA.Type = 'DB Authentication' AND DA.CodemasterID = DB.AuthenticationID
		WHERE DB.ReferenceID = @IN_DBConfigID
			AND ISNULL(DB.IsDeleted, 0) = 0 AND ISNULL(DB.NotActive, 0) = 0 AND ISNULL(DB.IsCurrentVersion, 1) = 1;

	END TRY
	BEGIN CATCH

		SELECT @ErrorMessage = TypeValues, @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() FROM CmnCodeMaster WHERE [Type] = 'Error Message'

		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH   
END 
GO
PRINT N'Creating [dbo].[spWorkflowGetProcessConfig]'
GO

CREATE PROCEDURE [dbo].[spWorkflowGetProcessConfig] (@IN_WorkflowID BIGINT, @IN_FormID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		DECLARE @ErrorMessage NVARCHAR(2000),
						@ErrorSeverity NVARCHAR(50),
						@ErrorState NVARCHAR(50)

		SELECT WD.ReferenceID AS WorkflowID, ISNULL(WD.Code, '') AS Code, ISNULL(WD.Name, '') AS Name, 
			ISNULL(WD.StatusMaster, '') AS StatusMaster, ISNULL(WD.StatusColumn, '') AS StatusColumn,
			ISNULL(MO.TypeValues, '') AS Module, ISNULL(WD.Description, '') AS Description
		FROM TlsWorkflowDetails WD
			LEFT JOIN CmnCodeMaster MO ON MO.Type = 'Module' AND MO.CodemasterID = WD.ModuleID
		WHERE WD.ReferenceID = @IN_WorkflowID
		ORDER BY WD.OrderBy;

		SELECT WPD.ReferenceID AS ProcessID, ISNULL(WPD.Name, '') AS ProcessName, ISNULL(WPD.IsMandatory, 0) AS IsMandatory,
			ISNULL(WPD.Icon, '') AS Icon, ISNULL(WPD.IsRequired, 0) AS IsRequired, ISNULL(WPD.OrderBy, 0) AS OrderBy,
			ISNULL(WPD.ProcessStatusID, 0) AS ProcessStatusID, ISNULL(PS.TypeValues, '') AS ProcessStatus,
			ISNULL(WPD.PreStatus, '') AS PreStatusIDs
		FROM TlsWorkflowDetails WD
			JOIN TlsWorkflowProcessDetails WPD ON WPD.WorkflowID = WD.ReferenceID
				AND WPD.IsDeleted = 0 AND WPD.NotActive = 0 AND WPD.IsCurrentVersion = 1
			LEFT JOIN CmnCodeMaster PS ON PS.Type = WD.StatusMaster AND PS.CodemasterID = WPD.ProcessStatusID
		WHERE WD.ReferenceID = @IN_WorkflowID
		ORDER BY WPD.OrderBy;

	END TRY
	BEGIN CATCH
		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Creating [dbo].[spWorkflowProcessConfigUpdate]'
GO

CREATE PROCEDURE [dbo].[spWorkflowProcessConfigUpdate] (@IN_WorkflowID BIGINT, @IN_ProcessID BIGINT, @IN_IsRequired BIT,
	@IN_FormID INT, @IN_UserID INT)
AS
BEGIN
SET NOCOUNT ON;
  BEGIN TRY
		BEGIN TRANSACTION tran_ProcessConfigUpdate

			DECLARE @ErrorMessage NVARCHAR(2000),
							@ErrorSeverity NVARCHAR(50),
							@ErrorState NVARCHAR(50),
							@UTCTime DATETIME = GETUTCDATE(),
							@GMTTime DATETIME = dbo.fn_GMTCalculation(@IN_UserID),
							@PreProcessID BIGINT = 0,
							@NextProcessID BIGINT = 0,
							@PreStatus VARCHAR(1000) = '',
							@ProcessOrder INT = 0,
							@ProcessStatusID INT = 0,
							@PreProcessStatusID INT = 0,
							@NextProcessStatusID INT = 0,
							@NextProcessPreStatus VARCHAR(1000) = ''

			UPDATE TlsWorkflowProcessDetails
			SET IsRequired = @IN_IsRequired,
				ModifiedBy = @IN_UserID,
				ModifiedDate = @UTCTime,
				ModifiedDateGMT = @GMTTime
			WHERE WorkflowID = @IN_WorkflowID AND ReferenceID = @IN_ProcessID;

			SELECT @PreStatus = PreStatus, @ProcessOrder = OrderBy, @ProcessStatusID = ProcessStatusID
			FROM TlsWorkflowProcessDetails
			WHERE WorkflowID = @IN_WorkflowID AND ReferenceID = @IN_ProcessID;

			SELECT TOP 1 @PreProcessID = ReferenceID, @PreProcessStatusID = ProcessStatusID
			FROM TlsWorkflowProcessDetails
			WHERE WorkflowID = @IN_WorkflowID AND OrderBy < @ProcessOrder AND IsRequired = 1
				AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1
			ORDER BY OrderBy DESC

			SELECT TOP 1 @NextProcessID = ReferenceID, @NextProcessStatusID = ProcessStatusID, @NextProcessPreStatus = PreStatus
			FROM TlsWorkflowProcessDetails
			WHERE WorkflowID = @IN_WorkflowID AND OrderBy > @ProcessOrder AND IsRequired = 1
				AND ISNULL(IsDeleted, 0) = 0 AND ISNULL(NotActive, 0) = 0 AND ISNULL(IsCurrentVersion, 1) = 1
			ORDER BY OrderBy ASC

			IF @IN_IsRequired = 1
			BEGIN
				IF ISNULL(@PreProcessStatusID, 0) <> 0 
					AND (PATINDEX('%,' + CAST(@PreProcessStatusID AS VARCHAR(50)) + ',%', ',' + @PreStatus + ',') = 0)
				BEGIN
					UPDATE TlsWorkflowProcessDetails
					SET PreStatus = CONCAT(@PreStatus, ',', CAST(@PreProcessStatusID AS VARCHAR(50))),
						ModifiedBy = @IN_UserID,
						ModifiedDate = @UTCTime,
						ModifiedDateGMT = @GMTTime
					WHERE WorkflowID = @IN_WorkflowID AND ReferenceID = @IN_ProcessID;
				END
				IF ISNULL(@PreProcessStatusID, 0) <> 0 
					AND (PATINDEX('%,' + CAST(@PreProcessStatusID AS VARCHAR(50)) + ',%', ',' + @NextProcessPreStatus + ',') > 0)
				BEGIN
					SET @NextProcessPreStatus = REPLACE(',' + @NextProcessPreStatus + ',', CONCAT(',', CAST(@PreProcessStatusID AS VARCHAR(50)), ','), ',')
					IF SUBSTRING(@NextProcessPreStatus, 1, 1) = ','
						SET @NextProcessPreStatus = SUBSTRING(@NextProcessPreStatus, 2, 1001);
					UPDATE TlsWorkflowProcessDetails
					SET PreStatus = @NextProcessPreStatus,
						ModifiedBy = @IN_UserID,
						ModifiedDate = @UTCTime,
						ModifiedDateGMT = @GMTTime
					WHERE WorkflowID = @IN_WorkflowID AND ReferenceID = @NextProcessID;
				END
			END
			ELSE
			BEGIN
				IF ISNULL(@PreProcessStatusID, 0) <> 0 
					AND (PATINDEX('%,' + CAST(@PreProcessStatusID AS VARCHAR(50)) + ',%', ',' + @NextProcessPreStatus + ',') = 0)
				BEGIN
					UPDATE TlsWorkflowProcessDetails
					SET PreStatus = CONCAT(@NextProcessPreStatus, ',', CAST(@PreProcessStatusID AS VARCHAR(50))),
						ModifiedBy = @IN_UserID,
						ModifiedDate = @UTCTime,
						ModifiedDateGMT = @GMTTime
					WHERE WorkflowID = @IN_WorkflowID AND ReferenceID = @NextProcessID;
				END
			END
		COMMIT TRANSACTION tran_ProcessConfigUpdate
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION tran_ProcessConfigUpdate

		SELECT @ErrorMessage = ERROR_MESSAGE(), @ErrorSeverity = ERROR_SEVERITY(), @ErrorState = ERROR_STATE() 
		RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
	END CATCH
END
GO
PRINT N'Adding foreign keys to [dbo].[FormButtonConfig]'
GO
ALTER TABLE [dbo].[FormButtonConfig] ADD CONSTRAINT [FK_FormButtonConfig] FOREIGN KEY ([FormID]) REFERENCES [dbo].[FormConfiguration] ([ReferenceID])
GO
PRINT N'Adding foreign keys to [dbo].[FormRoleConfiguration]'
GO
ALTER TABLE [dbo].[FormRoleConfiguration] ADD CONSTRAINT [FK_FormRoleConfiguration] FOREIGN KEY ([FormID]) REFERENCES [dbo].[FormConfiguration] ([ReferenceID])
GO
PRINT N'Adding foreign keys to [dbo].[FormTabConfig]'
GO
ALTER TABLE [dbo].[FormTabConfig] ADD CONSTRAINT [FK_FormTabConfig] FOREIGN KEY ([FormID]) REFERENCES [dbo].[FormConfiguration] ([ReferenceID])
GO
PRINT N'Adding foreign keys to [dbo].[FormGroupboxConfig]'
GO
ALTER TABLE [dbo].[FormGroupboxConfig] ADD CONSTRAINT [FK_FormGroupboxConfig] FOREIGN KEY ([FormID]) REFERENCES [dbo].[FormConfiguration] ([ReferenceID])
GO

